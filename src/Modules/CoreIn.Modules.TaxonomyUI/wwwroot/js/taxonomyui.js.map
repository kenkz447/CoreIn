{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","admin/taxonomy-UI.jsx","admin/taxonomy-UI/index.jsx","admin/taxonomy-UI/index/components/tu-actionTabControl.jsx","admin/taxonomy-UI/index/components/tu-taxonomyList.jsx","admin/taxonomy-UI/index/components/tu-taxonomyTypeList.jsx","admin/taxonomy-UI/index/redux/tu-actions.jsx","admin/taxonomy-UI/index/redux/tu-ajaxs.jsx","admin/taxonomy-UI/index/redux/tu-formSubmits.jsx","admin/taxonomy-UI/index/redux/tu-keys.jsx","admin/taxonomy-UI/index/redux/tu-reducer.jsx","index.jsx"],"names":[],"mappings":"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","file":"taxonomyui.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿module.exports = {\r\n    index: require('./taxonomy-UI/index')\r\n}","﻿const { combineReducers, createStore } = require('redux');\r\nconst { Provider } = require('react-redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: {fmReducer} } = Corein.components;\r\n\r\nconst tuReducer = require('./index/redux/tu-reducer');\r\nconst EntityTypeList = require('./index/components/tu-taxonomyTypeList');\r\nconst Tabs = require('./index/components/tu-actionTabControl');\r\nconst TaxonomyTree = require('./index/components/tu-taxonomyList');\r\n\r\nconst reducers = {\r\n    fm: fmReducer,\r\n    form: formReducer,\r\n    tu: tuReducer,\r\n    tc: tabControlReducer\r\n}\r\n\r\nconst reducer = combineReducers(reducers);\r\n\r\nconst store = createStore(reducer);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 col-md-4\">\r\n                    <EntityTypeList />\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-4\">\r\n                    <TaxonomyTree />\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-4\">\r\n                    <Tabs />\r\n                </div>\r\n            </div>\r\n        </Provider>\r\n    );\r\n}","﻿const $ = require('jquery');\r\nconst { loadEntityTypes, entityTypeChange, newTaxonomyFormChange, newTaxonomy } = require('../redux/tu-actions');\r\nconst { bindActionCreators } = require('redux');\r\nconst { connect } = require('react-redux');\r\nconst classnames = require('classnames');\r\nconst { form, TabControl, tabControlActions: { tabChange, tabAdd } } = Corein.components;\r\nconst { getNewTaxonomyForm } = require('../redux/tu-ajaxs');\r\nconst { Label } = require('reactstrap');\r\nconst { reduxForm } = require('redux-form');\r\nconst { newTaxonomySubmit } = require('../redux/tu-formSubmits');\r\n\r\nconst ActionTabControl = (props) => {\r\n    const { taxonomyTypeChanged, currentTaxonomyType, newTaxonomyFormChange, activeTab, tabs, tabAdd, tabChange, newTaxonomy } = props;\r\n\r\n    if (!currentTaxonomyType)\r\n        return null;\r\n\r\n    if (taxonomyTypeChanged) {\r\n        getNewTaxonomyForm((formResult) => {\r\n            const vatidateData = { details: formResult.details, meta: formResult.meta };\r\n            const validate = form.validator(vatidateData);\r\n\r\n            var submit = newTaxonomySubmit({ newTaxonomy});\r\n\r\n            const _initialValues = formResult.initialValues;\r\n\r\n            const formProps = {\r\n                form: 'newTaxonomy',\r\n                validate, formData: formResult,\r\n                _initialValues,\r\n                onSubmit: submit\r\n            };\r\n\r\n            tabAdd('new-tax', `New ${currentTaxonomyType.title}`, <form.default {...formProps}/>);\r\n            newTaxonomyFormChange();\r\n        }, currentTaxonomyType.id);\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n            <TabControl activeTab={activeTab} tabs={tabs} tabChange={tabChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => ({\r\n    taxonomyTypeChanged: state.tu.taxonomyTypeChanged,\r\n    currentTaxonomyType: state.tu.current.taxonomyType,\r\n    activeTab: state.tc.active,\r\n    tabs: state.tc.tabs\r\n});\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ newTaxonomyFormChange, tabChange, tabAdd, newTaxonomy }, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(ActionTabControl);\r\n\r\n\r\n","﻿const _ = require('underscore');\r\nconst { bindActionCreators } = require('redux');\r\nconst { connect } = require('react-redux');\r\nconst classnames = require('classnames');\r\nconst Tree = require('react-ui-tree');\r\nconst ajaxs = require('../redux/tu-ajaxs');\r\nconst { form, tabControlActions: { tabRemove, tabAdd } } = Corein.components;\r\nconst { loadTaxonomies, taxonomyClick, taxonomySelect, taxonomiesDeleted, taxonomiesUpdating, taxonomiesUpdated, taxonomyUpdated, componentLoaded} = require('../redux/tu-actions');\r\nconst listToTree = require('list-to-tree');\r\nconst { Button, ButtonGroup } = require('reactstrap');\r\nconst { reduxForm } = require('redux-form');\r\nconst {updateTaxonomySubmit} = require('../redux/tu-formSubmits');\r\n\r\n\r\nconst componentName = \"taxonomyList\";\r\n\r\nclass TaxonomyTypeList extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.loaded = false;\r\n\r\n        this.convertTreeToList = this.convertTreeToList.bind(this);\r\n        this.onTaxonomyUpdate = this.onTaxonomyUpdate.bind(this);\r\n        this.onTaxonomyEditing = this.onTaxonomyEditing.bind(this);\r\n        this.onTaxonomyNodeClick = this.onTaxonomyNodeClick.bind(this);\r\n    }\r\n\r\n    visitNode(node, hashMap, array) {\r\n        if (!hashMap[node.id]) {\r\n            hashMap[node.id] = true;\r\n            array.push(node);\r\n        }\r\n    }\r\n\r\n    convertTreeToList(root) {\r\n        var stack = [], array = [], hashMap = {};\r\n        stack.push(root);\r\n\r\n        var currentParent = root;\r\n        while (stack.length !== 0) {\r\n            var node = stack.pop();\r\n            var notRoot = node.id && true;\r\n\r\n            if (!node.children) {\r\n                this.visitNode(node, hashMap, array);\r\n            } else {\r\n                if (notRoot)\r\n                    array.push(node);\r\n                for (var i = node.children.length - 1; i >= 0; i--) {\r\n                    node.children[i].parentId = node.id\r\n                    stack.push(node.children[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    renderNode(node) {\r\n        const { currentTaxonomy, taxonomySelect, selectedTaxonomies} = this.props;\r\n        var isActive = (currentTaxonomy && (node.id === currentTaxonomy.id));\r\n        var isChecked = _.findWhere(selectedTaxonomies, { id: node.id }) && true;\r\n        return (\r\n            <div className={classnames('node', { 'active': isActive })} onClick={() => { this.onTaxonomyNodeClick(node) }}>\r\n                {node.id && <input type=\"checkbox\" checked={isChecked} onClick={() => { taxonomySelect(node.id && node); }} />}\r\n                <span>\r\n                    {node.title}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onTaxonomyNodeClick(node) {\r\n        const { taxonomyClick } = this.props;\r\n        taxonomyClick(node.id && node);\r\n    }\r\n\r\n    onTaxonomyUpdate() {\r\n        const { taxonomies, taxonomiesUpdating, taxonomiesUpdated } = this.props;\r\n        taxonomiesUpdating();\r\n        ajaxs.updateTaxonomies(taxonomiesUpdated, taxonomies);\r\n    }\r\n\r\n    onTaxonomyEditing() {\r\n        const {tabAdd, tabRemove, currentTaxonomy, taxonomyUpdated} = this.props;\r\n        ajaxs.getTaxonomyFormFor((formResult) => {\r\n            const vatidateData = { details: formResult.details, meta: formResult.meta };\r\n            const validate = form.validator(vatidateData);\r\n\r\n            var submit = updateTaxonomySubmit({ successAction: taxonomyUpdated });\r\n\r\n            const formProps = {\r\n                form: 'edit-taxonomy',\r\n                validate,\r\n                formData: formResult,\r\n                _initialValues: formResult.initialValues,\r\n                onSubmit: submit\r\n            };\r\n\r\n            tabRemove('edit-taxonomy');\r\n            tabAdd('edit-taxonomy', `${currentTaxonomy.title}`, <form.default {...formProps}/>);\r\n        }, currentTaxonomy.id);\r\n    }\r\n\r\n    render() {\r\n        const { componentLoaded, taxonomies, currentTaxonomy, currentTaxonomyType, loadTaxonomies, taxonomiesChanged, taxonomiesDeleted, selectedTaxonomies, isTaxonomiesUpdating } = this.props;\r\n\r\n        if (!currentTaxonomyType || taxonomies == null)\r\n            return null;\r\n\r\n        global.selectedTaxonomyId = currentTaxonomy ? currentTaxonomy.id : null;\r\n\r\n        if (taxonomies.length === 0) {\r\n            ajaxs.getTaxonomies((taxonomiesResult) => {\r\n                loadTaxonomies(taxonomiesResult);\r\n            }, currentTaxonomyType.id)\r\n            this.loaded = true;\r\n            return null;\r\n        }\r\n\r\n        const ltt = new listToTree(taxonomies, {\r\n            key_id: 'id',\r\n            key_parent: 'parentId',\r\n            key_child: 'children'\r\n        });\r\n\r\n        const taxonomyTree = { title: currentTaxonomyType.title, children: ltt.GetTree() };\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-block\">\r\n                    <ButtonGroup>\r\n                        <Button type=\"button\" disabled={!currentTaxonomy && true} onClick={this.onTaxonomyEditing}>Edit</Button>\r\n                        <Button type=\"button\" disabled={isTaxonomiesUpdating} onClick={this.onTaxonomyUpdate}>Update</Button>\r\n                        <Button type=\"button\" disabled={selectedTaxonomies.length === 0} onClick={() => { ajaxs.deleteTaxonomies(taxonomiesDeleted, selectedTaxonomies.map((taxonomy) => (taxonomy.id))) }}>Delete</Button>\r\n                    </ButtonGroup>\r\n                    <hr />\r\n                    <Tree\r\n                        paddingLeft={20}\r\n                        tree={taxonomyTree}\r\n                        onChange={(root) => {\r\n                            loadTaxonomies(this.convertTreeToList(root));\r\n                        }}\r\n                        renderNode={this.renderNode.bind(this)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst stateToProps = (state) => ({\r\n    currentTaxonomy: state.tu.current.taxonomy,\r\n    currentTaxonomyType: state.tu.current.taxonomyType,\r\n    taxonomies: state.tu.current.taxonomies,\r\n    selectedTaxonomies: state.tu.selectedTaxonomies,\r\n    isTaxonomiesUpdating: state.tu.isTaxonomiesUpdating\r\n});\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({\r\n        loadTaxonomies,\r\n        taxonomyClick,\r\n        taxonomySelect,\r\n        taxonomiesDeleted,\r\n        taxonomiesUpdating,\r\n        taxonomiesUpdated,\r\n        taxonomyUpdated,\r\n        componentLoaded,\r\n        tabAdd,\r\n        tabRemove\r\n    }, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(TaxonomyTypeList);\r\n\r\n\r\n","﻿const $ = require('jquery');\r\nconst _ = require('underscore');\r\nconst ajaxs = require('../redux/tu-ajaxs');\r\nconst { loadTaxonomyTypes, loadTaxonomies, entityTypeChange, taxonomyTypeChange } = require('../redux/tu-actions');\r\nconst { bindActionCreators } = require('redux');\r\nconst { connect } = require('react-redux');\r\nconst { ListGroup, ListGroupItem, Label, Collapse, Card, CardBlock } = require('reactstrap');\r\n\r\n_.groupByMulti = function (obj, values, context) {\r\n    if (!values.length)\r\n        return obj;\r\n    var byFirst = _.groupBy(obj, values[0], context),\r\n        rest = values.slice(1);\r\n    for (var prop in byFirst) {\r\n        byFirst[prop] = _.groupByMulti(byFirst[prop], rest, context);\r\n    }\r\n    return byFirst;\r\n};\r\n\r\nconst TaxonomyTypeList = (props) => {\r\n    const {loadTaxonomyTypes, loadTaxonomies, currentEntityType, currentTaxonomyType, taxonomyTypes, entityTypeChange, taxonomyTypeChange} = props;\r\n\r\n    if (taxonomyTypes.length === 0) {\r\n        ajaxs.getTaxonomyTypes((taxonomyTypeResult) => {\r\n            loadTaxonomyTypes(taxonomyTypeResult);\r\n        });\r\n        return null;\r\n    }\r\n\r\n    const entityTypeGroups = _.groupByMulti(taxonomyTypes, ['entityTypeGroup', 'entityType'], null);\r\n\r\n    return (\r\n        <div className=\"entity-type-groups\">\r\n            {entityTypeGroups &&\r\n                $.map(entityTypeGroups, (entityTypeGroup,index) => {\r\n                    return (\r\n                        <div key={index} className=\"entity-type-group mb-1\">\r\n                            <Label><strong>{index}</strong></Label>\r\n                            <ListGroup>\r\n                                {\r\n                                    $.map(entityTypeGroup, (entityTypes, index) => {\r\n                                        const entityTypeName = index;\r\n                                        const isActive = (entityTypeName === currentEntityType);\r\n                                        return (\r\n                                            <div key={index}>\r\n                                                <ListGroupItem action tag=\"button\" onClick={() => { entityTypeChange(entityTypeName) }}>{entityTypeName}</ListGroupItem>\r\n                                                {\r\n                                                    <Collapse isOpen={isActive}>\r\n                                                        <ListGroup>\r\n                                                            {\r\n                                                                entityTypes.map((taxonomyType) => {\r\n                                                                    const isCurrentTaxType = (currentTaxonomyType && currentTaxonomyType.name === taxonomyType.name);\r\n                                                                    return (\r\n                                                                        <ListGroupItem key={taxonomyType.name} active={isCurrentTaxType} action tag=\"button\"\r\n                                                                            onClick={() => {\r\n                                                                                taxonomyTypeChange(taxonomyType);\r\n                                                                            }}>\r\n                                                                            <i className=\"fa fa-caret-right ml-1 mr-1\" aria-hidden=\"true\"></i>\r\n                                                                            {taxonomyType.title}\r\n                                                                        </ListGroupItem>\r\n                                                                    );\r\n                                                                })\r\n                                                            }\r\n                                                        </ListGroup>\r\n                                                    </Collapse>\r\n                                                }\r\n                                            </div>);\r\n                                    })\r\n                                }\r\n                            </ListGroup>\r\n                        </div>\r\n                    );\r\n\r\n                })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => ({\r\n    taxonomyTypes: state.tu.taxonomyTypes,\r\n    currentEntityType: state.tu.current.entityType,\r\n    currentTaxonomyType: state.tu.current.taxonomyType\r\n});\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ loadTaxonomyTypes, loadTaxonomies, entityTypeChange, taxonomyTypeChange }, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(TaxonomyTypeList);","﻿const keys = require('./tu-keys');\r\n\r\nconst loadTaxonomyTypes = (taxonomyTypes) => ({\r\n    type: keys.loadTaxonomyTypes,\r\n    taxonomyTypes\r\n});\r\n\r\nconst entityTypeChange = (entityType) => ({\r\n    type: keys.entityTypeChange,\r\n    entityType\r\n});\r\n\r\nconst taxonomyTypeChange = (taxonomyType) => ({\r\n    type: keys.taxonomyTypeChange,\r\n    taxonomyType\r\n});\r\n\r\nconst newTaxonomyFormChange = () => ({\r\n    type: keys.newTaxonomyFormChange,\r\n});\r\n\r\nconst loadTaxonomies = (taxonomies) => ({\r\n    type: keys.loadTaxonomies,\r\n    taxonomies\r\n});\r\n\r\nconst newTaxonomy = (taxonomy) => ({\r\n    type: keys.newTaxonomy,\r\n    taxonomy\r\n}); \r\n\r\nconst taxonomyClick = (taxonomy) => ({\r\n    type: keys.taxonomyClick,\r\n    taxonomy\r\n});\r\n\r\nconst taxonomiesDeleted = (deleteResult) => ({\r\n    type: keys.taxonomiesDeleted,\r\n    deleteResult\r\n});\r\n\r\nconst taxonomySelect = (taxonomy) => ({\r\n    type: keys.taxonomySelect,\r\n    taxonomy\r\n});\r\n\r\nconst taxonomiesUpdating = () => ({\r\n    type: keys.taxonomiesUpdating,\r\n});\r\n\r\nconst taxonomiesUpdated = (updateResult) => ({\r\n    type: keys.taxonomiesUpdated,\r\n    updateResult\r\n});\r\n\r\nconst taxonomyUpdated = (updateResult) => ({\r\n    type: keys.taxonomyUpdated,\r\n    updateResult\r\n});\r\n\r\nconst componentLoaded = (componentName) => ({\r\n    type: keys.componentLoaded,\r\n    componentName\r\n});\r\n\r\nmodule.exports = {\r\n    loadTaxonomyTypes,\r\n    entityTypeChange,\r\n    taxonomyTypeChange,\r\n    newTaxonomyFormChange,\r\n    loadTaxonomies,\r\n    newTaxonomy,\r\n    taxonomyClick,\r\n    taxonomiesDeleted,\r\n    taxonomySelect,\r\n    taxonomiesUpdating,\r\n    taxonomiesUpdated,\r\n    taxonomyUpdated,\r\n    componentLoaded\r\n};","﻿const $ = require('jquery');\r\n\r\nconst getTaxonomyTypes = (handler) => {\r\n    $.ajax({\r\n        url: \"/taxonomyui/GetTaxonomyTypes\",\r\n        type: \"GET\",\r\n        success: handler\r\n    });\r\n};\r\n\r\nconst getNewTaxonomyForm = (handler, taxonomyTypeId) => {\r\n    $.ajax({\r\n        url: \"/taxonomyui/GetTaxonomyForm\",\r\n        data: { taxonomyTypeId },\r\n        type: \"GET\",\r\n        success: handler\r\n    });\r\n};\r\n\r\nconst getTaxonomies = (handler, taxonomyTypeId) => {\r\n    $.ajax({\r\n        url: \"/taxonomyui/GetTaxonomies\",\r\n        data: { taxonomyTypeId },\r\n        type: \"GET\",\r\n        success: handler\r\n    });\r\n};\r\n\r\nconst deleteTaxonomies = (handler, taxonomyIds) => {\r\n    $.ajax({\r\n        url: \"/taxonomyui/DeleteTaxonomies\",\r\n        data: { taxonomyIds },\r\n        method: 'DELETE',\r\n        success: (result) => {\r\n            handler(result);\r\n        }\r\n    });\r\n};\r\n\r\nconst updateTaxonomies = (handler, taxonomies) => {\r\n    $.ajax({\r\n        url: \"/taxonomyui/UpdateTaxonomyTree\",\r\n        data: { viewModels: taxonomies },\r\n        method: 'PUT',\r\n        success: handler\r\n    });\r\n};\r\n\r\nconst getTaxonomyFormFor = (handler, taxonomyId) => {\r\n    $.ajax({\r\n        url: \"/taxonomyui/GetTaxonomyFormFor\",\r\n        data: { taxonomyId},\r\n        success: handler\r\n    });\r\n};\r\n\r\nmodule.exports = { getTaxonomyTypes, getNewTaxonomyForm, getTaxonomies, deleteTaxonomies, updateTaxonomies, getTaxonomyFormFor };","﻿const $ = require('jquery');\r\nconst {SubmissionError} = require('redux-form');\r\nconst { parentId } = Corein.components.appKeys;\r\n\r\nconst newTaxonomyRequest = (data) => new Promise((resolve, reject) =>\r\n    $.ajax({\r\n        url: '/taxonomyui/NewTaxonomy',\r\n        method: 'POST',\r\n        data: data,\r\n        success: (response) => {\r\n            if (response.id) {\r\n                resolve(response);\r\n            } else {\r\n                reject(response);\r\n            }\r\n        },\r\n        error: (response) => {\r\n            reject(response);\r\n        }\r\n    })\r\n);\n\nfunction newTaxonomySubmit(props) {\r\n    const {newTaxonomy, selectedTaxonomyId} = props;\r\n\r\n    return function (formValues) {\r\n\r\n        if (formValues.meta)\r\n            formValues.meta[parentId] = global.selectedTaxonomyId;\r\n\r\n        return newTaxonomyRequest(formValues)\r\n            .then((response) => {\r\n                newTaxonomy(response);\r\n            })\r\n            .catch((response) => {\r\n                if (response.result && response.result === \"error\") {\r\n                    throw new SubmissionError(response.errors);\r\n                } else {\r\n                    throw new SubmissionError({ _error: 'Something wrong?' });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nconst updateTaxonomyRequest = (data) => new Promise((resolve, reject) =>\r\n    $.ajax({\r\n        url: '/taxonomyui/UpdateTaxonomy',\r\n        method: 'PUT',\r\n        data: data,\r\n        success: (response) => {\r\n            if (response.resultState !== 0) {\r\n                resolve(response);\r\n            } else {\r\n                reject(response);\r\n            }\r\n        },\r\n        error: (response) => {\r\n            reject(response);\r\n        }\r\n    })\r\n);\n\nfunction updateTaxonomySubmit(props) {\r\n\r\n    return function (formValues) {\r\n        const {successAction, currentTaxonomy} = props;\r\n\r\n        return updateTaxonomyRequest(formValues)\r\n            .then((response) => {\r\n                successAction(response);\r\n            })\r\n            .catch((response) => {\r\n                if (response.result && response.result === \"error\") {\r\n                    throw new SubmissionError(response.errors);\r\n                } else {\r\n                    throw new SubmissionError({ _error: 'Something wrong?' });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    newTaxonomySubmit,\r\n    updateTaxonomySubmit\r\n}","﻿const keys = {\r\n    loadTaxonomyTypes: \"LOAD_TAXONOMY_TYPES\",\r\n    entityTypeChange: \"ENTITY_TYPE_CHANGE\",\r\n    taxonomyTypeChange: \"TAXONOMY_TYPE_CHANGE\",\r\n    newTaxonomyFormChange: \"NEW_TAXONOMY_FORM_CHANGE\",\r\n    addTab: \"ADD_TAB\",\r\n    loadTaxonomies: \"LOAD_TAXONOMIES\",\r\n    newTaxonomy: \"NEW_TAXONOMY\",\r\n    taxonomyClick: \"TAXONOMY_CLICK\",\r\n    taxonomiesDeleted: \"TAXONOMIES_DELETED\",\r\n    taxonomySelect: \"TAXONOMY_SELECT\",\r\n    taxonomiesUpdating: \"TAXONOMIES_UPDATING\",\r\n    taxonomiesUpdated: \"TAXONOMIES_UPDATED\",\r\n    taxonomyUpdated: \"TAXONOMY_UPDATED\",\r\n    componentLoaded: \"COMPONENT_LOADED\"\r\n};\r\n\r\nmodule.exports = keys;","﻿const $ = require('jquery');\r\nconst keys = require('./tu-keys');\r\nconst _ = require('underscore');\r\n\r\nconst initState = {\r\n    taxonomyTypes: [],\r\n    taxonomyTypeChanged: false,\r\n    isTaxonomiesUpdating: false,\r\n    selectedTaxonomies: [],\r\n    current: {\r\n        taxonomies: [],\r\n        taxonomy: null,\r\n        taxonomyType: null,\r\n        entityType: ''\r\n    }\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) { \r\n        case keys.loadTaxonomyTypes:\r\n            newState.taxonomyTypes = action.taxonomyTypes;\r\n            break;\r\n        case keys.entityTypeChange:\r\n            newState.current.entityType = action.entityType;\r\n            break;\r\n        case keys.taxonomyTypeChange:\r\n            newState.taxonomyTypeChanged = true;\r\n            newState.current.taxonomyType = action.taxonomyType;\r\n            newState.current.taxonomies = [];\r\n            break;\r\n        case keys.newTaxonomyFormChange:\r\n            newState.taxonomyTypeChanged = false;\r\n            break;\r\n        case keys.loadTaxonomies:\r\n            if (action.taxonomies.length === 0)\r\n                newState.current.taxonomies = null;\r\n            else\r\n                newState.current.taxonomies = action.taxonomies;\r\n            break;\r\n        case keys.newTaxonomy:\r\n            if (!newState.current.taxonomies)\r\n                newState.current.taxonomies = [];\r\n            newState.current.taxonomies.push(action.taxonomy);\r\n            break;\r\n        case keys.taxonomyClick:\r\n            newState.current.taxonomy = action.taxonomy;\r\n            break;\r\n        case keys.taxonomiesDeleted:\r\n            newState.selectedTaxonomies = [];\r\n            if (typeof action.deleteResult !== 'string')\r\n                newState.current.taxonomies = action.deleteResult;\r\n            break;\r\n        case keys.taxonomySelect:\r\n            var taxonomy = _.find(newState.selectedTaxonomies, { id: action.taxonomy.id });\r\n            if (taxonomy)\r\n                newState.selectedTaxonomies = _.without(newState.selectedTaxonomies, taxonomy);\r\n            else\r\n                newState.selectedTaxonomies.push(action.taxonomy);\r\n            break;\r\n        case keys.taxonomiesUpdating:\r\n            newState.isTaxonomiesUpdating = true;\r\n            break;\r\n        case keys.taxonomiesUpdated:\r\n            newState.isTaxonomiesUpdating = false;\r\n            newState.current.taxonomies = action.updateResult.result;\r\n            break;\r\n        case keys.taxonomyUpdated:\r\n            var taxonomyIndex = _.findIndex(newState.current.taxonomies, { id: action.updateResult.result.id });\r\n            if (taxonomyIndex >= 0)\r\n                newState.current.taxonomies[taxonomyIndex] = action.updateResult.result;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nmodule.exports = reducer;","﻿global.Admin = {\r\n    taxonomyUI: require('./admin/taxonomy-UI')\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcZG90bmV0XFxDb3JlSW5cXENvcmVJblxcc3JjXFxXZWJob3N0XFxNb2R1bGVzXFxDb3JlSW4uTW9kdWxlcy5UYXhvbm9teVVJXFxub2RlX21vZHVsZXNcXGJyb3dzZXItcGFja1xcX3ByZWx1ZGUuanMiLCJEOlxccHJvamVjdHNcXGRvdG5ldFxcQ29yZUluXFxDb3JlSW5cXHNyY1xcV2ViaG9zdFxcTW9kdWxlc1xcQ29yZUluLk1vZHVsZXMuVGF4b25vbXlVSVxcZGV2ZWxvcFxcc2NyaXB0c1xcYWRtaW5cXHRheG9ub215LVVJLmpzeCIsIkQ6XFxwcm9qZWN0c1xcZG90bmV0XFxDb3JlSW5cXENvcmVJblxcc3JjXFxXZWJob3N0XFxNb2R1bGVzXFxDb3JlSW4uTW9kdWxlcy5UYXhvbm9teVVJXFxkZXZlbG9wXFxzY3JpcHRzXFxhZG1pblxcdGF4b25vbXktVUlcXGluZGV4LmpzeCIsIkQ6XFxwcm9qZWN0c1xcZG90bmV0XFxDb3JlSW5cXENvcmVJblxcc3JjXFxXZWJob3N0XFxNb2R1bGVzXFxDb3JlSW4uTW9kdWxlcy5UYXhvbm9teVVJXFxkZXZlbG9wXFxzY3JpcHRzXFxhZG1pblxcdGF4b25vbXktVUlcXGluZGV4XFxjb21wb25lbnRzXFx0dS1hY3Rpb25UYWJDb250cm9sLmpzeCIsIkQ6XFxwcm9qZWN0c1xcZG90bmV0XFxDb3JlSW5cXENvcmVJblxcc3JjXFxXZWJob3N0XFxNb2R1bGVzXFxDb3JlSW4uTW9kdWxlcy5UYXhvbm9teVVJXFxkZXZlbG9wXFxzY3JpcHRzXFxhZG1pblxcdGF4b25vbXktVUlcXGluZGV4XFxjb21wb25lbnRzXFx0dS10YXhvbm9teUxpc3QuanN4IiwiRDpcXHByb2plY3RzXFxkb3RuZXRcXENvcmVJblxcQ29yZUluXFxzcmNcXFdlYmhvc3RcXE1vZHVsZXNcXENvcmVJbi5Nb2R1bGVzLlRheG9ub215VUlcXGRldmVsb3BcXHNjcmlwdHNcXGFkbWluXFx0YXhvbm9teS1VSVxcaW5kZXhcXGNvbXBvbmVudHNcXHR1LXRheG9ub215VHlwZUxpc3QuanN4IiwiRDpcXHByb2plY3RzXFxkb3RuZXRcXENvcmVJblxcQ29yZUluXFxzcmNcXFdlYmhvc3RcXE1vZHVsZXNcXENvcmVJbi5Nb2R1bGVzLlRheG9ub215VUlcXGRldmVsb3BcXHNjcmlwdHNcXGFkbWluXFx0YXhvbm9teS1VSVxcaW5kZXhcXHJlZHV4XFx0dS1hY3Rpb25zLmpzeCIsIkQ6XFxwcm9qZWN0c1xcZG90bmV0XFxDb3JlSW5cXENvcmVJblxcc3JjXFxXZWJob3N0XFxNb2R1bGVzXFxDb3JlSW4uTW9kdWxlcy5UYXhvbm9teVVJXFxkZXZlbG9wXFxzY3JpcHRzXFxhZG1pblxcdGF4b25vbXktVUlcXGluZGV4XFxyZWR1eFxcdHUtYWpheHMuanN4IiwiRDpcXHByb2plY3RzXFxkb3RuZXRcXENvcmVJblxcQ29yZUluXFxzcmNcXFdlYmhvc3RcXE1vZHVsZXNcXENvcmVJbi5Nb2R1bGVzLlRheG9ub215VUlcXGRldmVsb3BcXHNjcmlwdHNcXGFkbWluXFx0YXhvbm9teS1VSVxcaW5kZXhcXHJlZHV4XFx0dS1mb3JtU3VibWl0cy5qc3giLCJEOlxccHJvamVjdHNcXGRvdG5ldFxcQ29yZUluXFxDb3JlSW5cXHNyY1xcV2ViaG9zdFxcTW9kdWxlc1xcQ29yZUluLk1vZHVsZXMuVGF4b25vbXlVSVxcZGV2ZWxvcFxcc2NyaXB0c1xcYWRtaW5cXHRheG9ub215LVVJXFxpbmRleFxccmVkdXhcXHR1LWtleXMuanN4IiwiRDpcXHByb2plY3RzXFxkb3RuZXRcXENvcmVJblxcQ29yZUluXFxzcmNcXFdlYmhvc3RcXE1vZHVsZXNcXENvcmVJbi5Nb2R1bGVzLlRheG9ub215VUlcXGRldmVsb3BcXHNjcmlwdHNcXGFkbWluXFx0YXhvbm9teS1VSVxcaW5kZXhcXHJlZHV4XFx0dS1yZWR1Y2VyLmpzeCIsIkQ6XFxwcm9qZWN0c1xcZG90bmV0XFxDb3JlSW5cXENvcmVJblxcc3JjXFxXZWJob3N0XFxNb2R1bGVzXFxDb3JlSW4uTW9kdWxlcy5UYXhvbm9t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ckIsSUFBSSxhQUFhLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxFQUFFLEVBQUUsRUFBRSxNQUFNLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ3BHLElBQUksYUFBYSxJQUFJLENBQUM7Z0JBQ2xCLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDO1lBQzVFLE1BQU07UUFDVjtZQUNJLE9BQU8sS0FBSyxDQUFDO0tBQ3BCO0lBQ0QsT0FBTyxRQUFRLENBQUM7QUFDcEIsQ0FBQyxDQUFDOztBQUVGLE1BQU0sQ0FBQyxPQUFPLEdBQUcsT0FBTzs7O0FDOUV4QixDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUc7SUFDWixVQUFVLEVBQUUsT0FBTyxDQUFDLHFCQUFxQixDQUFDIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIil9dmFyIGY9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sZixmLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIu+7v21vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgaW5kZXg6IHJlcXVpcmUoJy4vdGF4b25vbXktVUkvaW5kZXgnKVxyXG59Iiwi77u/Y29uc3QgeyBjb21iaW5lUmVkdWNlcnMsIGNyZWF0ZVN0b3JlIH0gPSByZXF1aXJlKCdyZWR1eCcpO1xyXG5jb25zdCB7IFByb3ZpZGVyIH0gPSByZXF1aXJlKCdyZWFjdC1yZWR1eCcpO1xyXG5jb25zdCBmb3JtUmVkdWNlciA9IHJlcXVpcmUoJ3JlZHV4LWZvcm0nKS5yZWR1Y2VyO1xyXG5cclxuY29uc3QgeyB0YWJDb250cm9sUmVkdWNlciwgZmlsZU1hbmFnZXI6IHtmbVJlZHVjZXJ9IH0gPSBDb3JlaW4uY29tcG9uZW50cztcclxuXHJcbmNvbnN0IHR1UmVkdWNlciA9IHJlcXVpcmUoJy4vaW5kZXgvcmVkdXgvdHUtcmVkdWNlcicpO1xyXG5jb25zdCBFbnRpdHlUeXBlTGlzdCA9IHJlcXVpcmUoJy4vaW5kZXgvY29tcG9uZW50cy90dS10YXhvbm9teVR5cGVMaXN0Jyk7XHJcbmNvbnN0IFRhYnMgPSByZXF1aXJlKCcuL2luZGV4L2NvbXBvbmVudHMvdHUtYWN0aW9uVGFiQ29udHJvbCcpO1xyXG5jb25zdCBUYXhvbm9teVRyZWUgPSByZXF1aXJlKCcuL2luZGV4L2NvbXBvbmVudHMvdHUtdGF4b25vbXlMaXN0Jyk7XHJcblxyXG5jb25zdCByZWR1Y2VycyA9IHtcclxuICAgIGZtOiBmbVJlZHVjZXIsXHJcbiAgICBmb3JtOiBmb3JtUmVkdWNlcixcclxuICAgIHR1OiB0dVJlZHVjZXIsXHJcbiAgICB0YzogdGFiQ29udHJvbFJlZHVjZXJcclxufVxyXG5cclxuY29uc3QgcmVkdWNlciA9IGNvbWJpbmVSZWR1Y2VycyhyZWR1Y2Vycyk7XHJcblxyXG5jb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKHJlZHVjZXIpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSAocHJvcHMpID0+IHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1zbS02IGNvbC1tZC00XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPEVudGl0eVR5cGVMaXN0IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXNtLTYgY29sLW1kLTRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8VGF4b25vbXlUcmVlIC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXNtLTYgY29sLW1kLTRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8VGFicyAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvUHJvdmlkZXI+XHJcbiAgICApO1xyXG59Iiwi77u/Y29uc3QgJCA9IHJlcXVpcmUoJ2pxdWVyeScpO1xyXG5jb25zdCB7IGxvYWRFbnRpdHlUeXBlcywgZW50aXR5VHlwZUNoYW5nZSwgbmV3VGF4b25vbXlGb3JtQ2hhbmdlLCBuZXdUYXhvbm9teSB9ID0gcmVxdWlyZSgnLi4vcmVkdXgvdHUtYWN0aW9ucycpO1xyXG5jb25zdCB7IGJpbmRBY3Rpb25DcmVhdG9ycyB9ID0gcmVxdWlyZSgncmVkdXgnKTtcclxuY29uc3QgeyBjb25uZWN0IH0gPSByZXF1aXJlKCdyZWFjdC1yZWR1eCcpO1xyXG5jb25zdCBjbGFzc25hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xyXG5jb25zdCB7IGZvcm0sIFRhYkNvbnRyb2wsIHRhYkNvbnRyb2xBY3Rpb25zOiB7IHRhYkNoYW5nZSwgdGFiQWRkIH0gfSA9IENvcmVpbi5jb21wb25lbnRzO1xyXG5jb25zdCB7IGdldE5ld1RheG9ub215Rm9ybSB9ID0gcmVxdWlyZSgnLi4vcmVkdXgvdHUtYWpheHMnKTtcclxuY29uc3QgeyBMYWJlbCB9ID0gcmVxdWlyZSgncmVhY3RzdHJhcCcpO1xyXG5jb25zdCB7IHJlZHV4Rm9ybSB9ID0gcmVxdWlyZSgncmVkdXgtZm9ybScpO1xyXG5jb25zdCB7IG5ld1RheG9ub215U3VibWl0IH0gPSByZXF1aXJlKCcuLi9yZWR1eC90dS1mb3JtU3VibWl0cycpO1xyXG5cclxuY29uc3QgQWN0aW9uVGFiQ29udHJvbCA9IChwcm9wcykgPT4ge1xyXG4gICAgY29uc3QgeyB0YXhvbm9teVR5cGVDaGFuZ2VkLCBjdXJyZW50VGF4b25vbXlUeXBlLCBuZXdUYXhvbm9teUZvcm1DaGFuZ2UsIGFjdGl2ZVRhYiwgdGFicywgdGFiQWRkLCB0YWJDaGFuZ2UsIG5ld1RheG9ub215IH0gPSBwcm9wcztcclxuXHJcbiAgICBpZiAoIWN1cnJlbnRUYXhvbm9teVR5cGUpXHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgaWYgKHRheG9ub215VHlwZUNoYW5nZWQpIHtcclxuICAgICAgICBnZXROZXdUYXhvbm9teUZvcm0oKGZvcm1SZXN1bHQpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgdmF0aWRhdGVEYXRhID0geyBkZXRhaWxzOiBmb3JtUmVzdWx0LmRldGFpbHMsIG1ldGE6IGZvcm1SZXN1bHQubWV0YSB9O1xyXG4gICAgICAgICAgICBjb25zdCB2YWxpZGF0ZSA9IGZvcm0udmFsaWRhdG9yKHZhdGlkYXRlRGF0YSk7XHJcblxyXG4gICAgICAgICAgICB2YXIgc3VibWl0ID0gbmV3VGF4b25vbXlTdWJtaXQoeyBuZXdUYXhvbm9teX0pO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgX2luaXRpYWxWYWx1ZXMgPSBmb3JtUmVzdWx0LmluaXRpYWxWYWx1ZXM7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBmb3JtUHJvcHMgPSB7XHJcbiAgICAgICAgICAgICAgICBmb3JtOiAnbmV3VGF4b25vbXknLFxyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGUsIGZvcm1EYXRhOiBmb3JtUmVzdWx0LFxyXG4gICAgICAgICAgICAgICAgX2luaXRpYWxWYWx1ZXMsXHJcbiAgICAgICAgICAgICAgICBvblN1Ym1pdDogc3VibWl0XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICB0YWJBZGQoJ25ldy10YXgnLCBgTmV3ICR7Y3VycmVudFRheG9ub215VHlwZS50aXRsZX1gLCA8Zm9ybS5kZWZhdWx0IHsuLi5mb3JtUHJvcHN9Lz4pO1xyXG4gICAgICAgICAgICBuZXdUYXhvbm9teUZvcm1DaGFuZ2UoKTtcclxuICAgICAgICB9LCBjdXJyZW50VGF4b25vbXlUeXBlLmlkKTtcclxuICAgIH1cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkXCI+XHJcbiAgICAgICAgICAgIDxUYWJDb250cm9sIGFjdGl2ZVRhYj17YWN0aXZlVGFifSB0YWJzPXt0YWJzfSB0YWJDaGFuZ2U9e3RhYkNoYW5nZX0gLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICk7XHJcbn07XHJcblxyXG5jb25zdCBzdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+ICh7XHJcbiAgICB0YXhvbm9teVR5cGVDaGFuZ2VkOiBzdGF0ZS50dS50YXhvbm9teVR5cGVDaGFuZ2VkLFxyXG4gICAgY3VycmVudFRheG9ub215VHlwZTogc3RhdGUudHUuY3VycmVudC50YXhvbm9teVR5cGUsXHJcbiAgICBhY3RpdmVUYWI6IHN0YXRlLnRjLmFjdGl2ZSxcclxuICAgIHRhYnM6IHN0YXRlLnRjLnRhYnNcclxufSk7XHJcblxyXG5jb25zdCByZWR1Y2VyVG9Qcm9wcyA9IChyZWR1Y2VyKSA9PiAoXHJcbiAgICBiaW5kQWN0aW9uQ3JlYXRvcnMoeyBuZXdUYXhvbm9teUZvcm1DaGFuZ2UsIHRhYkNoYW5nZSwgdGFiQWRkLCBuZXdUYXhvbm9teSB9LCByZWR1Y2VyKVxyXG4pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBjb25uZWN0KHN0YXRlVG9Qcm9wcywgcmVkdWNlclRvUHJvcHMpKEFjdGlvblRhYkNvbnRyb2wpO1xyXG5cclxuXHJcbiIsIu+7v2NvbnN0IF8gPSByZXF1aXJlKCd1bmRlcnNjb3JlJyk7XHJcbmNvbnN0IHsgYmluZEFjdGlvbkNyZWF0b3JzIH0gPSByZXF1aXJlKCdyZWR1eCcpO1xyXG5jb25zdCB7IGNvbm5lY3QgfSA9IHJlcXVpcmUoJ3JlYWN0LXJlZHV4Jyk7XHJcbmNvbnN0IGNsYXNzbmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XHJcbmNvbnN0IFRyZWUgPSByZXF1aXJlKCdyZWFjdC11aS10cmVlJyk7XHJcbmNvbnN0IGFqYXhzID0gcmVxdWlyZSgnLi4vcmVkdXgvdHUtYWpheHMnKTtcclxuY29uc3QgeyBmb3JtLCB0YWJDb250cm9sQWN0aW9uczogeyB0YWJSZW1vdmUsIHRhYkFkZCB9IH0gPSBDb3JlaW4uY29tcG9uZW50cztcclxuY29uc3QgeyBsb2FkVGF4b25vbWllcywgdGF4b25vbXlDbGljaywgdGF4b25vbXlTZWxlY3QsIHRheG9ub21pZXNEZWxldGVkLCB0YXhvbm9taWVzVXBkYXRpbmcsIHRheG9ub21pZXNVcGRhdGVkLCB0YXhvbm9teVVwZGF0ZWQsIGNvbXBvbmVudExvYWRlZH0gPSByZXF1aXJlKCcuLi9yZWR1eC90dS1hY3Rpb25zJyk7XHJcbmNvbnN0IGxpc3RUb1RyZWUgPSByZXF1aXJlKCdsaXN0LXRvLXRyZWUnKTtcclxuY29uc3QgeyBCdXR0b24sIEJ1dHRvbkdyb3VwIH0gPSByZXF1aXJlKCdyZWFjdHN0cmFwJyk7XHJcbmNvbnN0IHsgcmVkdXhGb3JtIH0gPSByZXF1aXJlKCdyZWR1eC1mb3JtJyk7XHJcbmNvbnN0IHt1cGRhdGVUYXhvbm9teVN1Ym1pdH0gPSByZXF1aXJlKCcuLi9yZWR1eC90dS1mb3JtU3VibWl0cycpO1xyXG5cclxuXHJcbmNvbnN0IGNvbXBvbmVudE5hbWUgPSBcInRheG9ub215TGlzdFwiO1xyXG5cclxuY2xhc3MgVGF4b25vbXlUeXBlTGlzdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5sb2FkZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgdGhpcy5jb252ZXJ0VHJlZVRvTGlzdCA9IHRoaXMuY29udmVydFRyZWVUb0xpc3QuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLm9uVGF4b25vbXlVcGRhdGUgPSB0aGlzLm9uVGF4b25vbXlVcGRhdGUuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLm9uVGF4b25vbXlFZGl0aW5nID0gdGhpcy5vblRheG9ub215RWRpdGluZy5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMub25UYXhvbm9teU5vZGVDbGljayA9IHRoaXMub25UYXhvbm9teU5vZGVDbGljay5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHZpc2l0Tm9kZShub2RlLCBoYXNoTWFwLCBhcnJheSkge1xyXG4gICAgICAgIGlmICghaGFzaE1hcFtub2RlLmlkXSkge1xyXG4gICAgICAgICAgICBoYXNoTWFwW25vZGUuaWRdID0gdHJ1ZTtcclxuICAgICAgICAgICAgYXJyYXkucHVzaChub2RlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29udmVydFRyZWVUb0xpc3Qocm9vdCkge1xyXG4gICAgICAgIHZhciBzdGFjayA9IFtdLCBhcnJheSA9IFtdLCBoYXNoTWFwID0ge307XHJcbiAgICAgICAgc3RhY2sucHVzaChyb290KTtcclxuXHJcbiAgICAgICAgdmFyIGN1cnJlbnRQYXJlbnQgPSByb290O1xyXG4gICAgICAgIHdoaWxlIChzdGFjay5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgdmFyIG5vZGUgPSBzdGFjay5wb3AoKTtcclxuICAgICAgICAgICAgdmFyIG5vdFJvb3QgPSBub2RlLmlkICYmIHRydWU7XHJcblxyXG4gICAgICAgICAgICBpZiAoIW5vZGUuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudmlzaXROb2RlKG5vZGUsIGhhc2hNYXAsIGFycmF5KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChub3RSb290KVxyXG4gICAgICAgICAgICAgICAgICAgIGFycmF5LnB1c2gobm9kZSk7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gbm9kZS5jaGlsZHJlbi5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG5vZGUuY2hpbGRyZW5baV0ucGFyZW50SWQgPSBub2RlLmlkXHJcbiAgICAgICAgICAgICAgICAgICAgc3RhY2sucHVzaChub2RlLmNoaWxkcmVuW2ldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGFycmF5O1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlck5vZGUobm9kZSkge1xyXG4gICAgICAgIGNvbnN0IHsgY3VycmVudFRheG9ub215LCB0YXhvbm9teVNlbGVjdCwgc2VsZWN0ZWRUYXhvbm9taWVzfSA9IHRoaXMucHJvcHM7XHJcbiAgICAgICAgdmFyIGlzQWN0aXZlID0gKGN1cnJlbnRUYXhvbm9teSAmJiAobm9kZS5pZCA9PT0gY3VycmVudFRheG9ub215LmlkKSk7XHJcbiAgICAgICAgdmFyIGlzQ2hlY2tlZCA9IF8uZmluZFdoZXJlKHNlbGVjdGVkVGF4b25vbWllcywgeyBpZDogbm9kZS5pZCB9KSAmJiB0cnVlO1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc25hbWVzKCdub2RlJywgeyAnYWN0aXZlJzogaXNBY3RpdmUgfSl9IG9uQ2xpY2s9eygpID0+IHsgdGhpcy5vblRheG9ub215Tm9kZUNsaWNrKG5vZGUpIH19PlxyXG4gICAgICAgICAgICAgICAge25vZGUuaWQgJiYgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNoZWNrZWQ9e2lzQ2hlY2tlZH0gb25DbGljaz17KCkgPT4geyB0YXhvbm9teVNlbGVjdChub2RlLmlkICYmIG5vZGUpOyB9fSAvPn1cclxuICAgICAgICAgICAgICAgIDxzcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIHtub2RlLnRpdGxlfVxyXG4gICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIG9uVGF4b25vbXlOb2RlQ2xpY2sobm9kZSkge1xyXG4gICAgICAgIGNvbnN0IHsgdGF4b25vbXlDbGljayB9ID0gdGhpcy5wcm9wcztcclxuICAgICAgICB0YXhvbm9teUNsaWNrKG5vZGUuaWQgJiYgbm9kZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25UYXhvbm9teVVwZGF0ZSgpIHtcclxuICAgICAgICBjb25zdCB7IHRheG9ub21pZXMsIHRheG9ub21pZXNVcGRhdGluZywgdGF4b25vbWllc1VwZGF0ZWQgfSA9IHRoaXMucHJvcHM7XHJcbiAgICAgICAgdGF4b25vbWllc1VwZGF0aW5nKCk7XHJcbiAgICAgICAgYWpheHMudXBkYXRlVGF4b25vbWllcyh0YXhvbm9taWVzVXBkYXRlZCwgdGF4b25vbWllcyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25UYXhvbm9teUVkaXRpbmcoKSB7XHJcbiAgICAgICAgY29uc3Qge3RhYkFkZCwgdGFiUmVtb3ZlLCBjdXJyZW50VGF4b25vbXksIHRheG9ub215VXBkYXRlZH0gPSB0aGlzLnByb3BzO1xyXG4gICAgICAgIGFqYXhzLmdldFRheG9ub215Rm9ybUZvcigoZm9ybVJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCB2YXRpZGF0ZURhdGEgPSB7IGRldGFpbHM6IGZvcm1SZXN1bHQuZGV0YWlscywgbWV0YTogZm9ybVJlc3VsdC5tZXRhIH07XHJcbiAgICAgICAgICAgIGNvbnN0IHZhbGlkYXRlID0gZm9ybS52YWxpZGF0b3IodmF0aWRhdGVEYXRhKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBzdWJtaXQgPSB1cGRhdGVUYXhvbm9teVN1Ym1pdCh7IHN1Y2Nlc3NBY3Rpb246IHRheG9ub215VXBkYXRlZCB9KTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGZvcm1Qcm9wcyA9IHtcclxuICAgICAgICAgICAgICAgIGZvcm06ICdlZGl0LXRheG9ub215JyxcclxuICAgICAgICAgICAgICAgIHZhbGlkYXRlLFxyXG4gICAgICAgICAgICAgICAgZm9ybURhdGE6IGZvcm1SZXN1bHQsXHJcbiAgICAgICAgICAgICAgICBfaW5pdGlhbFZhbHVlczogZm9ybVJlc3VsdC5pbml0aWFsVmFsdWVzLFxyXG4gICAgICAgICAgICAgICAgb25TdWJtaXQ6IHN1Ym1pdFxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdGFiUmVtb3ZlKCdlZGl0LXRheG9ub215Jyk7XHJcbiAgICAgICAgICAgIHRhYkFkZCgnZWRpdC10YXhvbm9teScsIGAke2N1cnJlbnRUYXhvbm9teS50aXRsZX1gLCA8Zm9ybS5kZWZhdWx0IHsuLi5mb3JtUHJvcHN9Lz4pO1xyXG4gICAgICAgIH0sIGN1cnJlbnRUYXhvbm9teS5pZCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IHsgY29tcG9uZW50TG9hZGVkLCB0YXhvbm9taWVzLCBjdXJyZW50VGF4b25vbXksIGN1cnJlbnRUYXhvbm9teVR5cGUsIGxvYWRUYXhvbm9taWVzLCB0YXhvbm9taWVzQ2hhbmdlZCwgdGF4b25vbWllc0RlbGV0ZWQsIHNlbGVjdGVkVGF4b25vbWllcywgaXNUYXhvbm9taWVzVXBkYXRpbmcgfSA9IHRoaXMucHJvcHM7XHJcblxyXG4gICAgICAgIGlmICghY3VycmVudFRheG9ub215VHlwZSB8fCB0YXhvbm9taWVzID09IG51bGwpXHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG5cclxuICAgICAgICBnbG9iYWwuc2VsZWN0ZWRUYXhvbm9teUlkID0gY3VycmVudFRheG9ub215ID8gY3VycmVudFRheG9ub215LmlkIDogbnVsbDtcclxuXHJcbiAgICAgICAgaWYgKHRheG9ub21pZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIGFqYXhzLmdldFRheG9ub21pZXMoKHRheG9ub21pZXNSZXN1bHQpID0+IHtcclxuICAgICAgICAgICAgICAgIGxvYWRUYXhvbm9taWVzKHRheG9ub21pZXNSZXN1bHQpO1xyXG4gICAgICAgICAgICB9LCBjdXJyZW50VGF4b25vbXlUeXBlLmlkKVxyXG4gICAgICAgICAgICB0aGlzLmxvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgbHR0ID0gbmV3IGxpc3RUb1RyZWUodGF4b25vbWllcywge1xyXG4gICAgICAgICAgICBrZXlfaWQ6ICdpZCcsXHJcbiAgICAgICAgICAgIGtleV9wYXJlbnQ6ICdwYXJlbnRJZCcsXHJcbiAgICAgICAgICAgIGtleV9jaGlsZDogJ2NoaWxkcmVuJ1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb25zdCB0YXhvbm9teVRyZWUgPSB7IHRpdGxlOiBjdXJyZW50VGF4b25vbXlUeXBlLnRpdGxlLCBjaGlsZHJlbjogbHR0LkdldFRyZWUoKSB9O1xyXG5cclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1ibG9ja1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b25Hcm91cD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgZGlzYWJsZWQ9eyFjdXJyZW50VGF4b25vbXkgJiYgdHJ1ZX0gb25DbGljaz17dGhpcy5vblRheG9ub215RWRpdGluZ30+RWRpdDwvQnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHR5cGU9XCJidXR0b25cIiBkaXNhYmxlZD17aXNUYXhvbm9taWVzVXBkYXRpbmd9IG9uQ2xpY2s9e3RoaXMub25UYXhvbm9teVVwZGF0ZX0+VXBkYXRlPC9CdXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cImJ1dHRvblwiIGRpc2FibGVkPXtzZWxlY3RlZFRheG9ub21pZXMubGVuZ3RoID09PSAwfSBvbkNsaWNrPXsoKSA9PiB7IGFqYXhzLmRlbGV0ZVRheG9ub21pZXModGF4b25vbWllc0RlbGV0ZWQsIHNlbGVjdGVkVGF4b25vbWllcy5tYXAoKHRheG9ub215KSA9PiAodGF4b25vbXkuaWQpKSkgfX0+RGVsZXRlPC9CdXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9CdXR0b25Hcm91cD5cclxuICAgICAgICAgICAgICAgICAgICA8aHIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8VHJlZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nTGVmdD17MjB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyZWU9e3RheG9ub215VHJlZX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhyb290KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkVGF4b25vbWllcyh0aGlzLmNvbnZlcnRUcmVlVG9MaXN0KHJvb3QpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVuZGVyTm9kZT17dGhpcy5yZW5kZXJOb2RlLmJpbmQodGhpcyl9XHJcbiAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApO1xyXG4gICAgfTtcclxufTtcclxuXHJcbmNvbnN0IHN0YXRlVG9Qcm9wcyA9IChzdGF0ZSkgPT4gKHtcclxuICAgIGN1cnJlbnRUYXhvbm9teTogc3RhdGUudHUuY3VycmVudC50YXhvbm9teSxcclxuICAgIGN1cnJlbnRUYXhvbm9teVR5cGU6IHN0YXRlLnR1LmN1cnJlbnQudGF4b25vbXlUeXBlLFxyXG4gICAgdGF4b25vbWllczogc3RhdGUudHUuY3VycmVudC50YXhvbm9taWVzLFxyXG4gICAgc2VsZWN0ZWRUYXhvbm9taWVzOiBzdGF0ZS50dS5zZWxlY3RlZFRheG9ub21pZXMsXHJcbiAgICBpc1RheG9ub21pZXNVcGRhdGluZzogc3RhdGUudHUuaXNUYXhvbm9taWVzVXBkYXRpbmdcclxufSk7XHJcblxyXG5jb25zdCByZWR1Y2VyVG9Qcm9wcyA9IChyZWR1Y2VyKSA9PiAoXHJcbiAgICBiaW5kQWN0aW9uQ3JlYXRvcnMoe1xyXG4gICAgICAgIGxvYWRUYXhvbm9taWVzLFxyXG4gICAgICAgIHRheG9ub215Q2xpY2ssXHJcbiAgICAgICAgdGF4b25vbXlTZWxlY3QsXHJcbiAgICAgICAgdGF4b25vbWllc0RlbGV0ZWQsXHJcbiAgICAgICAgdGF4b25vbWllc1VwZGF0aW5nLFxyXG4gICAgICAgIHRheG9ub21pZXNVcGRhdGVkLFxyXG4gICAgICAgIHRheG9ub215VXBkYXRlZCxcclxuICAgICAgICBjb21wb25lbnRMb2FkZWQsXHJcbiAgICAgICAgdGFiQWRkLFxyXG4gICAgICAgIHRhYlJlbW92ZVxyXG4gICAgfSwgcmVkdWNlcilcclxuKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gY29ubmVjdChzdGF0ZVRvUHJvcHMsIHJlZHVjZXJUb1Byb3BzKShUYXhvbm9teVR5cGVMaXN0KTtcclxuXHJcblxyXG4iLCLvu79jb25zdCAkID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XHJcbmNvbnN0IF8gPSByZXF1aXJlKCd1bmRlcnNjb3JlJyk7XHJcbmNvbnN0IGFqYXhzID0gcmVxdWlyZSgnLi4vcmVkdXgvdHUtYWpheHMnKTtcclxuY29uc3QgeyBsb2FkVGF4b25vbXlUeXBlcywgbG9hZFRheG9ub21pZXMsIGVudGl0eVR5cGVDaGFuZ2UsIHRheG9ub215VHlwZUNoYW5nZSB9ID0gcmVxdWlyZSgnLi4vcmVkdXgvdHUtYWN0aW9ucycpO1xyXG5jb25zdCB7IGJpbmRBY3Rpb25DcmVhdG9ycyB9ID0gcmVxdWlyZSgncmVkdXgnKTtcclxuY29uc3QgeyBjb25uZWN0IH0gPSByZXF1aXJlKCdyZWFjdC1yZWR1eCcpO1xyXG5jb25zdCB7IExpc3RHcm91cCwgTGlzdEdyb3VwSXRlbSwgTGFiZWwsIENvbGxhcHNlLCBDYXJkLCBDYXJkQmxvY2sgfSA9IHJlcXVpcmUoJ3JlYWN0c3RyYXAnKTtcclxuXHJcbl8uZ3JvdXBCeU11bHRpID0gZnVuY3Rpb24gKG9iaiwgdmFsdWVzLCBjb250ZXh0KSB7XHJcbiAgICBpZiAoIXZhbHVlcy5sZW5ndGgpXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIHZhciBieUZpcnN0ID0gXy5ncm91cEJ5KG9iaiwgdmFsdWVzWzBdLCBjb250ZXh0KSxcclxuICAgICAgICByZXN0ID0gdmFsdWVzLnNsaWNlKDEpO1xyXG4gICAgZm9yICh2YXIgcHJvcCBpbiBieUZpcnN0KSB7XHJcbiAgICAgICAgYnlGaXJzdFtwcm9wXSA9IF8uZ3JvdXBCeU11bHRpKGJ5Rmlyc3RbcHJvcF0sIHJlc3QsIGNvbnRleHQpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGJ5Rmlyc3Q7XHJcbn07XHJcblxyXG5jb25zdCBUYXhvbm9teVR5cGVMaXN0ID0gKHByb3BzKSA9PiB7XHJcbiAgICBjb25zdCB7bG9hZFRheG9ub215VHlwZXMsIGxvYWRUYXhvbm9taWVzLCBjdXJyZW50RW50aXR5VHlwZSwgY3VycmVudFRheG9ub215VHlwZSwgdGF4b25vbXlUeXBlcywgZW50aXR5VHlwZUNoYW5nZSwgdGF4b25vbXlUeXBlQ2hhbmdlfSA9IHByb3BzO1xyXG5cclxuICAgIGlmICh0YXhvbm9teVR5cGVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIGFqYXhzLmdldFRheG9ub215VHlwZXMoKHRheG9ub215VHlwZVJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgICBsb2FkVGF4b25vbXlUeXBlcyh0YXhvbm9teVR5cGVSZXN1bHQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGVudGl0eVR5cGVHcm91cHMgPSBfLmdyb3VwQnlNdWx0aSh0YXhvbm9teVR5cGVzLCBbJ2VudGl0eVR5cGVHcm91cCcsICdlbnRpdHlUeXBlJ10sIG51bGwpO1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJlbnRpdHktdHlwZS1ncm91cHNcIj5cclxuICAgICAgICAgICAge2VudGl0eVR5cGVHcm91cHMgJiZcclxuICAgICAgICAgICAgICAgICQubWFwKGVudGl0eVR5cGVHcm91cHMsIChlbnRpdHlUeXBlR3JvdXAsaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT1cImVudGl0eS10eXBlLWdyb3VwIG1iLTFcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMYWJlbD48c3Ryb25nPntpbmRleH08L3N0cm9uZz48L0xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpc3RHcm91cD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQubWFwKGVudGl0eVR5cGVHcm91cCwgKGVudGl0eVR5cGVzLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZW50aXR5VHlwZU5hbWUgPSBpbmRleDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzQWN0aXZlID0gKGVudGl0eVR5cGVOYW1lID09PSBjdXJyZW50RW50aXR5VHlwZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtpbmRleH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMaXN0R3JvdXBJdGVtIGFjdGlvbiB0YWc9XCJidXR0b25cIiBvbkNsaWNrPXsoKSA9PiB7IGVudGl0eVR5cGVDaGFuZ2UoZW50aXR5VHlwZU5hbWUpIH19PntlbnRpdHlUeXBlTmFtZX08L0xpc3RHcm91cEl0ZW0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb2xsYXBzZSBpc09wZW49e2lzQWN0aXZlfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGlzdEdyb3VwPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlUeXBlcy5tYXAoKHRheG9ub215VHlwZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzQ3VycmVudFRheFR5cGUgPSAoY3VycmVudFRheG9ub215VHlwZSAmJiBjdXJyZW50VGF4b25vbXlUeXBlLm5hbWUgPT09IHRheG9ub215VHlwZS5uYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGlzdEdyb3VwSXRlbSBrZXk9e3RheG9ub215VHlwZS5uYW1lfSBhY3RpdmU9e2lzQ3VycmVudFRheFR5cGV9IGFjdGlvbiB0YWc9XCJidXR0b25cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRheG9ub215VHlwZUNoYW5nZSh0YXhvbm9teVR5cGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jYXJldC1yaWdodCBtbC0xIG1yLTFcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGF4b25vbXlUeXBlLnRpdGxlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpc3RHcm91cEl0ZW0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpc3RHcm91cD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQ29sbGFwc2U+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGlzdEdyb3VwPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgICAgIH0pfVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxufTtcclxuXHJcbmNvbnN0IHN0YXRlVG9Qcm9wcyA9IChzdGF0ZSkgPT4gKHtcclxuICAgIHRheG9ub215VHlwZXM6IHN0YXRlLnR1LnRheG9ub215VHlwZXMsXHJcbiAgICBjdXJyZW50RW50aXR5VHlwZTogc3RhdGUudHUuY3VycmVudC5lbnRpdHlUeXBlLFxyXG4gICAgY3VycmVudFRheG9ub215VHlwZTogc3RhdGUudHUuY3VycmVudC50YXhvbm9teVR5cGVcclxufSk7XHJcblxyXG5jb25zdCByZWR1Y2VyVG9Qcm9wcyA9IChyZWR1Y2VyKSA9PiAoXHJcbiAgICBiaW5kQWN0aW9uQ3JlYXRvcnMoeyBsb2FkVGF4b25vbXlUeXBlcywgbG9hZFRheG9ub21pZXMsIGVudGl0eVR5cGVDaGFuZ2UsIHRheG9ub215VHlwZUNoYW5nZSB9LCByZWR1Y2VyKVxyXG4pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBjb25uZWN0KHN0YXRlVG9Qcm9wcywgcmVkdWNlclRvUHJvcHMpKFRheG9ub215VHlwZUxpc3QpOyIsIu+7v2NvbnN0IGtleXMgPSByZXF1aXJlKCcuL3R1LWtleXMnKTtcclxuXHJcbmNvbnN0IGxvYWRUYXhvbm9teVR5cGVzID0gKHRheG9ub215VHlwZXMpID0+ICh7XHJcbiAgICB0eXBlOiBrZXlzLmxvYWRUYXhvbm9teVR5cGVzLFxyXG4gICAgdGF4b25vbXlUeXBlc1xyXG59KTtcclxuXHJcbmNvbnN0IGVudGl0eVR5cGVDaGFuZ2UgPSAoZW50aXR5VHlwZSkgPT4gKHtcclxuICAgIHR5cGU6IGtleXMuZW50aXR5VHlwZUNoYW5nZSxcclxuICAgIGVudGl0eVR5cGVcclxufSk7XHJcblxyXG5jb25zdCB0YXhvbm9teVR5cGVDaGFuZ2UgPSAodGF4b25vbXlUeXBlKSA9PiAoe1xyXG4gICAgdHlwZToga2V5cy50YXhvbm9teVR5cGVDaGFuZ2UsXHJcbiAgICB0YXhvbm9teVR5cGVcclxufSk7XHJcblxyXG5jb25zdCBuZXdUYXhvbm9teUZvcm1DaGFuZ2UgPSAoKSA9PiAoe1xyXG4gICAgdHlwZToga2V5cy5uZXdUYXhvbm9teUZvcm1DaGFuZ2UsXHJcbn0pO1xyXG5cclxuY29uc3QgbG9hZFRheG9ub21pZXMgPSAodGF4b25vbWllcykgPT4gKHtcclxuICAgIHR5cGU6IGtleXMubG9hZFRheG9ub21pZXMsXHJcbiAgICB0YXhvbm9taWVzXHJcbn0pO1xyXG5cclxuY29uc3QgbmV3VGF4b25vbXkgPSAodGF4b25vbXkpID0+ICh7XHJcbiAgICB0eXBlOiBrZXlzLm5ld1RheG9ub215LFxyXG4gICAgdGF4b25vbXlcclxufSk7IFxyXG5cclxuY29uc3QgdGF4b25vbXlDbGljayA9ICh0YXhvbm9teSkgPT4gKHtcclxuICAgIHR5cGU6IGtleXMudGF4b25vbXlDbGljayxcclxuICAgIHRheG9ub215XHJcbn0pO1xyXG5cclxuY29uc3QgdGF4b25vbWllc0RlbGV0ZWQgPSAoZGVsZXRlUmVzdWx0KSA9PiAoe1xyXG4gICAgdHlwZToga2V5cy50YXhvbm9taWVzRGVsZXRlZCxcclxuICAgIGRlbGV0ZVJlc3VsdFxyXG59KTtcclxuXHJcbmNvbnN0IHRheG9ub215U2VsZWN0ID0gKHRheG9ub215KSA9PiAoe1xyXG4gICAgdHlwZToga2V5cy50YXhvbm9teVNlbGVjdCxcclxuICAgIHRheG9ub215XHJcbn0pO1xyXG5cclxuY29uc3QgdGF4b25vbWllc1VwZGF0aW5nID0gKCkgPT4gKHtcclxuICAgIHR5cGU6IGtleXMudGF4b25vbWllc1VwZGF0aW5nLFxyXG59KTtcclxuXHJcbmNvbnN0IHRheG9ub21pZXNVcGRhdGVkID0gKHVwZGF0ZVJlc3VsdCkgPT4gKHtcclxuICAgIHR5cGU6IGtleXMudGF4b25vbWllc1VwZGF0ZWQsXHJcbiAgICB1cGRhdGVSZXN1bHRcclxufSk7XHJcblxyXG5jb25zdCB0YXhvbm9teVVwZGF0ZWQgPSAodXBkYXRlUmVzdWx0KSA9PiAoe1xyXG4gICAgdHlwZToga2V5cy50YXhvbm9teVVwZGF0ZWQsXHJcbiAgICB1cGRhdGVSZXN1bHRcclxufSk7XHJcblxyXG5jb25zdCBjb21wb25lbnRMb2FkZWQgPSAoY29tcG9uZW50TmFtZSkgPT4gKHtcclxuICAgIHR5cGU6IGtleXMuY29tcG9uZW50TG9hZGVkLFxyXG4gICAgY29tcG9uZW50TmFtZVxyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgbG9hZFRheG9ub215VHlwZXMsXHJcbiAgICBlbnRpdHlUeXBlQ2hhbmdlLFxyXG4gICAgdGF4b25vbXlUeXBlQ2hhbmdlLFxyXG4gICAgbmV3VGF4b25vbXlGb3JtQ2hhbmdlLFxyXG4gICAgbG9hZFRheG9ub21pZXMsXHJcbiAgICBuZXdUYXhvbm9teSxcclxuICAgIHRheG9ub215Q2xpY2ssXHJcbiAgICB0YXhvbm9taWVzRGVsZXRlZCxcclxuICAgIHRheG9ub215U2VsZWN0LFxyXG4gICAgdGF4b25vbWllc1VwZGF0aW5nLFxyXG4gICAgdGF4b25vbWllc1VwZGF0ZWQsXHJcbiAgICB0YXhvbm9teVVwZGF0ZWQsXHJcbiAgICBjb21wb25lbnRMb2FkZWRcclxufTsiLCLvu79jb25zdCAkID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XHJcblxyXG5jb25zdCBnZXRUYXhvbm9teVR5cGVzID0gKGhhbmRsZXIpID0+IHtcclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiBcIi90YXhvbm9teXVpL0dldFRheG9ub215VHlwZXNcIixcclxuICAgICAgICB0eXBlOiBcIkdFVFwiLFxyXG4gICAgICAgIHN1Y2Nlc3M6IGhhbmRsZXJcclxuICAgIH0pO1xyXG59O1xyXG5cclxuY29uc3QgZ2V0TmV3VGF4b25vbXlGb3JtID0gKGhhbmRsZXIsIHRheG9ub215VHlwZUlkKSA9PiB7XHJcbiAgICAkLmFqYXgoe1xyXG4gICAgICAgIHVybDogXCIvdGF4b25vbXl1aS9HZXRUYXhvbm9teUZvcm1cIixcclxuICAgICAgICBkYXRhOiB7IHRheG9ub215VHlwZUlkIH0sXHJcbiAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICBzdWNjZXNzOiBoYW5kbGVyXHJcbiAgICB9KTtcclxufTtcclxuXHJcbmNvbnN0IGdldFRheG9ub21pZXMgPSAoaGFuZGxlciwgdGF4b25vbXlUeXBlSWQpID0+IHtcclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiBcIi90YXhvbm9teXVpL0dldFRheG9ub21pZXNcIixcclxuICAgICAgICBkYXRhOiB7IHRheG9ub215VHlwZUlkIH0sXHJcbiAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICBzdWNjZXNzOiBoYW5kbGVyXHJcbiAgICB9KTtcclxufTtcclxuXHJcbmNvbnN0IGRlbGV0ZVRheG9ub21pZXMgPSAoaGFuZGxlciwgdGF4b25vbXlJZHMpID0+IHtcclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiBcIi90YXhvbm9teXVpL0RlbGV0ZVRheG9ub21pZXNcIixcclxuICAgICAgICBkYXRhOiB7IHRheG9ub215SWRzIH0sXHJcbiAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgICBzdWNjZXNzOiAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgIGhhbmRsZXIocmVzdWx0KTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufTtcclxuXHJcbmNvbnN0IHVwZGF0ZVRheG9ub21pZXMgPSAoaGFuZGxlciwgdGF4b25vbWllcykgPT4ge1xyXG4gICAgJC5hamF4KHtcclxuICAgICAgICB1cmw6IFwiL3RheG9ub215dWkvVXBkYXRlVGF4b25vbXlUcmVlXCIsXHJcbiAgICAgICAgZGF0YTogeyB2aWV3TW9kZWxzOiB0YXhvbm9taWVzIH0sXHJcbiAgICAgICAgbWV0aG9kOiAnUFVUJyxcclxuICAgICAgICBzdWNjZXNzOiBoYW5kbGVyXHJcbiAgICB9KTtcclxufTtcclxuXHJcbmNvbnN0IGdldFRheG9ub215Rm9ybUZvciA9IChoYW5kbGVyLCB0YXhvbm9teUlkKSA9PiB7XHJcbiAgICAkLmFqYXgoe1xyXG4gICAgICAgIHVybDogXCIvdGF4b25vbXl1aS9HZXRUYXhvbm9teUZvcm1Gb3JcIixcclxuICAgICAgICBkYXRhOiB7IHRheG9ub215SWR9LFxyXG4gICAgICAgIHN1Y2Nlc3M6IGhhbmRsZXJcclxuICAgIH0pO1xyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7IGdldFRheG9ub215VHlwZXMsIGdldE5ld1RheG9ub215Rm9ybSwgZ2V0VGF4b25vbWllcywgZGVsZXRlVGF4b25vbWllcywgdXBkYXRlVGF4b25vbWllcywgZ2V0VGF4b25vbXlGb3JtRm9yIH07Iiwi77u/Y29uc3QgJCA9IHJlcXVpcmUoJ2pxdWVyeScpO1xyXG5jb25zdCB7U3VibWlzc2lvbkVycm9yfSA9IHJlcXVpcmUoJ3JlZHV4LWZvcm0nKTtcclxuY29uc3QgeyBwYXJlbnRJZCB9ID0gQ29yZWluLmNvbXBvbmVudHMuYXBwS2V5cztcclxuXHJcbmNvbnN0IG5ld1RheG9ub215UmVxdWVzdCA9IChkYXRhKSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PlxyXG4gICAgJC5hamF4KHtcclxuICAgICAgICB1cmw6ICcvdGF4b25vbXl1aS9OZXdUYXhvbm9teScsXHJcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgZGF0YTogZGF0YSxcclxuICAgICAgICBzdWNjZXNzOiAocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmlkKSB7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVycm9yOiAocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgcmVqZWN0KHJlc3BvbnNlKTtcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG4pO1xuXG5mdW5jdGlvbiBuZXdUYXhvbm9teVN1Ym1pdChwcm9wcykge1xyXG4gICAgY29uc3Qge25ld1RheG9ub215LCBzZWxlY3RlZFRheG9ub215SWR9ID0gcHJvcHM7XHJcblxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChmb3JtVmFsdWVzKSB7XHJcblxyXG4gICAgICAgIGlmIChmb3JtVmFsdWVzLm1ldGEpXHJcbiAgICAgICAgICAgIGZvcm1WYWx1ZXMubWV0YVtwYXJlbnRJZF0gPSBnbG9iYWwuc2VsZWN0ZWRUYXhvbm9teUlkO1xyXG5cclxuICAgICAgICByZXR1cm4gbmV3VGF4b25vbXlSZXF1ZXN0KGZvcm1WYWx1ZXMpXHJcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgbmV3VGF4b25vbXkocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UucmVzdWx0ICYmIHJlc3BvbnNlLnJlc3VsdCA9PT0gXCJlcnJvclwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFN1Ym1pc3Npb25FcnJvcihyZXNwb25zZS5lcnJvcnMpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgU3VibWlzc2lvbkVycm9yKHsgX2Vycm9yOiAnU29tZXRoaW5nIHdyb25nPycgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCB1cGRhdGVUYXhvbm9teVJlcXVlc3QgPSAoZGF0YSkgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT5cclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiAnL3RheG9ub215dWkvVXBkYXRlVGF4b25vbXknLFxyXG4gICAgICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgZGF0YTogZGF0YSxcclxuICAgICAgICBzdWNjZXNzOiAocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnJlc3VsdFN0YXRlICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVycm9yOiAocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgcmVqZWN0KHJlc3BvbnNlKTtcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG4pO1xuXG5mdW5jdGlvbiB1cGRhdGVUYXhvbm9teVN1Ym1pdChwcm9wcykge1xyXG5cclxuICAgIHJldHVybiBmdW5jdGlvbiAoZm9ybVZhbHVlcykge1xyXG4gICAgICAgIGNvbnN0IHtzdWNjZXNzQWN0aW9uLCBjdXJyZW50VGF4b25vbXl9ID0gcHJvcHM7XHJcblxyXG4gICAgICAgIHJldHVybiB1cGRhdGVUYXhvbm9teVJlcXVlc3QoZm9ybVZhbHVlcylcclxuICAgICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzQWN0aW9uKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnJlc3VsdCAmJiByZXNwb25zZS5yZXN1bHQgPT09IFwiZXJyb3JcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBTdWJtaXNzaW9uRXJyb3IocmVzcG9uc2UuZXJyb3JzKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFN1Ym1pc3Npb25FcnJvcih7IF9lcnJvcjogJ1NvbWV0aGluZyB3cm9uZz8nIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBuZXdUYXhvbm9teVN1Ym1pdCxcclxuICAgIHVwZGF0ZVRheG9ub215U3VibWl0XHJcbn0iLCLvu79jb25zdCBrZXlzID0ge1xyXG4gICAgbG9hZFRheG9ub215VHlwZXM6IFwiTE9BRF9UQVhPTk9NWV9UWVBFU1wiLFxyXG4gICAgZW50aXR5VHlwZUNoYW5nZTogXCJFTlRJVFlfVFlQRV9DSEFOR0VcIixcclxuICAgIHRheG9ub215VHlwZUNoYW5nZTogXCJUQVhPTk9NWV9UWVBFX0NIQU5HRVwiLFxyXG4gICAgbmV3VGF4b25vbXlGb3JtQ2hhbmdlOiBcIk5FV19UQVhPTk9NWV9GT1JNX0NIQU5HRVwiLFxyXG4gICAgYWRkVGFiOiBcIkFERF9UQUJcIixcclxuICAgIGxvYWRUYXhvbm9taWVzOiBcIkxPQURfVEFYT05PTUlFU1wiLFxyXG4gICAgbmV3VGF4b25vbXk6IFwiTkVXX1RBWE9OT01ZXCIsXHJcbiAgICB0YXhvbm9teUNsaWNrOiBcIlRBWE9OT01ZX0NMSUNLXCIsXHJcbiAgICB0YXhvbm9taWVzRGVsZXRlZDogXCJUQVhPTk9NSUVTX0RFTEVURURcIixcclxuICAgIHRheG9ub215U2VsZWN0OiBcIlRBWE9OT01ZX1NFTEVDVFwiLFxyXG4gICAgdGF4b25vbWllc1VwZGF0aW5nOiBcIlRBWE9OT01JRVNfVVBEQVRJTkdcIixcclxuICAgIHRheG9ub21pZXNVcGRhdGVkOiBcIlRBWE9OT01JRVNfVVBEQVRFRFwiLFxyXG4gICAgdGF4b25vbXlVcGRhdGVkOiBcIlRBWE9OT01ZX1VQREFURURcIixcclxuICAgIGNvbXBvbmVudExvYWRlZDogXCJDT01QT05FTlRfTE9BREVEXCJcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ga2V5czsiLCLvu79jb25zdCAkID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XHJcbmNvbnN0IGtleXMgPSByZXF1aXJlKCcuL3R1LWtleXMnKTtcclxuY29uc3QgXyA9IHJlcXVpcmUoJ3VuZGVyc2NvcmUnKTtcclxuXHJcbmNvbnN0IGluaXRTdGF0ZSA9IHtcclxuICAgIHRheG9ub215VHlwZXM6IFtdLFxyXG4gICAgdGF4b25vbXlUeXBlQ2hhbmdlZDogZmFsc2UsXHJcbiAgICBpc1RheG9ub21pZXNVcGRhdGluZzogZmFsc2UsXHJcbiAgICBzZWxlY3RlZFRheG9ub21pZXM6IFtdLFxyXG4gICAgY3VycmVudDoge1xyXG4gICAgICAgIHRheG9ub21pZXM6IFtdLFxyXG4gICAgICAgIHRheG9ub215OiBudWxsLFxyXG4gICAgICAgIHRheG9ub215VHlwZTogbnVsbCxcclxuICAgICAgICBlbnRpdHlUeXBlOiAnJ1xyXG4gICAgfVxyXG59O1xyXG5cclxuY29uc3QgcmVkdWNlciA9IChzdGF0ZSA9IGluaXRTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICBjb25zdCBuZXdTdGF0ZSA9ICQuZXh0ZW5kKHRydWUsIHt9LCBzdGF0ZSk7XHJcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7IFxyXG4gICAgICAgIGNhc2Uga2V5cy5sb2FkVGF4b25vbXlUeXBlczpcclxuICAgICAgICAgICAgbmV3U3RhdGUudGF4b25vbXlUeXBlcyA9IGFjdGlvbi50YXhvbm9teVR5cGVzO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIGtleXMuZW50aXR5VHlwZUNoYW5nZTpcclxuICAgICAgICAgICAgbmV3U3RhdGUuY3VycmVudC5lbnRpdHlUeXBlID0gYWN0aW9uLmVudGl0eVR5cGU7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2Uga2V5cy50YXhvbm9teVR5cGVDaGFuZ2U6XHJcbiAgICAgICAgICAgIG5ld1N0YXRlLnRheG9ub215VHlwZUNoYW5nZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICBuZXdTdGF0ZS5jdXJyZW50LnRheG9ub215VHlwZSA9IGFjdGlvbi50YXhvbm9teVR5cGU7XHJcbiAgICAgICAgICAgIG5ld1N0YXRlLmN1cnJlbnQudGF4b25vbWllcyA9IFtdO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIGtleXMubmV3VGF4b25vbXlGb3JtQ2hhbmdlOlxyXG4gICAgICAgICAgICBuZXdTdGF0ZS50YXhvbm9teVR5cGVDaGFuZ2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2Uga2V5cy5sb2FkVGF4b25vbWllczpcclxuICAgICAgICAgICAgaWYgKGFjdGlvbi50YXhvbm9taWVzLmxlbmd0aCA9PT0gMClcclxuICAgICAgICAgICAgICAgIG5ld1N0YXRlLmN1cnJlbnQudGF4b25vbWllcyA9IG51bGw7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIG5ld1N0YXRlLmN1cnJlbnQudGF4b25vbWllcyA9IGFjdGlvbi50YXhvbm9taWVzO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIGtleXMubmV3VGF4b25vbXk6XHJcbiAgICAgICAgICAgIGlmICghbmV3U3RhdGUuY3VycmVudC50YXhvbm9taWVzKVxyXG4gICAgICAgICAgICAgICAgbmV3U3RhdGUuY3VycmVudC50YXhvbm9taWVzID0gW107XHJcbiAgICAgICAgICAgIG5ld1N0YXRlLmN1cnJlbnQudGF4b25vbWllcy5wdXNoKGFjdGlvbi50YXhvbm9teSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2Uga2V5cy50YXhvbm9teUNsaWNrOlxyXG4gICAgICAgICAgICBuZXdTdGF0ZS5jdXJyZW50LnRheG9ub215ID0gYWN0aW9uLnRheG9ub215O1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIGtleXMudGF4b25vbWllc0RlbGV0ZWQ6XHJcbiAgICAgICAgICAgIG5ld1N0YXRlLnNlbGVjdGVkVGF4b25vbWllcyA9IFtdO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGFjdGlvbi5kZWxldGVSZXN1bHQgIT09ICdzdHJpbmcnKVxyXG4gICAgICAgICAgICAgICAgbmV3U3RhdGUuY3VycmVudC50YXhvbm9taWVzID0gYWN0aW9uLmRlbGV0ZVJlc3VsdDtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBrZXlzLnRheG9ub215U2VsZWN0OlxyXG4gICAgICAgICAgICB2YXIgdGF4b25vbXkgPSBfLmZpbmQobmV3U3RhdGUuc2VsZWN0ZWRUYXhvbm9taWVzLCB7IGlkOiBhY3Rpb24udGF4b25vbXkuaWQgfSk7XHJcbiAgICAgICAgICAgIGlmICh0YXhvbm9teSlcclxuICAgICAgICAgICAgICAgIG5ld1N0YXRlLnNlbGVjdGVkVGF4b25vbWllcyA9IF8ud2l0aG91dChuZXdTdGF0ZS5zZWxlY3RlZFRheG9ub21pZXMsIHRheG9ub215KTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgbmV3U3RhdGUuc2VsZWN0ZWRUYXhvbm9taWVzLnB1c2goYWN0aW9uLnRheG9ub215KTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBrZXlzLnRheG9ub21pZXNVcGRhdGluZzpcclxuICAgICAgICAgICAgbmV3U3RhdGUuaXNUYXhvbm9taWVzVXBkYXRpbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIGtleXMudGF4b25vbWllc1VwZGF0ZWQ6XHJcbiAgICAgICAgICAgIG5ld1N0YXRlLmlzVGF4b25vbWllc1VwZGF0aW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgIG5ld1N0YXRlLmN1cnJlbnQudGF4b25vbWllcyA9IGFjdGlvbi51cGRhdGVSZXN1bHQucmVzdWx0O1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIGtleXMudGF4b25vbXlVcGRhdGVkOlxyXG4gICAgICAgICAgICB2YXIgdGF4b25vbXlJbmRleCA9IF8uZmluZEluZGV4KG5ld1N0YXRlLmN1cnJlbnQudGF4b25vbWllcywgeyBpZDogYWN0aW9uLnVwZGF0ZVJlc3VsdC5yZXN1bHQuaWQgfSk7XHJcbiAgICAgICAgICAgIGlmICh0YXhvbm9teUluZGV4ID49IDApXHJcbiAgICAgICAgICAgICAgICBuZXdTdGF0ZS5jdXJyZW50LnRheG9ub21pZXNbdGF4b25vbXlJbmRleF0gPSBhY3Rpb24udXBkYXRlUmVzdWx0LnJlc3VsdDtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ld1N0YXRlO1xyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByZWR1Y2VyOyIsIu+7v2dsb2JhbC5BZG1pbiA9IHtcclxuICAgIHRheG9ub215VUk6IHJlcXVpcmUoJy4vYWRtaW4vdGF4b25vbXktVUknKVxyXG59Il19"}