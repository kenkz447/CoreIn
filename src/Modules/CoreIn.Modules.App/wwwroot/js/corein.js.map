{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","corein/components.jsx","corein/components/dynamic-form.jsx","corein/components/file-manager.jsx","corein/components/file-manager/fm-actions.jsx","corein/components/file-manager/fm-ajaxs.jsx","corein/components/file-manager/fm-fileItem.jsx","corein/components/file-manager/fm-fileList.jsx","corein/components/file-manager/fm-filer.jsx","corein/components/file-manager/fm-keys.jsx","corein/components/file-manager/fm-reducer.jsx","corein/components/file-manager/fm-sidePanel.jsx","corein/components/file-manager/modal.jsx","corein/components/form/array.jsx","corein/components/form/fields/checkbox.jsx","corein/components/form/fields/checkboxlist.jsx","corein/components/form/fields/editor.jsx","corein/components/form/fields/image.jsx","corein/components/form/fields/input.jsx","corein/components/form/fields/select.jsx","corein/components/form/form.jsx","corein/components/form/language-select.jsx","corein/components/form/render-field-type.jsx","corein/components/form/render-field.jsx","corein/components/form/submit.jsx","corein/components/form/validator.jsx","corein/components/page-alerts.jsx","corein/components/page.jsx","corein/components/tab-control.jsx","corein/components/table.jsx","corein/page-templates.jsx","corein/page-templates/create.jsx","corein/page-templates/index.jsx","corein/page-templates/index/components/table.jsx","corein/page-templates/index/redux/reducer.jsx","corein/page-templates/shared/components/form.jsx","corein/page-templates/shared/redux/keys.jsx","corein/page-templates/shared/redux/reducer.jsx","corein/page-templates/update.jsx","index.jsx","../../node_modules/fbjs/lib/shallowEqual.js","../../node_modules/react-addons-shallow-compare/index.js"],"names":[],"mappings":"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","file":"corein.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const table = require('./components/table');\r\nconst fileManager = require('./components/file-manager');\r\n\r\nconst appKeys = {\r\n    parentId: 'parentId'\r\n};\r\n\r\nmodule.exports = {\r\n    form: {\r\n        default: require('./components/dynamic-form'),\r\n        validator: require('./components/form/validator'),\r\n        submit: require('./components/form/submit')\r\n    },\r\n    pageAlerts: require('./components/page-alerts'),\r\n    pageComponents: require('./components/page'),\r\n    tabControl: require('./components/tab-control'),\r\n    appKeys,\r\n    table,\r\n    fileManager\r\n};","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst { reduxForm, getFormValues } = require('redux-form');\r\n\r\nconst { modalToggle } = require('./file-manager/fm-actions');\r\n\r\nvar DynamicFormBasic = require('./form/form');\r\n\r\nconst FileManagerModal = require('./file-manager/modal');\r\n\r\n\r\nclass DynamicForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { form, commands, onSubmit, formData, _initialValues} = this.props;\r\n\r\n        const initialValues = _initialValues || {};\r\n        if ($.isEmptyObject(initialValues.taxonomyTypes)) {\r\n            if (formData.taxonomyTypes) {\r\n                initialValues.taxonomyTypes = {};\r\n                for (var type in formData.taxonomyTypes) {\r\n                    initialValues.taxonomyTypes[formData.taxonomyTypes[type].typeId] = {}\r\n                }\r\n            }\r\n        }\r\n\r\n        var ReduxDynamicForm = reduxForm({\r\n            form,\r\n            formData,\r\n            commands,\r\n            onSubmit,\r\n            initialValues,\r\n        })(DynamicFormBasic);\r\n\r\n        ReduxDynamicForm = connect(state => ({ formValues: getFormValues(form)(state) }))(ReduxDynamicForm);\r\n\r\n        return (\r\n            <div className=\"dynamic-form\">\r\n                <ReduxDynamicForm />\r\n                <FileManagerModal />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ }, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(DynamicForm);","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst classnames = require('classnames');\r\nvar { Button } = require('reactstrap');\r\n\r\nconst fmReducer = require('./file-manager/fm-reducer');\r\nconst { getFilesFromServer } = require('./file-manager/fm-ajaxs');\r\nconst { loadFiles, fileDelete, toggleAside } = require('./file-manager/fm-actions');\r\nconst { deleteFilesFromServer } = require('./file-manager/fm-ajaxs');\r\n\r\nconst JFiler = require('./file-manager/fm-filer.jsx');\r\nconst FileList = require('./file-manager/fm-fileList');\r\nconst SidePanel = require('./file-manager/fm-sidePanel');\r\n\r\nclass FileManager extends React.Component {\r\n    deleteBtnClicked(event) {\r\n        var $button = $(event.target);\r\n        $button.prop('disabled', true);\r\n        const { fileDelete, uncheked, checkedFiles } = this.props;\r\n        deleteFilesFromServer((deleteResults) => {\r\n            deleteResults.map((result, index) => {\r\n                if (result.resultState === 1)\r\n                    fileDelete(result.fileName);\r\n\r\n                if (checkedFiles.length === index + 1)\r\n                    $button.prop('disabled', false);\r\n            });\r\n        }, checkedFiles);\r\n    }\r\n\r\n    render() {\r\n        const { files, loadFiles, deleteFiles, options: { initLoadItems }, asideOpened, toggleAside } = this.props;\r\n\r\n        if (!files)\r\n            return null;\r\n\r\n        return (\r\n            <div id=\"file-manager\" className={classnames({ 'aside-menu-hidden': !asideOpened })}>\r\n                <div id=\"UploadPane\">\r\n                    <div className=\"card card-block\">\r\n                        <JFiler/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-block\">\r\n                        <Button color=\"danger\" onClick={this.deleteBtnClicked.bind(this)} className=\"pull-left\"><i className=\"icon-trash icons\"></i> Delete</Button>\r\n                    </div>\r\n                </div>\r\n                {files.length !== 0 ? <FileList /> : getFilesFromServer(loadFiles, 0, initLoadItems)}\r\n                <SidePanel />\r\n                <div className={classnames('overlay', 'fade-in-out', { 'hidden': !asideOpened })} onClick={() => {\r\n                    toggleAside(false);\r\n                }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n    asideOpened: state.fm.asideOpened,\r\n    files: state.fm.files,\r\n    options: state.fm.options,\r\n    checkedFiles: state.fm.checkedFiles\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    bindActionCreators({ loadFiles, fileDelete, toggleAside}, dispatch)\r\n);\r\n\r\nmodule.exports = {\r\n    FileManager: connect(stateToProps, dispatchToProps)(FileManager),\r\n    FileManagerModal: require('./file-manager/modal'),\r\n    fmReducer\r\n};","﻿const fmKeys = require('./fm-keys');\r\n\r\nconst fileUploaded = (fileObjectResult) => ({\r\n    type: fmKeys.fileUploaded,\r\n    file: fileObjectResult.result\r\n});\r\n\r\nconst loadFiles = (files) => ({\r\n    type: fmKeys.loadFiles,\r\n    files\r\n});\r\n\r\nconst fileChecked = (fileName, checked) => ({\r\n    type: fmKeys.fileChecked,\r\n    fileName: fileName,\r\n    checked\r\n});\r\n\r\nconst fileDelete = (fileName) => ({\r\n    type: fmKeys.fileDelete,\r\n    fileName\r\n});\r\n\r\nconst fileClick = (file) => ({\r\n    type: fmKeys.fileClick,\r\n    file\r\n});\r\n\r\nconst fileUpdate = (file) => ({\r\n    type: fmKeys.fileUpdate,\r\n    file\r\n});\r\n\r\nconst toggleAside = (isOpen) => ({\r\n    type: fmKeys.toggleAside,\r\n    isOpen\r\n});\r\n\r\nconst setOptions = (options) => ({\r\n    type: fmKeys.setOptions,\r\n    options\r\n});\r\n\r\nconst modalToggle = (isOpen, onSelect) => ({\r\n    type: fmKeys.modalToggle,\r\n    isOpen,\r\n    onSelect\r\n})\r\n\r\nconst nestedModalToggle = (isOpen) => ({\r\n    type: fmKeys.nestedModalToggle,\r\n    isOpen\r\n})\r\n\r\nconst setNestedModal = (nestedModal) => ({\r\n    type: fmKeys.setNestedModal,\r\n    nestedModal\r\n});\r\n\r\nmodule.exports = {\r\n    fileUploaded,\r\n    loadFiles,\r\n    fileChecked,\r\n    fileDelete,\r\n    fileClick,\r\n    fileUpdate,\r\n    toggleAside,\r\n    setOptions,\r\n    modalToggle,\r\n    nestedModalToggle,\r\n    setNestedModal\r\n};","﻿const $ = require('jquery');\r\n\r\nconst getFilesFromServer = (handler, selectFrom, take) => {\r\n    $.ajax({\r\n        url: \"/FileManager/GetFiles\",\r\n        data: { selectFrom: selectFrom, take: take },\r\n        method: \"GET\",\r\n        success: response => {\r\n            handler(response);\r\n        }\r\n    });\r\n}\r\n\r\nconst getFormInfoFromServer = (handler, fileName) => {\r\n    $.ajax({\r\n        url: '/FileManager/GetFormFor',\r\n        data: { fileName: fileName },\r\n        method: \"GET\",\r\n        success: handler\r\n    });\r\n}\r\n\r\nconst deleteFilesFromServer = (handler, fileNames) => {\r\n    $.ajax({\r\n        url: '/FileManager/DeleteFiles',\r\n        data: { fileNames },\r\n        method: 'DELETE',\r\n        success: (deleteResults) => {\r\n            handler(deleteResults);\r\n        }\r\n    });\r\n}\r\n\r\nconst updateFile = (handler, file) => {\r\n    $.ajax({\r\n        url: '/FileManager/Update',\r\n        data: { viewModel: file },\r\n        method: 'PUT',\r\n        success: response => {\r\n            handler(response);\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = { getFilesFromServer, getFormInfoFromServer, deleteFilesFromServer, updateFile};","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { fileChecked, toggleAside} = require('./fm-actions');\r\nconst { getFormInfoFromServer } = require('./fm-ajaxs');\r\nconst { bindActionCreators } = require('redux');\r\nconst { reduxForm } = require('redux-form');\r\nconst dynamicFormValidator = require('../form/validator');\r\nconst {setNestedModal} = require('./fm-actions');\r\nconst { tabAdd, tabRemove } = require('../tab-control').actions;\r\nconst formSubmit = require('../form/submit');\r\n\r\nclass FileItem extends React.Component {\r\n    onClick(event) {\r\n        const { onChecked, checkedFiles, options : { allowSelectMulti }} = this.props;\r\n\r\n        let $target = $(event.target),\r\n            fileName = $target.data('file-name'),\r\n            isCheckboxChecked = $target.prop('checked');\r\n\r\n        if(!isCheckboxChecked)\r\n            onChecked(fileName, isCheckboxChecked);\r\n        else\r\n            checkedFiles.push(fileName);\r\n\r\n        const $checkboxes = $('.thumb-checkbox');\r\n\r\n        let firstChecked = $checkboxes.filter('[data-file-name=\"' + checkedFiles[0] + '\"]')[0];\r\n\r\n        if (allowSelectMulti && event.shiftKey && checkedFiles.length > 1) {\r\n            var start = $checkboxes.index(firstChecked),\r\n                end = $checkboxes.index(event.target);\r\n\r\n            $checkboxes.map((index, checkbox) => {\r\n                const isChecked = (end < start && (index >= end && index <= start)) || (end > start && (index >= start && index <= end));\r\n                checkbox.checked = isChecked;\r\n                onChecked(checkbox.getAttribute(\"data-file-name\"), isChecked);\r\n            });\r\n        }\r\n        else if (event.ctrlKey) {\r\n\r\n        }\r\n        else {\r\n            if (checkedFiles.length > 1) {\r\n                $target.prop('checked', true);\r\n                onChecked($target.data(\"file-name\"), true);\r\n            }\r\n\r\n            var $checkedCheckboxes = $checkboxes.filter(':checked').not($target);\r\n            $checkedCheckboxes.map((index, checkbox) => {\r\n                checkbox.checked = false;\r\n                onChecked(checkbox.getAttribute(\"data-file-name\"), false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    onInfoClick() {\r\n        const { setNestedModal, tabAdd, tabRemove, toggleAside, options: { displayAsModal } } = this.props;\r\n        getFormInfoFromServer((formResult) => {\r\n            const form = formResult.result;\r\n            const formId = \"properties\";\r\n\r\n            const validate = dynamicFormValidator({ details: form.details, meta: form.meta });\r\n            const onSubmit = formSubmit({\r\n                url: '/filemanager/update',\r\n                method: 'PUT',\r\n                successAction: (response) => {\r\n                    if (displayAsModal)\r\n                        setNestedModal({ toggle: false });\r\n                    else\r\n                        toggleAside(false);\r\n                }\r\n            });\r\n\r\n            const ReduxDynamicForm = reduxForm({\r\n                form: formId,\r\n                validate,\r\n                initialValues: form.initialValues,\r\n                formData: form,\r\n                onSubmit\r\n            })(require('../form/form'));\r\n\r\n            if (!displayAsModal) {\r\n                tabRemove(formId);\r\n                tabAdd(\r\n                    formId,\r\n                    '<i class=\"icon-wrench icons\"></i> ' + formResult.fileName,\r\n                    <div className=\"p-1\"><ReduxDynamicForm onClose={() => {\r\n                        toggleAside(false);\r\n                        tabRemove(formId);\r\n                    }} /></div>\r\n                );\r\n                toggleAside(true);\r\n            }\r\n            else {\r\n                setNestedModal({ title: formResult.fileName, content: <ReduxDynamicForm onClose={() => { setNestedModal({ toggle: false }); }}/>, toggle: true });\r\n            }\r\n\r\n        }, this.props.data.fileName);\r\n    }\r\n\r\n    render() {\r\n        const { data: {fileId, fileName, meta: {type, src_thumb, ext}} } = this.props;\r\n        const fieldId = `file_${fileId}`;\r\n        const fieldName = `file[${fileId}]`;\r\n        return (\r\n            <div className=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 p-0\">\r\n                <div className=\"card card-fileThumb mb-1 mr-1\">\r\n                    <label className=\"fancy-checkbox-label\" htmlFor={fieldId}>\r\n                        <input type=\"checkbox\" className=\"thumb-checkbox\" id={fieldId} name={fieldName} data-file-id={fileId} data-file-name={fileName} onClick={this.onClick.bind(this)} />\r\n                        <span className=\"fancy-checkbox fancy-checkbox-img\"/>\r\n                        {(type === 'Image'\r\n                            ? <img src={src_thumb} alt={fileName}/>\r\n                            : <span className=\"fancy-thumb-icon\"><i className=\"fa fa-file\"></i> <b>{ext}</b></span>)}\r\n                    </label>\r\n                    <div className=\"file-info p-1\" onClick={this.onInfoClick.bind(this)}>\r\n                        <i className=\"fa fa-info\" aria-hidden=\"true\"></i>\r\n                        <span className=\"file-name\">{fileName}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst stateToProps = (state) => ({\r\n    options: state.fm.options,\r\n    checkedFiles: state.fm.checkedFiles\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    bindActionCreators({ onChecked: fileChecked, toggleAside, tabAdd, tabRemove, setNestedModal }, dispatch)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, dispatchToProps)(FileItem);","﻿const $ = require('jquery');\r\nconst fmKeys = require('./fm-keys');\r\nconst { getFilesFromServer } = require('./fm-ajaxs');\r\nconst { connect } = require('react-redux');\r\nconst { loadFiles } = require('./fm-actions');\r\nconst { bindActionCreators } = require('redux');\r\n\r\nvar Button = require('reactstrap').Button;\r\nvar FileItem = require('./fm-fileItem');\r\n\r\nclass FileThumbList extends React.Component {\r\n    onLoadMoreBtnClick(event) {\r\n        const { files, loadFiles, resources, options: { itemPerLoad } } = this.props;\r\n        const $loadMoreBtn = $(event.target);\r\n\r\n        $loadMoreBtn.prop('disabled', true);\r\n        $loadMoreBtn.text(resources.onLoadMore);\r\n\r\n        getFilesFromServer(function (filesResult) {\r\n            loadFiles(filesResult);\r\n            if (filesResult.length < itemPerLoad) {\r\n                $loadMoreBtn.text(resources.noMore);\r\n            } else {\r\n                $loadMoreBtn.prop('disabled', false);\r\n                $loadMoreBtn.text(resources.loadMore);\r\n            }\r\n        }.bind(this),\r\n            files.length,\r\n            itemPerLoad);\r\n    }\r\n\r\n    render() {\r\n        const { files, resources } = this.props;\r\n        return (\r\n            <div id=\"FileThumbList\" className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {files.map(item => (\r\n                        <FileItem key={item.fileId} data={item} />\r\n                    ))}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Button id=\"LoadMoreBtn\" color=\"secondary\" onClick={this.onLoadMoreBtnClick.bind(this)}>{resources.loadMore}</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => ({\r\n    files: state.fm.files,\r\n    resources: state.fm.resources,\r\n    options: state.fm.options\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    bindActionCreators({ loadFiles }, dispatch)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, dispatchToProps)(FileThumbList);","﻿const $ = require('jquery');\r\nconst jFiler = require('jquery.filer');\r\nconst { bindActionCreators } = require('redux');\r\nconst { connect } = require('react-redux');\r\nconst { fileUploaded } = require('./fm-actions');\r\n\r\nvar { Progress } = require('reactstrap');\r\n\r\nclass JFiler extends React.Component {\r\n    componentDidMount() {\r\n        const $jFiler = $('#jFiler'),\r\n            $progressBar = $('.jFiler-container .progress-bar'),\r\n            $progressContainer = $('.jFiler-container .progress-container');\r\n\r\n        let opts = {\r\n            changeInput: '<div class=\"jFiler-input-dragDrop m-0 w-100\"><div class=\"jFiler-input-inner\"><div class=\"jFiler-input-icon\"><i class=\"icon-jfi-cloud-up-o\"></i></div><div class=\"jFiler-input-text\"><h3>Drag&Drop files here</h3> <span>or</span></div><a class=\"jFiler-input-choose-btn blue\">Browse Files</a></div></div>',\r\n            showThumbs: false,\r\n            theme: \"dragdropbox\",\r\n            templates: {\r\n                progressBar: ''\r\n            },\r\n            dragDrop: {\r\n\r\n            },\r\n            uploadFile: {\r\n                url: '/filemanager/upload',\r\n                data: {},\r\n                type: 'POST',\r\n                enctype: 'multipart/form-data',\r\n                synchron: true,\r\n                beforeSend: () => {\r\n                    $progressContainer.removeClass('collapse');\r\n                },\r\n                success: (fileObjectResult) => {\r\n                    if (fileObjectResult.resultState === 1) {\r\n                        const { uploaded } = this.props;\r\n                        uploaded(fileObjectResult);\r\n                    }\r\n                },\r\n                onProgress: (progress) => {\r\n                    $progressBar.css('width', progress + '%');\r\n                },\r\n                onComplete: () => {\r\n                    $progressContainer.addClass('collapse');\r\n                    $progressBar.css('width', '0%');\r\n                }\r\n            }\r\n        };\r\n        $jFiler.filer(opts);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jFiler-container\">\r\n                <input type=\"file\" id=\"jFiler\" name=\"jFiler\" multiple=\"multiple\" className=\"collapse\" />\r\n                <div className=\"progress-container collapse mt-1\">\r\n                    <Progress />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    bindActionCreators({ uploaded : fileUploaded }, dispatch)\r\n);\r\n\r\nmodule.exports = connect(state => state, dispatchToProps)(JFiler);\r\n","﻿const fmKeys = {\r\n    fileUploaded: 'FILE_UPLOADED',\r\n    fileChecked: 'FILE_CHEKED',\r\n    fileDelete: 'FILE_DELETE',\r\n    fileClick: 'FILE_CLICK',\r\n    fileUpdate: 'FILE_UPDATE',\r\n    toggleAside: 'SIDEPANEL_TOGGLE',\r\n    loadFiles: 'LOAD_FILES',\r\n    setOptions: \"SET_OPTIONS\",\r\n    modalToggle: \"MODAL_TOGGLE\",\r\n    nestedModalToggle: \"NESTED_MODAL_TOGGLE\",\r\n    setNestedModal: \"SET_NESTED_MODAL\"\r\n};\r\n\r\nmodule.exports = fmKeys;","﻿const $ = require('jquery');\r\nconst fmKeys = require('./fm-keys');\r\nconst sift = require('sift');\r\n\r\nconst initState = {\r\n    files: [],\r\n    checkedFiles: [],\r\n    resources: {\r\n        loadMore: \"Load more\",\r\n        onload: \"Please wait...\",\r\n        noMore: \"No more!\"\r\n    },\r\n    options: {\r\n        allowSelectMulti: true,\r\n        initLoadItems: 30,\r\n        itemPerLoad: 12,\r\n        displayAsModal: false,\r\n    },\r\n    asideOpened: false,\r\n    modal: {\r\n        toggle: false,\r\n        onSelect: null,\r\n        nestedModal: {\r\n            toggle: false,\r\n        }\r\n    }\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n\r\n    switch (action.type) {\r\n        case fmKeys.setOptions:\r\n            for (var optionName in action.options) {\r\n                newState.options[optionName] = action.options[optionName];\r\n            }\r\n            break;\r\n        case fmKeys.fileUploaded:\r\n            newState.files.unshift(action.file);\r\n            break;\r\n        case fmKeys.loadFiles:\r\n            if (!newState.files.length && !action.files)\r\n                newState.files = null;\r\n            else\r\n                newState.files = newState.files.concat(action.files);\r\n            break;\r\n        case fmKeys.fileChecked:\r\n            if (action.checked) {\r\n                if (state.checkedFiles.indexOf(action.fileName) < 0)\r\n                    newState.checkedFiles.push(action.fileName);\r\n            } else {\r\n                let index = state.checkedFiles.indexOf(action.fileName);\r\n                if (index >= 0)\r\n                    newState.checkedFiles.splice(index, 1);\r\n            }\r\n            break;\r\n        case fmKeys.fileDelete:\r\n            //remove file from checked list\r\n            var fileIndex = state.checkedFiles.indexOf(action.fileName);\r\n            if (fileIndex >= 0)\r\n                newState.checkedFiles.splice(fileIndex, 1);\r\n\r\n            newState.files = sift({ fileName: { $not: action.fileName } }, newState.files);\r\n            break;\r\n        case fmKeys.toggleAside:\r\n            newState.asideOpened = action.isOpen;\r\n            break;\r\n        //Modal\r\n        case fmKeys.modalToggle:\r\n            newState.modal.toggle = action.isOpen;\r\n            newState.modal.onSelect = action.onSelect;\r\n            if (action.isOpen)\r\n                newState.checkedFiles = [];\r\n            break;\r\n        case fmKeys.nestedModalToggle:\r\n            newState.modal.nestedModal.toggle = action.isOpen;\r\n            break;\r\n        case fmKeys.setNestedModal:\r\n            newState.modal.nestedModal = action.nestedModal;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n}\r\n\r\nmodule.exports = reducer;","﻿const react = require('react');\r\nconst reactDOM = require('react-dom');\r\nconst $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst classnames = require('classnames');\r\nconst { bindActionCreators } = require('redux');\r\nvar { Nav, NavItem, NavLink, TabContent, TabPane } = require('reactstrap');\r\n\r\nconst dynamicFormValidator = require('../form/validator');\r\nconst DynamicForm = require('../dynamic-form');\r\nconst { tabAdd, tabRemove, tabChange } = require('../tab-control').actions;\r\nconst TabControl = require('../tab-control').default;\r\n\r\nclass SidePanel extends react.Component {\r\n    render() {\r\n        const { activeTab, tabs, tabChange } = this.props;\r\n        return (\r\n            <aside className={classnames(\"aside-menu\")}>\r\n                {activeTab && <TabControl activeTab={activeTab} tabs={tabs} tabChange={tabChange} />}\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n    activeTab: state.fmTabControl.active,\r\n    tabs: state.fmTabControl.tabs\r\n});\r\n\r\nconst distpatchToProps = (dispatch) => (\r\n    bindActionCreators({ tabChange }, dispatch)\r\n    );\r\n\r\nmodule.exports = connect(stateToProps, distpatchToProps)(SidePanel);\r\n","﻿const $ = require('jquery');\r\nconst _ = require('underscore');\r\n\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst classnames = require('classnames');\r\nvar {Input, InputGroup, InputGroupAddon, FormFeedback, FormGroup, FormText, Label, Button, Modal, ModalHeader, ModalBody, ModalFooter} = require('reactstrap');\r\n\r\nconst { getFilesFromServer, deleteFilesFromServer } = require('./fm-ajaxs');\r\nconst { loadFiles, fileDelete, setOptions, modalToggle, nestedModalToggle } = require('./fm-actions');\r\n\r\nconst JFiler = require('./fm-filer.jsx');\r\nconst FileList = require('./fm-fileList');\r\nconst SidePanel = require('./fm-sidePanel');\r\n\r\nclass FileManagerModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleNested = this.toggleNested.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        const { files, checkedFiles, modalToggle, modalOpened, onFileSelected } = this.props;\r\n        modalToggle(!modalOpened);\r\n        if (onFileSelected) {\r\n            var items = _.filter(files, (file) => checkedFiles.indexOf(file.fileName) >= 0);\r\n            onFileSelected(items)\r\n        }\r\n    }\r\n\r\n    toggleNested() {\r\n        const {nestedModalToggle, nestedModal: { toggle }} = this.props;\r\n        nestedModalToggle(!toggle);\r\n    }\r\n\r\n    deleteBtnClicked(event) {\r\n        var $button = $(event.target);\r\n        $button.prop('disabled', true);\r\n        const { fileDelete, uncheked, checkedFiles } = this.props;\r\n        deleteFilesFromServer((deleteResults) => {\r\n            deleteResults.map((result, index) => {\r\n                if (result.resultState === 1)\r\n                    fileDelete(result.fileName);\r\n\r\n                if (checkedFiles.length === index + 1)\r\n                    $button.prop('disabled', false);\r\n            });\r\n        }, checkedFiles);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            files,\r\n            checkedFiles,\r\n            loadFiles,\r\n            deleteFiles,\r\n            options: { initLoadItems, displayAsModal },\r\n            asideOpened,\r\n            setOptions,\r\n            modalOpened,\r\n            nestedModal\r\n        } = this.props;\r\n\r\n        if (!displayAsModal) {\r\n            setOptions({ displayAsModal: true })\r\n            return null;\r\n        }\r\n\r\n        if (!files)\r\n            return null;\r\n\r\n        return (\r\n            <Modal isOpen={modalOpened} toggle={this.toggle} className=\"fullscreen \">\r\n                <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n                <ModalBody>\r\n                    <div id=\"file-manager\">\r\n                        <div id=\"UploadPane\">\r\n                            <div className=\"card card-block\">\r\n                                <JFiler />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-block\">\r\n                                <Button color=\"danger\" onClick={this.deleteBtnClicked.bind(this)} className=\"pull-left\"><i className=\"icon-trash icons\"></i> Delete</Button>\r\n                            </div>\r\n                        </div>\r\n                        {files.length !== 0 ? <FileList /> : getFilesFromServer(loadFiles, 0, initLoadItems)}\r\n                    </div>\r\n\r\n                    <Modal isOpen={nestedModal.toggle} toggle={this.toggleNested}>\r\n                        <ModalHeader>{nestedModal.title}</ModalHeader>\r\n                        <ModalBody>{nestedModal.content}</ModalBody>\r\n                    </Modal>\r\n\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.toggle}>Select</Button>{' '}\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        modalOpened: state.fm.modal.toggle,\r\n        onFileSelected: state.fm.modal.onSelect,\r\n        nestedModal: state.fm.modal.nestedModal,\r\n\r\n        files: state.fm.files,\r\n        options: state.fm.options,\r\n        checkedFiles: state.fm.checkedFiles\r\n    }\r\n};\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    bindActionCreators({ loadFiles, fileDelete, setOptions, modalToggle, nestedModalToggle}, dispatch)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, dispatchToProps)(FileManagerModal);","﻿const $ = require('jquery');\r\nconst {Card, CardBlock, CardHeader, Input, InputGroup, InputGroupAddon, FormFeedback, FormGroup, FormText, Label, Button, Modal, ModalHeader, ModalBody, ModalFooter} = require('reactstrap');\r\n\r\nconst renderFieldType = require('./render-field-type');\r\n\r\nmodule.exports = (props) => {\r\n    const { fields, childFields, display: { title }, fileManagerModalToggle, executeFormAction } = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mb-1\">\r\n                <label>{title}</label>\r\n                <Button type=\"button\" className=\"ml-1\" onClick={() => fields.push({})}>+</Button>\r\n            </div>\r\n            \r\n            <div>\r\n                {\r\n                    fields.map((field, index) => {\r\n                        return (\r\n                            <Card key={index}>\r\n                                <CardHeader>\r\n                                    Member #{index + 1}\r\n                                    <div className=\"card-actions\">\r\n                                        <a className=\"btn-close\" onClick={\r\n                                            (e) => {\r\n                                                fields.remove(index);\r\n                                                e.preventDefault();\r\n                                            }} href=\"#\"><i className=\"icon-close\"></i></a>\r\n                                    </div>\r\n                                </CardHeader>\r\n                                <CardBlock>\r\n                                    {\r\n                                        childFields &&\r\n                                        childFields.map((props) => {\r\n                                            $.extend(props, { fileManagerModalToggle, executeFormAction });\r\n                                            return renderFieldType(field, props);\r\n                                        })\r\n                                    }\r\n                                </CardBlock>\r\n                            </Card>\r\n                        )\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}","﻿var {Input, FormGroup, Label} = require('reactstrap');\r\n\r\nmodule.exports = function(props) {\r\n    const {input, display: {id, title, placeholder}} = props;\r\n    return (\r\n        <FormGroup check>\r\n            <Label check>\r\n                <Input {...input} id={id} type=\"checkbox\" checked={input.value} />\r\n                {' ' + title}\r\n            </Label>\r\n        </FormGroup>\r\n    );\r\n};","﻿const $ = require('jquery');\r\nconst listToTree = require('list-to-tree');\r\nconst CheckBox = require('./checkbox');\r\nconst { Field } = require('redux-form');\r\n\r\nclass CheckboxList extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.renderNode = this.renderNode.bind(this);\r\n    }\r\n\r\n\r\n    renderNode(node) {\r\n        const {taxonomyName} = this.props;\r\n        const name = `${taxonomyName}.${node.id}`\r\n\r\n        return (\r\n            <div key={node.id} className=\"item\">\r\n                <Field component={CheckBox} display={{ title: node.title }} name={name} />\r\n                {node.children &&\r\n                    <div className=\"children\">\r\n                        {\r\n                            $.map(node.children, (node) => {\r\n                                return this.renderNode(node);\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { taxonomies, taxonomyName, title } = this.props;\r\n\r\n        const ltt = new listToTree(taxonomies, {\r\n            key_id: 'id',\r\n            key_parent: 'parentId',\r\n            key_child: 'children'\r\n        });\r\n\r\n        const tree = ltt.GetTree();\r\n\r\n        return (\r\n            <div className=\"checkbox-list\">\r\n                <h4>{title}</h4>\r\n                {tree &&\r\n                    <div className=\"items\">\r\n                        {\r\n                            $.map(tree, (node) => {\r\n                                return this.renderNode(node);\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>);\r\n    };\r\n};\r\n\r\nmodule.exports = CheckboxList;","﻿const $ = require('jquery');\r\nconst { Input, InputGroup, InputGroupButton, InputGroupAddon, FormFeedback, FormGroup, FormText, Label, Button } = require('reactstrap');\r\n\r\nconst { Editor } = require('react-draft-wysiwyg');\r\nconst draftToHtml = require('draftjs-to-html').default;\r\n\r\nconst { convertToRaw, EditorState, ContentState } = require('draft-js');\r\nconst htmlToDraft = require('html-to-draftjs').default;\r\n\r\nclass FormInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { input: { value }, display: { type } } = props;\r\n        this.editorStateChange = this.editorStateChange.bind(this);\r\n\r\n        const state = {};\r\n        if (value) {\r\n            if (value) {\r\n                let blocksFromHtml = htmlToDraft(value);\r\n                let contentBlocks = blocksFromHtml.contentBlocks;\r\n                let contentState = ContentState.createFromBlockArray(contentBlocks);\r\n                let editorState = EditorState.createWithContent(contentState);\r\n                state.editorState = editorState;\r\n            }\r\n            else {\r\n                state.editorState = EditorState.createEmpty();\r\n            }\r\n        }\r\n        this.state = state;\r\n    }\r\n\r\n    editorStateChange(editorState) {\r\n        this.setState({ editorState });\r\n    }\r\n\r\n    render() {\r\n        const { input, fieldValidate, display: { id, type, title, displayName, placeholder, prompt }, meta: { touched, error, warning }, status } = this.props;\r\n\r\n        var validationState = fieldValidate && touched ? (error ? 'danger' : (warning && 'warning')) : null;\r\n\r\n        return (\r\n            <FormGroup color={validationState} className=\"form-member\">\r\n                {title && <Label for={id} dangerouslySetInnerHTML={{ __html: title }} />}\r\n\r\n                <Editor\r\n                    placeholder={placeholder}\r\n                    editorState={this.state.editorState}\r\n                    editorClassName=\"editor\"\r\n                    onEditorStateChange={this.editorStateChange}\r\n                    onBlur={(e, editorState) => {\r\n                        const value = draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\r\n                        input.onChange(value);\r\n                    }}\r\n                />\r\n                {prompt && <FormText color=\"muted\">{prompt}</FormText>}\r\n                {touched && ((error && <FormFeedback>{error}</FormFeedback>) || (warning && <FormFeedback>{warning}</FormFeedback>))}\r\n            </FormGroup>\r\n        );\r\n    }\r\n}\r\n\r\nmodule.exports = FormInput;","﻿const $ = require('jquery');\r\n\r\nvar {Input, InputGroup, InputGroupAddon, FormFeedback, FormGroup, FormText, Label, Button, Modal, ModalHeader, ModalBody, ModalFooter} = require('reactstrap');\r\n\r\nconst FileManagerModal = require('../../file-manager/modal');\r\n\r\nclass ImageField extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    openModal() {\r\n        const { input: {onChange}, fileManagerModalToggle } = this.props;\r\n\r\n        fileManagerModalToggle(\r\n            (files) => {\r\n                if (!files.length)\r\n                    return\r\n\r\n                var file = files[0];\r\n                onChange(file.meta.src);\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { fieldValidate, input: { value }, display: {id, type, title, displayName, placeholder, prompt}, meta: {touched, error, warning} } = this.props;\r\n        var validationState = fieldValidate && touched ? (error ? 'danger' : (warning ? 'warning' : 'success')) : undefined;\r\n        var img = value ? value.replace(/\\\\/g, \"/\") : \"/img/default.png\";\r\n        return (\r\n            <FormGroup color={validationState} className=\"form-member\">\r\n                <Label>{title}</Label>\r\n                <div>\r\n                    <div className=\"image-fill\" style={{ backgroundImage: `url('${img}')` }} tabIndex=\"-1\" onClick={this.openModal.bind(this)} />\r\n                </div>\r\n                {touched && ((error && <FormFeedback>{error}</FormFeedback>) || (warning && <FormFeedback>{warning}</FormFeedback>))}\r\n                {prompt && <FormText color=\"muted\">{prompt}</FormText>}\r\n            </FormGroup>\r\n        );\r\n    }\r\n}\r\n\r\nmodule.exports = ImageField;","﻿const $ = require('jquery');\r\nconst shallowCompare = require('react-addons-shallow-compare');\r\n\r\nconst {Input, InputGroup, InputGroupButton, InputGroupAddon, FormFeedback, FormGroup, FormText, Label, Button} = require('reactstrap');\r\nconst {Editor} = require('react-draft-wysiwyg');\r\nconst draftToHtml = require('draftjs-to-html').default;\r\nconst { convertToRaw, EditorState, ContentState } = require('draft-js');\r\nconst htmlToDraft = require('html-to-draftjs').default;\r\n\r\nclass FormInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.actionBtnClick = this.actionBtnClick.bind(this);\r\n        this.renderActions = this.renderActions.bind(this);\r\n    }\r\n\r\n    renderActions() {\r\n        const { actions } = this.props;\r\n\r\n        if (!actions)\r\n            return null;\r\n\r\n        return (\r\n            <InputGroupButton>\r\n                {actions.map(props => {\r\n                    const { title, command } = props;\r\n                    return <Button key={command} type=\"button\" color=\"secondary\" onClick={() => { this.actionBtnClick(command); }}>{title}</Button>\r\n                })}\r\n            </InputGroupButton>\r\n        );\r\n    }\r\n\r\n    actionBtnClick(command) {\r\n        const { executeFormAction } = this.props;\r\n\r\n        executeFormAction(command, this.props);\r\n    }\r\n\r\n    render() {\r\n        const { input, fieldValidate, display: { id, type, title, displayName, placeholder, prompt }, meta: { touched, error, warning }, status } = this.props;\r\n\r\n        var validationState = fieldValidate && touched ? (error ? 'danger' : (warning && 'warning')) : null;\r\n\r\n        return (\r\n            <FormGroup color={validationState} className=\"form-member\">\r\n                {title && <Label for={id} dangerouslySetInnerHTML={{ __html: title }} />}\r\n\r\n                <InputGroup>\r\n                    <Input {...input} id={id} state={validationState} type={type} placeholder={placeholder ? placeholder : displayName} readOnly={status === 'ReadOnly'} />\r\n                    {this.renderActions()}\r\n                </InputGroup>\r\n                {prompt && <FormText color=\"muted\">{prompt}</FormText>}\r\n                {touched && ((error && <FormFeedback>{error}</FormFeedback>) || (warning && <FormFeedback>{warning}</FormFeedback>))}\r\n            </FormGroup>\r\n        );\r\n    }\r\n}\r\n\r\nmodule.exports = FormInput;","﻿const $ = require('jquery');\r\nconst {Input, FormGroup, Label} = require('reactstrap');\r\n\r\nmodule.exports = function(props) {\r\n    const {input, display: {id, title, placeholder}, values} = props;\r\n    return (\r\n        <FormGroup check>\r\n            <Label>{title}</Label>\r\n\r\n            <Label check>\r\n                <Input {...input} type=\"select\">\r\n                    {\r\n                        $.map(values, (key) => {\r\n                            <option value={key}>{values[key]}</option>\r\n                        })\r\n                    }\r\n                </Input>\r\n            </Label>\r\n        </FormGroup>\r\n    );\r\n};","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst { reduxForm, Field, FieldArray} = require('redux-form');\r\nconst { FormGroup, Label, Input } = require('reactstrap');\r\nconst { Alert, Button } = require('reactstrap');\r\nconst { renderField } = require('./render-field');\r\nconst CheckboxList = require('./fields/checkboxlist');\r\nconst { modalToggle } = require('../file-manager/fm-actions');\r\n\r\nconst renderFieldType = require('./render-field-type')\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.executeFormAction = this.executeFormAction.bind(this);\r\n        this.fileManagerModalToggle = this.fileManagerModalToggle.bind(this);\r\n    }\r\n\r\n    fileManagerModalToggle() {\r\n        const { fileManagerModalToggle, fileManagerModalOpened } = this.props;\r\n\r\n        return function (selectFunc, options = {}) {\r\n            fileManagerModalToggle(!fileManagerModalOpened, selectFunc);\r\n        }\r\n    }\r\n\r\n    executeFormAction(command, fieldData) {\r\n        const { commands, formValues } = this.props;\r\n\r\n        commands[command](formValues, fieldData);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { formName, formData, onClose, error, handleSubmit, pristine, reset, submitting, submitSucceeded, display } = this.props;\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                {display && <h1>{display.title}</h1>}\r\n                {display && <p className=\"text-muted\">{display.description}</p>}\r\n\r\n                {!submitting && (error && <Alert color=\"danger\">{error}</Alert>)}\r\n\r\n                {\r\n                    formData.meta &&\r\n                    <div className=\"meta\">\r\n                        {formData.meta.map((props, index) => {\r\n                            return renderFieldType(\"meta\", props);\r\n                        })}\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    formData.details &&\r\n                    <div className=\"details\">\r\n                        {formData.details.map((props, index) => {\r\n                            $.extend(props, { fileManagerModalToggle: this.fileManagerModalToggle(), executeFormAction: this.executeFormAction });\r\n                            return renderFieldType(\"details\", props);\r\n                        })}\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    formData.taxonomyTypes &&\r\n                    <div className=\"taxonomies\">\r\n                        {\r\n                            formData.taxonomyTypes.map((props) => {\r\n                                const { typeId, input: {name}, display: {title}, taxonomies} = props;\r\n                                return <CheckboxList key={typeId} taxonomyName={`taxonomyTypes.${typeId}`} title={title} taxonomies={taxonomies} />;\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"actions mt-1\">\r\n                    <Button className=\"mr-1\" color=\"primary\" type=\"submit\" disabled={submitting}>{display ? display.submitLabel : \"Submit\"}</Button>\r\n                    {\r\n                        onClose && <Button type=\"Button\" onClick={onClose} disabled={submitting}>{display ? display.dismissForm : \"Cancel\"}</Button>\r\n                    }\r\n                </div>\r\n            </form>\r\n        );\r\n    }  \r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        fileManagerModalOpened: state.fm.modal.toggle,\r\n    }\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ fileManagerModalToggle: modalToggle }, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(Form);","﻿const $ = require('jquery');\r\nconst { Button, Input } = require('reactstrap');\r\n\r\nvar addUrlParam = function (search, key, val) {\r\n    var newParam = key + '=' + val,\r\n        params = '?' + newParam;\r\n\r\n    // If the \"search\" string exists, then build params from it\r\n    if (search) {\r\n        // Try to replace an existance instance\r\n        params = search.replace(new RegExp('([?&])' + key + '[^&]*'), '$1' + newParam);\r\n\r\n        // If nothing was replaced, then add the new param to the end\r\n        if (params === search) {\r\n            params += '&' + newParam;\r\n        }\r\n    }\r\n\r\n    return params;\r\n};\r\n\r\nmodule.exports = class LanguageSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedLang: props.defaultLanguage\r\n        };\r\n\r\n        this.onSelectChange = this.onSelectChange.bind(this);\r\n        this.onButtonClick = this.onButtonClick.bind(this);\r\n    }\r\n\r\n    onSelectChange(e) {\r\n        var target = e.target;\r\n        this.setState({ selectedLang: target.value });\r\n    }\r\n\r\n    onButtonClick(e) {\r\n        window.location.href = window.location.pathname + addUrlParam(window.location.search, 'lang', this.state.selectedLang);\r\n    }\r\n\r\n    render() {\r\n        const { languages} = this.props;\r\n\r\n        return (\r\n            <div className=\"form-language\">\r\n                <div className=\"pull-right ml-q\">\r\n                    <Button className=\"btn btn-secondary\"\r\n                        onClick={this.onButtonClick}>OK</Button>\r\n                </div>\r\n                <div className=\"pull-right\" >\r\n                    <Input type=\"select\" value={this.state.selectedLang} onChange={this.onSelectChange}>\r\n                        {\r\n                            $.map(languages, (lang, index) => {\r\n                                return <option key={index} value={index}>{lang}</option>;\r\n                            })\r\n                        }\r\n                    </Input>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};","﻿const $ = require('jquery');\r\nconst { Field, FieldArray} = require('redux-form');\r\nconst { renderField } = require('./render-field');\r\n\r\nmodule.exports = function (prefixName, props) {\r\n    const { name, childFields } = props;\r\n    const renderFieldArray = require('./array');\r\n\r\n    const newProps = $.extend(true, {}, props,\r\n        {\r\n            name: prefixName ? `${prefixName}.${name}` : name,\r\n            key: name\r\n        });\r\n\r\n    if (childFields)\r\n        return <FieldArray {...newProps} component={renderFieldArray} />;\r\n\r\n    return <Field {...newProps} component={renderField} />;\r\n}","﻿const { Input, InputGroup, InputGroupButton, InputGroupAddon, FormFeedback, FormGroup, FormText, Label, Button, Modal, ModalHeader, ModalBody, ModalFooter} = require('reactstrap');\r\n\r\nconst ImageField = require('./fields/image');\r\nconst CheckboxList = require('./fields/checkboxlist');\r\nconst Select = require('./fields/select');\r\nconst Editor = require('./fields/editor');\r\nconst FormInput = require('./fields/input');\r\n\r\nconst RenderInputGroup = (props) => {\r\n    const {input, display: {id, type, title, displayName, placeholder, prompt}, meta: {touched, error, warning}, status} = props;\r\n\r\n    var validationState = touched ? (error ? 'danger' : (warning ? 'warning' : 'success')) : undefined;\r\n\r\n    return (\r\n        <FormGroup color={validationState} className=\"mb-1\">\r\n            <InputGroup>\r\n                <InputGroupAddon dangerouslySetInnerHTML={{ __html: title }} />\r\n                <Input {...input} id={id} state={validationState} type={type} placeholder={placeholder ? placeholder : displayName} readOnly={status === 'ReadOnly'} />\r\n            </InputGroup>\r\n            {prompt && <FormText color=\"muted\">{prompt}</FormText>}\r\n            {touched && ((error && <FormFeedback>{error}</FormFeedback>) || (warning && <FormFeedback>{warning}</FormFeedback>))}\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nfunction renderField(props) {\r\n    const { display, status } = props;\r\n\r\n    if (!display)\r\n        return null;\r\n\r\n    var rt = display.renderType.toLowerCase();\r\n    switch (rt) {\r\n        case 'image':\r\n            return <ImageField {...props} />\r\n        case 'inputgroup':\r\n            return RenderInputGroup(props);\r\n        case 'checkbox':\r\n            return RenderCheckBox(props);\r\n        case 'checkboxlist':\r\n            return <CheckboxList {...props} />;\r\n        case 'select':\r\n            return <Select {...props} />\r\n        case 'editor':\r\n            return <Editor {...props} />\r\n        default:\r\n            return <FormInput {...props} />;\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    renderField\r\n}\r\n","﻿const $ = require('jquery');\r\nconst {SubmissionError} = require('redux-form');\r\n\r\nfunction formAjaxPromise(url, method, data) {\r\n    return new Promise((resolve, reject) =>\r\n        $.ajax({\r\n            url: url,\r\n            method: method,\r\n            data: data,\r\n            success: (response) => {\r\n                if (response.resultState !== 0) {\r\n                    resolve(response);\r\n                } else {\r\n                    reject(response);\r\n                }\r\n            },\r\n            error: (response) => {\r\n                reject(response);\r\n            }\r\n        })\r\n    );\r\n}\r\n\r\nfunction formSubmit(props) {\r\n    const {url, method, successAction, validate} = props;\r\n\r\n    return function (values) {\r\n        if (validate) {\r\n            var errors = validate(values);\r\n            var noErrors = (errors.details == undefined && errors.meta == undefined);\r\n            if (!noErrors)\r\n                return new Promise((resolve) => { resolve(); }).then(\r\n                    () => {\r\n                        throw new SubmissionError(errors);\r\n                    })\r\n        }\r\n        return formAjaxPromise(url, method, values)\r\n            .then((response) => {\r\n                successAction(response, props);\r\n            })\r\n            .catch((response) => {\r\n                if (response.resultState) {\r\n                    throw new SubmissionError(response.Message);\r\n                } else {\r\n                    throw new SubmissionError({ _error: response.statusText });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nmodule.exports = formSubmit;","﻿const $ = require('jquery');\r\n\r\nconst isType = (value, type) => {\r\n    switch (type) {\r\n        case 'email':\r\n            return value && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction fieldValidate(fields, values) {\r\n    const errors = {};\r\n\r\n    \r\n    for (var field in fields) {\r\n        if (!values)\r\n            values = {};\r\n\r\n        const fieldObj = fields[field];\r\n\r\n        var fieldName = fieldObj.name;\r\n\r\n        if (fieldObj.childFields) {\r\n            for (var value in values[fieldName]) {\r\n                var validateResult = fieldValidate(fieldObj.childFields, values[fieldName][value]);\r\n                if (validateResult) {\r\n                    if (!errors[fieldName])\r\n                        errors[fieldName] = [];\r\n                    errors[fieldName].push(validateResult);\r\n                }\r\n            }\r\n        }\r\n\r\n        const validate = fieldObj.fieldValidate;\r\n\r\n        if (!validate)\r\n            continue;\r\n\r\n        var hasRequired = validate.required;\r\n        var typeRequired = validate.type;\r\n        var minLengthRequired = validate.minLength;\r\n        var maxLengthRequired = validate.maxLength;\r\n        var hasCompare = validate.compare;\r\n\r\n        var hasContainLowercase = validate.containLower;\r\n        var hasContainUppercase = validate.containUpper;\r\n        var hasContainNumber = validate.containNumber;\r\n        var hasContainSpecialChar = validate.containSpecial;\r\n\r\n        if (hasRequired && !values[fieldName] || (Array.isArray(values[fieldName]) && !values[fieldName].length)) {\r\n            errors[fieldName] = hasRequired;\r\n        }\r\n        else if (typeRequired && !isType(values[fieldName], typeRequired.value)) {\r\n            errors[fieldName] = typeRequired.error;\r\n        }\r\n        else if (minLengthRequired && values[fieldName] && values[fieldName].length < minLengthRequired.value) {\r\n            errors[fieldName] = minLengthRequired.error;\r\n        }\r\n        else if (hasCompare && values[fieldName] != values[hasCompare.value]) {\r\n            errors[fieldName] = hasCompare.error;\r\n        }\r\n        else if (hasContainLowercase && !/(?=.*[a-z])/.test(values[fieldName])) {\r\n            errors[fieldName] = hasContainLowercase.error;\r\n        }\r\n        else if (hasContainUppercase && !/(?=.*[A-Z])/.test(values[fieldName])) {\r\n            errors[fieldName] = hasContainUppercase.error;\r\n        }\r\n        else if (hasContainNumber && !/(?=.*[0-9])/.test(values[fieldName])) {\r\n            errors[fieldName] = hasContainNumber.error;\r\n        }\r\n        else if (hasContainSpecialChar && !/(?=.*[!@#$%^&*])/.test(values[fieldName])) {\r\n            errors[fieldName] = hasContainSpecialChar.error;\r\n        }\r\n    }\r\n    return $.isEmptyObject(errors) ? undefined : errors;\r\n}\r\n\r\nconst validator = fieldGroups => values => {\r\n    const errors = {};\r\n\r\n    for (var fieldGroup in fieldGroups) {\r\n        errors[fieldGroup] = fieldValidate(fieldGroups[fieldGroup], values[fieldGroup]);\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nmodule.exports = validator","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst { Alert } = require('reactstrap');\r\n\r\nconst keys = {\r\n    push: \"PUSH\",\r\n    remove: \"REMOVE\"\r\n};\r\n\r\nconst actions = {\r\n    push: (alertType, content) => ({\r\n        type: keys.push,\r\n        alertType,\r\n        content\r\n    }),\r\n    remove: (index) => ({\r\n        type: keys.remove,\r\n        index\r\n    })\r\n}\r\n\r\nconst initState = {\r\n    alerts: []\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.push:\r\n            newState.alerts.push({ type: action.alertType, content: action.content });\r\n            break;\r\n        case keys.remove:\r\n            newState.alerts.splice(action.index, 1);\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n}\r\n\r\nclass PageAlerts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { alerts, remove } = this.props;\r\n        return (\r\n            <div>\r\n                {\r\n                    alerts.map((alert, index) => {\r\n                        return (\r\n                            <Alert key={index} color={alert.type}\r\n                                toggle={() => {\r\n                                    remove(index);\r\n                                }} >{alert.content}</Alert>\r\n                            );\r\n                    })\r\n                }\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nconst stateToProps = (state) => {\r\n    return state.pageAlerts\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators(actions, reducer)\r\n);\r\n\r\nmodule.exports = {\r\n    default: connect(stateToProps, reducerToProps)(PageAlerts),\r\n    actions,\r\n    reducer\r\n}\r\n","﻿const PageTitle = (props) => {\r\n    return (\r\n        <h3 className=\"page-title\">{props.children}</h3>\r\n        );\r\n}\r\n\r\nmodule.exports = {\r\n    PageTitle\r\n}","﻿const $ = require('jquery');\r\nconst classnames = require('classnames');\r\nconst { Nav, NavItem, NavLink, TabContent, TabPane } = require('reactstrap');\r\n\r\nconst keys = {\r\n    tabAdd: \"TAB_ADD\",\r\n    tabRemove: \"TAD_REMOVE\",\r\n    tabChange: \"TAB_CHANGE\"\r\n};\r\nconst actions = {\r\n    tabAdd: (id, title, content) => ({\r\n        type: keys.tabAdd,\r\n        tab: { id, title, content }\r\n    }),\r\n\r\n    tabRemove: (tab) => ({\r\n        type: keys.tabRemove,\r\n        tab\r\n    }),\r\n\r\n    tabChange: (tab) => ({\r\n        type: keys.tabChange,\r\n        tab\r\n    })\r\n}\r\n\r\nconst initState = {\r\n    active: null,\r\n    tabs: []\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.tabAdd:\r\n            newState.tabs = newState.tabs.filter(tab => tab.id !== action.tab.id);\r\n            newState.tabs.push(action.tab);\r\n            newState.active = action.tab;\r\n            break;\r\n        case keys.tabRemove:\r\n            newState.tabs = newState.tabs.filter(tab => tab.id !== action.tab.id);\r\n            if (newState.tabs.length !== 0)\r\n                newState.active = newState.tabs[0];\r\n            break;\r\n        case keys.tabChange:\r\n            if (newState.active.id !== action.tab.id)\r\n                newState.active = action.tab;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nclass TabControl extends React.Component {\r\n    render()\r\n    {\r\n        const { activeTab, tabs, tabChange } = this.props;\r\n        return (\r\n            <div className=\"tab-control\">\r\n                <Nav tabs>\r\n                    {tabs.map((tab) => (\r\n                        <NavItem key={tab.id}>\r\n                            <NavLink className={classnames({ active: activeTab && activeTab.id === tab.id })}\r\n                                onClick={() => { tabChange(tab); }}\r\n                                dangerouslySetInnerHTML={{ __html: tab.title }}></NavLink>\r\n                        </NavItem>\r\n                    ))}\r\n                </Nav>\r\n                <TabContent activeTab={activeTab && activeTab.id}>\r\n                    {tabs.map((tab) => {\r\n                        return (\r\n                            <TabPane key={tab.id} tabId={tab.id}>\r\n                                {tab.content}\r\n                            </TabPane>\r\n                        );\r\n                    })}\r\n                </TabContent>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    default: TabControl,\r\n    actions,\r\n    reducer\r\n};\r\n\r\n","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst ReactTable = require('react-table').default;\r\nconst { ButtonGroup, Button, Input, Row, Col } = require('reactstrap');\r\n\r\n// Keys\r\nconst keys = {\r\n    init: \"INIT\",\r\n    loaded: \"LOADED\",\r\n    loading: \"LOADING\",\r\n    selectRow: \"SELECT_ROW\",\r\n    deleteSelectedRows: \"DETETE_SELECTED_ROWS\",\r\n    deleteRows: \"DELETE_ROWS\"\r\n};\r\n\r\n// Actions\r\nconst actions = {\r\n    init: (initValue) => ({\r\n        type: keys.init,\r\n        initValue\r\n    }),\r\n    onLoading: (isLoading) => ({\r\n        type: keys.loading,\r\n        isLoading\r\n    }),\r\n    onLoaded: (data) => ({\r\n        type: keys.loaded,\r\n        data\r\n    }),\r\n    selectRow: (index) => ({\r\n        type: keys.selectRow,\r\n        index\r\n    }),\r\n    deleteSelectedRows: () => ({\r\n        type: keys.deleteSelectedRows\r\n    }),\r\n\r\n    deleteRows: (indexs) => ({\r\n        type: keys.deleteRows,\r\n        indexs\r\n    })\r\n}\r\n\r\n// Reducer\r\nconst initialState = {\r\n    data: [],\r\n    pages: 0,\r\n    loading: false,\r\n    defaultPageSize: 25,\r\n    showFilters: true,\r\n    selectedRows: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.init:\r\n            newState.columns = action.initValue.columns;\r\n            break;\r\n        case keys.loading:\r\n            newState.loading = true;\r\n            break;\r\n        case keys.loaded:\r\n            newState.data = action.data;\r\n            newState.pages = parseInt(newState.data.length / newState.defaultPageSize);\r\n            if ((newState.data.length % newState.defaultPageSize) !== 0)\r\n                newState.pages++;\r\n            newState.loading = false;\r\n\r\n            break;\r\n        case keys.selectRow:\r\n            var index = newState.selectedRows.indexOf(action.index);\r\n            if (index >= 0)\r\n                newState.selectedRows.splice(index, 1);\r\n            else\r\n                newState.selectedRows.push(action.index);\r\n            break;\r\n        case keys.deleteSelectedRows:\r\n            newState.data = newState.data.filter((row, index) => newState.selectedRows.indexOf(index) < 0);\r\n            newState.selectedRows = [];\r\n            break;\r\n        case keys.deleteRows:\r\n            const filter = (row, index) => (action.indexs.indexOf(index) < 0);\r\n            newState.data = newState.data.filter(filter);\r\n            newState.selectedRows = newState.selectedRows.filter(filter);\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nfunction defaultFilterMethod (filter, row, column)\r\n{\r\n    var id = filter.pivotId || filter.id;\r\n    return void 0 === row[id] || String(row[id]).startsWith(filter.value)\r\n}\r\n\r\n// Component\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.getFirstColumn = this.getFirstColumn.bind(this);\r\n        this.deleteRows = this.deleteRows.bind(this);\r\n    }\r\n\r\n    fetchData(state, instance) {\r\n        const { dataUrl, onLoaded } = this.props;\r\n\r\n        $.get(dataUrl, onLoaded);\r\n    }\r\n\r\n    getFirstColumn() {\r\n        const { selectRow } = this.props;\r\n        return (\r\n            {\r\n                header: \"\",\r\n                accessor: 'id',\r\n                render: row => {\r\n                    const { selectedRows } = this.props;\r\n                    const checked = selectedRows.indexOf(row.index) >= 0;\r\n                    return  (\r\n                        <div className=\"checkbox\">\r\n                            <input type=\"checkbox\"\r\n                                onClick={() => {\r\n                                    selectRow(row.index);\r\n                                }} checked={checked} />\r\n                            <label />\r\n                        </div>\r\n                    )\r\n                },\r\n                width: 32,\r\n                sortable: false,\r\n                hideFilter: true\r\n            }\r\n        );\r\n    }\r\n\r\n    getActionsColumn() {\r\n        return {\r\n            header: \"Actions\",\r\n            accessor: 'id',\r\n            render: row => {\r\n\r\n                return (\r\n                    <div className=\"table-row-actions\">       \r\n                        <ButtonGroup>\r\n                            <button className=\"btn btn-icon\"\r\n                                onClick={() => {\r\n                                    const { deleteRows, deleteProps: { url, success } } = this.props;\r\n\r\n                                    this.deleteRows(url, [row.value], (response) => {\r\n                                        success(response);\r\n                                        deleteRows(row.index);\r\n                                    });\r\n                                }}>\r\n                                <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </ButtonGroup>\r\n                    </div>\r\n                )\r\n            },\r\n            width: 120,\r\n            sortable: false,\r\n            hideFilter: true\r\n        }\r\n    }\r\n\r\n    deleteRows(url, rowIds, callback) {\r\n        var result = window.confirm(\"delete?\");\r\n        if (result) {\r\n            $.ajax({\r\n                url,\r\n                method: \"DELETE\",\r\n                data: { ids: rowIds },\r\n                success: callback\r\n            });\r\n        }\r\n    }\r\n\r\n    onDelete() {\r\n        const {data, selectedRows, deleteSelectedRows, deleteProps: { url, success }} = this.props;\r\n\r\n        const ids = data.filter((row, index) => {\r\n            return selectedRows.indexOf(index) >= 0;\r\n        }).map((row) => row.id);;\r\n\r\n        this.deleteRows(url, ids,\r\n            (response) => {\r\n                success(response);\r\n                deleteSelectedRows();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { columns, data, pages, loading, defaultPageSize, showFilters, selectedRows } = this.props;\r\n\r\n        if (!columns)\r\n            return;\r\n\r\n        if (!(columns[0].accessor === \"id\")) {\r\n            columns.unshift(this.getFirstColumn());\r\n            columns.push(this.getActionsColumn());   \r\n        }\r\n\r\n        return (\r\n            <div className=\"react-table\">\r\n                <div className=\"mb-1\">\r\n                    <div className=\"clearfix\">\r\n                        <Button className=\"ml-h pull-right\" outline disabled={!selectedRows.length} onClick={this.onDelete.bind(this)}>\r\n                            Ok\r\n                        </Button>\r\n                        <div className=\"pull-right\">\r\n                            <Input type=\"select\">\r\n                                <option>Delete selected</option>\r\n                            </Input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-wrap\">\r\n                    <ReactTable\r\n                        className='-striped -highlight'\r\n                        manual\r\n                        defaultPageSize={defaultPageSize}\r\n                        showFilters={showFilters}\r\n                        data={data}\r\n                        pages={pages}\r\n                        loading={loading}\r\n                        columns={columns}\r\n                        onChange={this.fetchData.bind(this)}\r\n                        defaultFilterMethod={defaultFilterMethod}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return {}\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators(actions, reducer)\r\n);\r\n\r\nmodule.exports = {\r\n    default: connect(stateToProps, reducerToProps)(Table),\r\n    reducer,\r\n    actions\r\n}\r\n","module.exports = {\r\n    index: require('./page-templates/index'),\r\n    create: require('./page-templates/create'),\r\n    update: require('./page-templates/update')\r\n};","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst { connect, Provider } = require('react-redux');\r\nconst { Input, Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\nconst SharedForm = require('./shared/components/form').default;\r\n\r\nconst store = createStore(require('./shared/redux/reducer'));\r\nconst { PageTitle } = require('../components/page');\r\n\r\nvar PageContent = (props) => {\r\n    const { parameters, title, description, formUrl, formSubmitData, indexUrl, Form} = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"clearfix mb-1\">\r\n                <div className=\"pull-left\">\r\n                    <PageTitle><a href={indexUrl}>{title}</a></PageTitle>\r\n                    { description }\r\n                </div>\r\n            </div>\r\n            <Card>\r\n                <CardBlock>\r\n                    {\r\n                        Form ? Form : <SharedForm formName=\"create\" formUrlData={parameters} formUrl={formUrl} formSubmitData={formSubmitData} />\r\n                    }\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect} = require('react-redux');\r\n\r\nconst { Provider } = require('react-redux');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst pageAlert = require('../components/page-alerts');\r\nconst PageTable = require('./index/components/table');\r\nconst { PageTitle } = require('../components/page');\r\n\r\nconst pageReducer = require('./index/redux/reducer');\r\n\r\nconst store = createStore(pageReducer);\r\n\r\nvar PageContent = (props) => {\r\n    const { title, createNewUrl, dataUrl, deleteUrl, tableColumns } = props;\r\n\r\n    return (\r\n        <div>\r\n            <pageAlert.default />\r\n            <div className=\"clearfix mb-1\">\r\n                <div className=\"pull-left\">\r\n                    <PageTitle>{ title }</PageTitle>\r\n                </div>\r\n                <div className=\"pull-left ml-1\">\r\n                    <a className=\"btn btn-outline-primary\" href={createNewUrl}>Create new</a>\r\n                </div>\r\n            </div>\r\n            <Card>\r\n                <CardBlock>\r\n                    <PageTable dataUrl={dataUrl} deleteUrl={deleteUrl} columns={tableColumns}/>\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props}/>\r\n        </Provider>\r\n    );\r\n};","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\n\r\nconst Table = require('../../../components/table').default;\r\n\r\nconst ReduxTable = (props) => {\r\n    const { dataUrl, deleteUrl, columns } = props;\r\n\r\n    const deleteProps = {\r\n        url: deleteUrl,\r\n        success: (response) => {\r\n            console.log(response);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Table {...props} deleteProps={deleteProps} columns={columns} dataUrl={dataUrl} />\r\n    );\r\n}\r\n\r\nconst stateToProps = (state) => {\r\n    return state.table\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(ReduxTable);\r\n","﻿const $ = require('jquery');\r\nconst { combineReducers } = require('redux');\r\n\r\nconst table = require('../../../components/table').reducer;\r\nconst pageAlerts = require('../../../components/page-alerts').reducer;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    reducer,\r\n    table,\r\n    pageAlerts\r\n});","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst { reduxForm, getFormValues } = require('redux-form');\r\nconst { Row, Col, Input, Button } = require('reactstrap');\r\n\r\nconst alerts = require('../../../components/page-alerts');\r\nconst DynamicForm = require('../../../components/dynamic-form');\r\nconst validator = require('../../../components/form/validator');\r\nconst submit = require('../../../components/form/submit');\r\nconst LanguageSelect = require('../../../components/form/language-select');\r\n\r\nconst keys =  {\r\n    loadNewForm: \"LOAD_NEW_FORM\",\r\n};\r\n\r\nconst actions = {\r\n    loadNewForm: (formData) => ({\r\n        type: keys.loadNewForm,\r\n        formData\r\n    })\r\n};\r\n\r\nconst initialState = {\r\n    formData: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.loadNewForm:\r\n            newState.formTitle = action.formData.title;\r\n            newState.formLanguages = action.formData.languages;\r\n            newState.formDefaultLanguage = action.formData.defaultLanguage;\r\n\r\n            const newFormData = $.extend(true, {}, action.formData);\r\n            delete newFormData.languages;\r\n            delete newFormData.title;\r\n            newState.formData = newFormData;\r\n\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getCommands = this.getCommands.bind(this);\r\n        this.getForm = this.getForm.bind(this);\r\n    }\r\n\r\n    getCommands() {\r\n        return {\r\n        };\r\n    }\r\n\r\n    getForm() {\r\n        const { loadNewForm, formUrl, formUrlData, } = this.props;\r\n\r\n        $.get(formUrl, formUrlData, (formResult) => {\r\n            loadNewForm(formResult);\r\n        });\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { commands, formData, formTitle, formLanguages, formDefaultLanguage, formName, formSubmitData, alertPush } = this.props;\r\n\r\n        if (!formData)\r\n            return this.getForm();\r\n\r\n        const validate = validator({ details: formData.details, meta: formData.meta });\r\n        const sumbitProps = $.extend({ validate, alertPush }, formSubmitData);\r\n\r\n        const reduxFormProps = {\r\n            form: 'create',\r\n            formData,\r\n            commands: this.getCommands(),\r\n            onSubmit: submit(sumbitProps),\r\n            _initialValues: formData.initialValues,\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Row className=\"mb-1\">\r\n                    {\r\n                        formTitle && \r\n                        <Col md=\"8\">\r\n                            <div className=\"card-text\">\r\n                                <h4>\r\n                                    {formTitle}\r\n                                </h4>\r\n                            </div>\r\n                        </Col>\r\n                    }\r\n\r\n                    {\r\n                        formLanguages && \r\n                        <Col md=\"4\">\r\n                            <LanguageSelect languages={formLanguages} defaultLanguage={formDefaultLanguage}/>\r\n                        </Col>\r\n                    }\r\n                </Row>\r\n                <DynamicForm {...reduxFormProps} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.mainForm;\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ loadNewForm: actions.loadNewForm, alertPush: alerts.actions.push }, reducer)\r\n);\r\n\r\nmodule.exports = {\r\n    default: connect(stateToProps, reducerToProps)(Form),\r\n    actions,\r\n    reducer\r\n};","﻿module.exports = {\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\nconst fmTabControl = require('../../../components/tab-control').reducer\r\n\r\nconst pageReducer = (state = {}, action) => {\r\n    return state;\r\n}\r\n\r\nmodule.exports = combineReducers({\r\n    pageAlerts: require('../../../components/page-alerts').reducer,\r\n    page: pageReducer,\r\n    mainForm: require('../components/form').reducer,\r\n    form: formReducer,\r\n    fm: require('../../../components/file-manager').fmReducer,\r\n    fmTabControl\r\n});","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect, Provider} = require('react-redux');\r\nconst { Row, Col, Input, Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst PageAlerts = require('../components/page-alerts').default;\r\n\r\nconst SharedForm = require('./shared/components/form').default;\r\nconst { PageTitle } = require('../components/page');\r\n\r\nconst store = createStore(require('./shared/redux/reducer'));\r\n\r\nvar PageContent = (props) => {\r\n    const { parameters, title, description, createNewUrl, formUrl, formSubmitData, indexUrl, Form } = props;\r\n\r\n    return (\r\n        <div>\r\n            <PageAlerts />\r\n            <div className=\"clearfix mb-1\">\r\n                <div className=\"pull-left\">\r\n                    <PageTitle><a href={indexUrl}>{title}</a></PageTitle>\r\n                </div>\r\n                <div className=\"pull-left ml-1\">\r\n                    <a className=\"btn btn-outline-primary\" href={createNewUrl}>Create new</a>\r\n                </div>\r\n            </div>\r\n            <Card>\r\n                <CardBlock>\r\n                    {\r\n                        Form ? Form : <SharedForm formName=\"create\" formUrl={formUrl} formUrlData={parameters} formSubmitData={formSubmitData}/>\r\n                    }\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ }, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","global.Corein = {\r\n    components: require('./corein/components'),\r\n    pageTemplates: require('./corein/page-templates')\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowCompare\n */\n\n'use strict';\n\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\n/**\n * Does a shallow comparison for props and state.\n * See ReactComponentWithPureRenderMixin\n * See also https://facebook.github.io/react/docs/shallow-compare.html\n */\nfunction shallowCompare(instance, nextProps, nextState) {\n  return (\n    !shallowEqual(instance.props, nextProps) ||\n    !shallowEqual(instance.state, nextState)\n  );\n}\n\nmodule.exports = shallowCompare;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;base64,"}