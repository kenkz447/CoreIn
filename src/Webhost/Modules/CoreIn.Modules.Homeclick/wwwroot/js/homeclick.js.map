{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","homeclick.jsx","homeclick/collection.jsx","homeclick/collection/create.jsx","homeclick/collection/create/redux/keys.jsx","homeclick/collection/create/redux/reducer.jsx","homeclick/collection/index.jsx","homeclick/collection/index/components/table.jsx","homeclick/collection/index/redux/reducer.jsx","homeclick/collection/shared/components/form.jsx","homeclick/collection/update.jsx","homeclick/collection/update/redux/keys.jsx","homeclick/collection/update/redux/reducer.jsx","homeclick/option-group.jsx","homeclick/option-group/create.jsx","homeclick/option-group/create/redux/keys.jsx","homeclick/option-group/create/redux/reducer.jsx","homeclick/option-group/index.jsx","homeclick/option-group/index/components/table.jsx","homeclick/option-group/index/redux/reducer.jsx","homeclick/option-group/shared.jsx","homeclick/option-group/shared/components/form.jsx","homeclick/option-group/update.jsx","homeclick/option-group/update/redux/keys.jsx","homeclick/option-group/update/redux/reducer.jsx","homeclick/post.jsx","homeclick/post/create.jsx","homeclick/post/create/redux/keys.jsx","homeclick/post/create/redux/reducer.jsx","homeclick/post/index.jsx","homeclick/post/index/components/table.jsx","homeclick/post/index/redux/reducer.jsx","homeclick/post/shared/components/form.jsx","homeclick/post/update.jsx","homeclick/post/update/redux/keys.jsx","homeclick/post/update/redux/reducer.jsx","homeclick/project.jsx","homeclick/project/create.jsx","homeclick/project/create/redux/keys.jsx","homeclick/project/create/redux/reducer.jsx","homeclick/project/index.jsx","homeclick/project/index/components/table.jsx","homeclick/project/index/redux/reducer.jsx","homeclick/project/shared/components/layout-modal.jsx","homeclick/project/shared/components/project-form.jsx","homeclick/project/update.jsx","homeclick/project/update/redux/keys.jsx","homeclick/project/update/redux/reducer.jsx"],"names":[],"mappings":"AAAA;ACAA,CAAC,MAAM,CAAC,SAAS,GAAG;IAChB,OAAO,EAAE,OAAO,CAAC,qBAAqB,CAAC;IACvC,UAAU,EAAE,OAAO,CAAC,wBAAwB,CAAC;IAC7C,IAAI,EAAE,OAAO,CAAC,kBAAkB,CAAC;IACjC,WAAW,EAAE,OAAO,CAAC,0BAA0B,CAAC;;;;;;ACJpD,CAAC,MAAM,KAAK,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7C,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC9C,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAE9C,MAAM,CAAC,OAAO,GAAG;IACb,KAAK;IACL,MAAM;IACN,MAAM;;;;ACPV,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtE,MAAM,IAAI,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC;AACzD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAE7D,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;;AAE7B,IAAI,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC;;IAEnC;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,UAAU,EAAA,IAAC,EAAA;oBACR,oBAAA,QAAO,EAAA,IAAC,EAAC,KAAe,CAAA,EAAA,GAAA,EAAE,WAAW,IAAI,IAAI,WAAW,EAAE,CAAE;gBACnD,CAAA,EAAA;gBACb,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,IAAI,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAC,QAAA,EAAQ;wBACnB,OAAA,EAAO,CAAC,+BAAA,EAA+B;wBACvC,cAAA,EAAc,CAAE;4BACZ,GAAG,EAAE,oBAAoB;4BACzB,MAAM,EAAE,MAAM;4BACd,aAAa,EAAE,CAAC,KAAK,KAAK;gCACtB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;6BACvC;yBACH,CAAA;oBACJ,CAAA;gBACM,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,QAAQ;KACP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,gBAAA,GAAA,CAAE,GAAG,KAAM,CAAA,CAAG,CAAA;QACnB,CAAA;MACb;CACL;;;ACnDD,CAAC,MAAM,CAAC,OAAO,GAAG;CACjB;;;ACDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;AAElD,MAAM,EAAE,iBAAiB,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAExF,MAAM,WAAW,GAAG,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,KAAK;IACxC,OAAO,KAAK,CAAC;AACjB,CAAC;;AAED,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,UAAU,EAAE,UAAU,CAAC,OAAO;IAC9B,IAAI,EAAE,WAAW;IACjB,WAAW,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,OAAO;IAC5D,IAAI,EAAE,WAAW;IACjB,EAAE,EAAE,SAAS;IACb,YAAY,EAAE,iBAAiB;CAClC,CAAC;;;AClBF,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEzC,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC5C,MAAM,KAAK,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAClD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtE,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC;AACrD,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;AACvD,MAAM,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;;AAE/D,MAAM,OAAO,GAAG,eAAe,CAAC;IAC5B,KAAK,EAAE,OAAO,CAAC,uBAAuB,CAAC;IACvC,UAAU,EAAE,iBAAiB;AACjC,CAAC,CAAC,CAAC;;AAEH,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEnC,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;AAC7B,IAAI,MAAM,EAAE,kBAAkB,EAAE,GAAG,KAAK,CAAC;;IAErC;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,SAAS,EAAA,IAAE,CAAA,EAAA;YACZ,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAA,GAAE,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,iBAAA,EAAiB,CAAC,IAAA,EAAI,CAAC,oBAAqB,CAAA,EAAA,YAAc,CAAA;gBAC/D,CAAA;YACT,CAAA,EAAA;YACP,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,KAAK,EAAA,CAAA,CAAC,OAAA,EAAO,CAAC,0BAAA,EAA0B,CAAC,SAAA,EAAS,CAAC,oBAAA,EAAoB,CAAC,SAAA,EAAS,CAAC,oBAAoB,CAAE,CAAA;gBACjG,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;AAChC,IAAI,QAAQ;;KAEP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,IAAA,CAAG,CAAA;QACR,CAAA;MACb;CACL;;;ACzDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAChD,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC;;AAE9C,MAAM,UAAU,SAAS,KAAK,CAAC,SAAS,CAAC;IACrC,WAAW,QAAQ;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrD,KAAK;;IAED,UAAU,GAAG;AACjB,QAAQ,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE/B,OAAO;YACH;gBACI,MAAM,EAAE,WAAW;gBACnB,QAAQ,EAAE,WAAW;gBACrB,MAAM,EAAE,GAAG,KAAK,oBAAA,KAAI,EAAA,IAAC,EAAA,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,iBAAA,EAAiB,CAAC,GAAA,EAAG,CAAE,GAAG,CAAC,KAAM,CAAA,CAAG,CAAM,CAAA,CAAC;gBAC/E,KAAK,EAAE,GAAG;gBACV,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,IAAI;aACnB,EAAE;gBACC,MAAM,EAAE,OAAO;gBACf,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE,GAAG,KAAK,oBAAA,KAAI,EAAA,IAAC,EAAA,oBAAA,GAAE,EAAA,CAAA,CAAC,IAAA,EAAI,CAAE,GAAG,SAAS,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,EAAC,CAAC,MAAA,EAAM,CAAC,OAAQ,CAAA,EAAC,GAAG,CAAC,KAAU,CAAM,CAAA,CAAC;aAC1G;SACJ,CAAC;AACV,KAAK;;IAED,MAAM,GAAG;AACb,QAAQ,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1C,MAAM,WAAW,GAAG;YAChB,GAAG,EAAE,SAAS;YACd,OAAO,EAAE,CAAC,QAAQ,KAAK;gBACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACzB;AACb,SAAS,CAAC;;QAEF;YACI,oBAAC,KAAK,EAAA,gBAAA,GAAA,CAAE,GAAG,IAAI,CAAC,KAAK,EAAC,CAAC,CAAA,WAAA,EAAW,CAAE,WAAW,EAAC,CAAC,OAAA,EAAO,CAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC,OAAA,EAAO,CAAE,OAAQ,CAAA,CAAA,CAAG,CAAA;UACnG;KACL;AACL,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK;AAC5B,CAAC,CAAC;;AAEF,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC;;;;ACtDnE,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAEpC,MAAM,YAAY,GAAG;;AAErB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3C,QAAQ,MAAM,CAAC,IAAI;QACf;YACI,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO;CAChC,CAAC;;;ACpBF,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAChD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;AACnC,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAE3D,MAAM,IAAI,IAAI;IACV,WAAW,EAAE,eAAe;AAChC,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG;IACZ,WAAW,EAAE,CAAC,QAAQ,MAAM;QACxB,IAAI,EAAE,IAAI,CAAC,WAAW;QACtB,QAAQ;KACX,CAAC;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG;IACjB,QAAQ,EAAE,IAAI;AAClB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3C,QAAQ,MAAM,CAAC,IAAI;QACf,KAAK,IAAI,CAAC,WAAW;YACjB,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAChD,YAAY,MAAM;;QAEV;YACI,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;;AAEF,MAAM,WAAW,SAAS,KAAK,CAAC,SAAS,CAAC;IACtC,WAAW,QAAQ;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,KAAK;;IAED,WAAW,GAAG;QACV,OAAO;SACN,CAAC;AACV,KAAK;;IAED,OAAO,GAAG;AACd,QAAQ,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1D,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,CAAC,UAAU,KAAK;YACxC,WAAW,CAAC,UAAU,CAAC,CAAC;AACpC,SAAS,CAAC,CAAC;;QAEH,OAAO,IAAI,CAAC;AACpB,KAAK;;IAED,MAAM,GAAG;AACb,QAAQ,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1D,IAAI,CAAC,QAAQ;AACrB,YAAY,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;;QAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QACpF,MAAM,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;AACnE,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;;QAE1C,IAAI,gBAAgB,GAAG,SAAS,CAAC;YAC7B,IAAI,EAAE,QAAQ;YACd,QAAQ;YACR,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE;YAC5B,QAAQ;YACR,aAAa,EAAE,QAAQ,CAAC,aAAa;AACjD,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAEzB,QAAQ,gBAAgB,GAAG,OAAO,CAAC,KAAK,KAAK,EAAE,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;;QAExG;YACI,oBAAA,KAAI,EAAA,IAAC,EAAA;gBACD,oBAAC,gBAAgB,EAAA,IAAA,CAAG,CAAA;YAClB,CAAA;UACR;KACL;AACL,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,OAAO,KAAK,CAAC,WAAW,CAAC;AAC7B,CAAC,CAAC;;AAEF,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,OAAO,CAAC;AACrE,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG;IACb,OAAO,EAAE,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC;IAC3D,OAAO;IACP,OAAO;CACV;;;AChGD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtE,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;AAC5C,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;;AAElC,MAAM,IAAI,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC;;AAEzD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAE7D,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;AAC7B,IAAI,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;;IAE5D;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,UAAU,EAAA,IAAA,CAAG,CAAA,EAAA;YACd,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,MAAM,EAAA,CAAA,CAAC,KAAA,EAAK,CAAC,SAAU,CAAA,EAAA,YAAmB,CAAA;gBACnC,CAAA;YACT,CAAA,EAAA;YACP,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,UAAU,EAAA,IAAC,EAAA;oBACR,oBAAA,QAAO,EAAA,IAAC,EAAC,KAAe,CAAA,EAAA,GAAA,EAAE,WAAW,IAAI,IAAI,WAAW,EAAG;gBAClD,CAAA,EAAA;gBACb,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,IAAI,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAC,QAAA,EAAQ;wBACnB,OAAA,EAAO,CAAC,+BAAA,EAA+B;wBACvC,WAAA,EAAW,CAAE,UAAU,EAAC;wBACxB,cAAA,EAAc,CAAE;4BACZ,GAAG,EAAE,oBAAoB;4BACzB,MAAM,EAAE,KAAK;4BACb,aAAa,EAAE,CAAC,KAAK,KAAK;gCACtB,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;gCACpC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;6BAClE;yBACH,CAAA;oBACJ,CAAA;gBACM,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,QAAQ;KACP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;AAClE,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,gBAAA,GAAA,CAAE,GAAG,KAAM,CAAA,CAAG,CAAA;QACnB,CAAA;MACb;CACL;;;AC/DD,CAAC,MAAM,CAAC,OAAO,GAAG;CACjB;;;ACDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;AAElD,MAAM,EAAE,iBAAiB,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAExF,MAAM,YAAY,GAAG;;AAErB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,UAAU,EAAE,UAAU,CAAC,OAAO;IAC9B,IAAI,EAAE,OAAO;IACb,WAAW,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,OAAO;IAC5D,IAAI,EAAE,WAAW;IACjB,EAAE,EAAE,SAAS;IACb,YAAY,EAAE,iBAAiB;CAClC,CAAC;;;ACtBF,CAAC,MAAM,KAAK,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC/C,MAAM,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAChD,MAAM,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;;AAEhD,MAAM,CAAC,OAAO,GAAG;IACb,KAAK;IACL,MAAM;IACN,MAAM;;;;ACPV,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtE,MAAM,IAAI,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC;AACzD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAE7D,MAAM,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEhE,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;;AAE7B,IAAI,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC;;IAEnC;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,UAAU,EAAA,IAAC,EAAA;oBACR,oBAAA,QAAO,EAAA,IAAC,EAAC,KAAe,CAAA,EAAA,GAAA,EAAE,WAAW,IAAI,IAAI,WAAW,EAAE,CAAE;gBACnD,CAAA,EAAA;gBACb,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,IAAI,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAC,QAAA,EAAQ;wBACnB,OAAA,EAAO,CAAE,OAAO,EAAC;wBACjB,cAAA,EAAc,CAAE,cAAe,CAAA;oBACjC,CAAA;gBACM,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,QAAQ;KACP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,gBAAA,GAAA,CAAE,GAAG,KAAM,CAAA,CAAG,CAAA;QACnB,CAAA;MACb;CACL;;;AC/CD,CAAC,MAAM,CAAC,OAAO,GAAG;CACjB;;;ACDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;AAElD,MAAM,EAAE,iBAAiB,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAExF,MAAM,WAAW,GAAG,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,KAAK;IACxC,OAAO,KAAK,CAAC;AACjB,CAAC;;AAED,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,UAAU,EAAE,UAAU,CAAC,OAAO;IAC9B,IAAI,EAAE,WAAW;IACjB,WAAW,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,OAAO;IAC5D,IAAI,EAAE,WAAW;IACjB,EAAE,EAAE,SAAS;IACb,YAAY,EAAE,iBAAiB;CAClC,CAAC;;;AClBF,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEzC,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC5C,MAAM,KAAK,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAClD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtE,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC;AACrD,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;AACvD,MAAM,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;;AAE/D,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAExF,MAAM,OAAO,GAAG,eAAe,CAAC;IAC5B,KAAK,EAAE,OAAO,CAAC,uBAAuB,CAAC;IACvC,UAAU,EAAE,iBAAiB;AACjC,CAAC,CAAC,CAAC;;AAEH,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEnC,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;AAC7B,IAAI,MAAM,EAAE,kBAAkB,EAAE,GAAG,KAAK,CAAC;;IAErC;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,SAAS,EAAA,IAAE,CAAA,EAAA;YACZ,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAA,GAAE,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,iBAAA,EAAiB,CAAC,IAAA,EAAI,CAAE,YAAc,CAAA,EAAA,YAAc,CAAA;gBACzD,CAAA;YACT,CAAA,EAAA;YACP,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,KAAK,EAAA,CAAA,CAAC,OAAA,EAAO,CAAE,OAAO,EAAC,CAAC,SAAA,EAAS,CAAE,SAAS,EAAC,CAAC,OAAA,EAAO,CAAE,YAAa,CAAE,CAAA;gBAC/D,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;AAChC,IAAI,QAAQ;;KAEP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,IAAA,CAAG,CAAA;QACR,CAAA;MACb;CACL;;;AC3DD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAChD,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC;;AAE9C,MAAM,UAAU,SAAS,KAAK,CAAC,SAAS,CAAC;IACrC,WAAW,QAAQ;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;;IAED,MAAM,GAAG;AACb,QAAQ,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAEnD,MAAM,WAAW,GAAG;YAChB,GAAG,EAAE,SAAS;YACd,OAAO,EAAE,CAAC,QAAQ,KAAK;gBACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACzB;AACb,SAAS,CAAC;;QAEF;YACI,oBAAC,KAAK,EAAA,gBAAA,GAAA,CAAE,GAAG,IAAI,CAAC,KAAK,EAAC,CAAC,CAAA,WAAA,EAAW,CAAE,WAAW,EAAC,CAAC,OAAA,EAAO,CAAE,OAAO,EAAC,CAAC,OAAA,EAAO,CAAE,OAAQ,CAAA,CAAA,CAAG,CAAA;UACzF;KACL;AACL,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK;AAC5B,CAAC,CAAC;;AAEF,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC;;;;AClCnE,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAEpC,MAAM,YAAY,GAAG;;AAErB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3C,QAAQ,MAAM,CAAC,IAAI;QACf;YACI,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO;CAChC,CAAC;;;ACpBF,CAAC,MAAM,aAAa,GAAG,aAAa,CAAC;;AAErC,MAAM,CAAC,OAAO,GAAG;IACb,YAAY,EAAE,IAAI,aAAa,SAAS;IACxC,KAAK,EAAE;QACH,OAAO,EAAE,IAAI,aAAa,eAAe;QACzC,SAAS,EAAE,IAAI,aAAa,SAAS;QACrC,YAAY,EAAE,CAAC;YACX,MAAM,EAAE,OAAO;YACf,QAAQ,EAAE,OAAO;YACjB,MAAM,EAAE,GAAG,KAAK,oBAAA,KAAI,EAAA,IAAC,EAAA,oBAAA,GAAE,EAAA,CAAA,CAAC,IAAA,EAAI,CAAE,IAAI,aAAa,WAAW,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,EAAC,CAAC,MAAA,EAAM,CAAC,OAAQ,CAAA,EAAC,GAAG,CAAC,KAAU,CAAM,CAAA,CAAC;SACtH,CAAC;KACL;IACD,MAAM,EAAE;QACJ,OAAO,EAAE,IAAI,aAAa,UAAU;QACpC,cAAc,EAAE;YACZ,GAAG,EAAE,IAAI,aAAa,SAAS;YAC/B,MAAM,EAAE,MAAM;YACd,aAAa,EAAE,CAAC,KAAK,KAAK;gBACtB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;aACvC;SACJ;KACJ;IACD,MAAM,EAAE;QACJ,OAAO,EAAE,IAAI,aAAa,UAAU;QACpC,cAAc,EAAE;YACZ,GAAG,EAAE,IAAI,aAAa,SAAS;YAC/B,MAAM,EAAE,KAAK;YACb,aAAa,EAAE,CAAC,KAAK,KAAK;gBACtB,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;aAClE;SACJ;KACJ;;;;ACjCL,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAChD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;AACnC,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAE3D,MAAM,IAAI,IAAI;IACV,WAAW,EAAE,eAAe;AAChC,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG;IACZ,WAAW,EAAE,CAAC,QAAQ,MAAM;QACxB,IAAI,EAAE,IAAI,CAAC,WAAW;QACtB,QAAQ;KACX,CAAC;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG;IACjB,QAAQ,EAAE,IAAI;AAClB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3C,QAAQ,MAAM,CAAC,IAAI;QACf,KAAK,IAAI,CAAC,WAAW;YACjB,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAChD,YAAY,MAAM;;QAEV;YACI,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;;AAEF,MAAM,WAAW,SAAS,KAAK,CAAC,SAAS,CAAC;IACtC,WAAW,QAAQ;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,KAAK;;IAED,WAAW,GAAG;QACV,OAAO;SACN,CAAC;AACV,KAAK;;IAED,OAAO,GAAG;AACd,QAAQ,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1D,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,CAAC,UAAU,KAAK;YACxC,WAAW,CAAC,UAAU,CAAC,CAAC;AACpC,SAAS,CAAC,CAAC;;QAEH,OAAO,IAAI,CAAC;AACpB,KAAK;;IAED,MAAM,GAAG;AACb,QAAQ,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1D,IAAI,CAAC,QAAQ;AACrB,YAAY,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;;QAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QACpF,MAAM,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;AACnE,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;;AAElD,QAAQ,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;;QAE3C,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;YAChD,IAAI,CAAC,aAAa;AAC9B,gBAAgB,aAAa,GAAG,EAAE,CAAC;;YAEvB,IAAI,QAAQ,CAAC,aAAa,EAAE;gBACxB,aAAa,CAAC,aAAa,GAAG,EAAE,CAAC;gBACjC,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,aAAa,EAAE;oBACrC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE;iBACxE;aACJ;AACb,SAAS;;QAED,IAAI,gBAAgB,GAAG,SAAS,CAAC;YAC7B,IAAI,EAAE,QAAQ;YACd,QAAQ;YACR,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE;YAC5B,QAAQ;YACR,aAAa;AACzB,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAEzB,QAAQ,gBAAgB,GAAG,OAAO,CAAC,KAAK,KAAK,EAAE,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;;QAExG;YACI,oBAAA,KAAI,EAAA,IAAC,EAAA;gBACD,oBAAC,gBAAgB,EAAA,IAAA,CAAG,CAAA;YAClB,CAAA;UACR;KACL;AACL,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,OAAO,KAAK,CAAC,WAAW,CAAC;AAC7B,CAAC,CAAC;;AAEF,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,OAAO,CAAC;AACrE,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG;IACb,OAAO,EAAE,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC;IAC3D,OAAO;IACP,OAAO;CACV;;;AC9GD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtE,MAAM,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAE9E,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;AAC5C,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;;AAElC,MAAM,IAAI,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC;;AAEzD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAE7D,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;AAC7B,IAAI,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;;IAE5D;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,UAAU,EAAA,IAAA,CAAG,CAAA,EAAA;YACd,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAA,GAAE,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,iBAAA,EAAiB,CAAC,IAAA,EAAI,CAAE,YAAc,CAAA,EAAA,YAAc,CAAA;gBACzD,CAAA;YACT,CAAA,EAAA;YACP,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,UAAU,EAAA,IAAC,EAAA;oBACR,oBAAA,QAAO,EAAA,IAAC,EAAC,KAAe,CAAA,EAAA,GAAA,EAAE,WAAW,IAAI,IAAI,WAAW,EAAG;gBAClD,CAAA,EAAA;gBACb,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,IAAI,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAC,QAAA,EAAQ;wBACnB,OAAA,EAAO,CAAE,OAAO,EAAC;wBACjB,WAAA,EAAW,CAAE,UAAU,EAAC;wBACxB,cAAA,EAAc,CAAE,cAAe,CAAA;oBACjC,CAAA;gBACM,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,QAAQ;KACP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;AAClE,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,gBAAA,GAAA,CAAE,GAAG,KAAM,CAAA,CAAG,CAAA;QACnB,CAAA;MACb;CACL;;;AC1DD,CAAC,MAAM,CAAC,OAAO,GAAG;CACjB;;;ACDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;AAElD,MAAM,EAAE,iBAAiB,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAExF,MAAM,YAAY,GAAG;;AAErB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,UAAU,EAAE,UAAU,CAAC,OAAO;IAC9B,IAAI,EAAE,OAAO;IACb,WAAW,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,OAAO;IAC5D,IAAI,EAAE,WAAW;IACjB,EAAE,EAAE,SAAS;IACb,YAAY,EAAE,iBAAiB;CAClC,CAAC;;;ACtBF,CAAC,MAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACvC,MAAM,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACxC,MAAM,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAExC,MAAM,CAAC,OAAO,GAAG;IACb,KAAK;IACL,MAAM;IACN,MAAM;;;;ACPV,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtE,MAAM,IAAI,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC;AACzD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAE7D,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;;AAE7B,IAAI,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC;;IAEnC;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,UAAU,EAAA,IAAC,EAAA;oBACR,oBAAA,QAAO,EAAA,IAAC,EAAC,KAAe,CAAA,EAAA,GAAA,EAAE,WAAW,IAAI,IAAI,WAAW,EAAE,CAAE;gBACnD,CAAA,EAAA;gBACb,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,IAAI,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAC,QAAA,EAAQ;wBACnB,OAAA,EAAO,CAAC,yBAAA,EAAyB;wBACjC,cAAA,EAAc,CAAE;4BACZ,GAAG,EAAE,cAAc;4BACnB,MAAM,EAAE,MAAM;4BACd,aAAa,EAAE,CAAC,KAAK,KAAK;gCACtB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;6BACvC;yBACH,CAAA;oBACJ,CAAA;gBACM,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,QAAQ;KACP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,gBAAA,GAAA,CAAE,GAAG,KAAM,CAAA,CAAG,CAAA;QACnB,CAAA;MACb;CACL;;;ACnDD,CAAC,MAAM,CAAC,OAAO,GAAG;CACjB;;;ACDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;AAElD,MAAM,EAAE,iBAAiB,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAExF,MAAM,WAAW,GAAG,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,KAAK;IACxC,OAAO,KAAK,CAAC;AACjB,CAAC;;AAED,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,UAAU,EAAE,UAAU,CAAC,OAAO;IAC9B,IAAI,EAAE,WAAW;IACjB,WAAW,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,OAAO;IAC5D,IAAI,EAAE,WAAW;IACjB,EAAE,EAAE,SAAS;IACb,YAAY,EAAE,iBAAiB;CAClC,CAAC;;;AClBF,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEzC,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC5C,MAAM,KAAK,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAClD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtE,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC;AACrD,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;AACvD,MAAM,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;;AAE/D,MAAM,OAAO,GAAG,eAAe,CAAC;IAC5B,KAAK,EAAE,OAAO,CAAC,uBAAuB,CAAC;IACvC,UAAU,EAAE,iBAAiB;AACjC,CAAC,CAAC,CAAC;;AAEH,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEnC,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;AAC7B,IAAI,MAAM,EAAE,kBAAkB,EAAE,GAAG,KAAK,CAAC;;IAErC;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,SAAS,EAAA,IAAE,CAAA,EAAA;YACZ,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAA,GAAE,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,iBAAA,EAAiB,CAAC,IAAA,EAAI,CAAC,cAAe,CAAA,EAAA,YAAc,CAAA;gBACzD,CAAA;YACT,CAAA,EAAA;YACP,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,KAAK,EAAA,CAAA,CAAC,OAAA,EAAO,CAAC,oBAAA,EAAoB,CAAC,SAAA,EAAS,CAAC,cAAA,EAAc,CAAC,SAAA,EAAS,CAAC,cAAc,CAAE,CAAA;gBAC/E,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;AAChC,IAAI,QAAQ;;KAEP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,IAAA,CAAG,CAAA;QACR,CAAA;MACb;CACL;;;ACzDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAChD,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC;;AAE9C,MAAM,UAAU,SAAS,KAAK,CAAC,SAAS,CAAC;IACrC,WAAW,QAAQ;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrD,KAAK;;IAED,UAAU,GAAG;AACjB,QAAQ,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE/B,OAAO;YACH;gBACI,MAAM,EAAE,WAAW;gBACnB,QAAQ,EAAE,WAAW;gBACrB,MAAM,EAAE,GAAG,KAAK,oBAAA,KAAI,EAAA,IAAC,EAAA,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,iBAAA,EAAiB,CAAC,GAAA,EAAG,CAAE,GAAG,CAAC,KAAM,CAAA,CAAG,CAAM,CAAA,CAAC;gBAC/E,KAAK,EAAE,GAAG;gBACV,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,IAAI;aACnB,EAAE;gBACC,MAAM,EAAE,OAAO;gBACf,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE,GAAG,KAAK,oBAAA,KAAI,EAAA,IAAC,EAAA,oBAAA,GAAE,EAAA,CAAA,CAAC,IAAA,EAAI,CAAE,GAAG,SAAS,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,EAAC,CAAC,MAAA,EAAM,CAAC,OAAQ,CAAA,EAAC,GAAG,CAAC,KAAU,CAAM,CAAA,CAAC;aAC1G;SACJ,CAAC;AACV,KAAK;;IAED,MAAM,GAAG;AACb,QAAQ,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1C,MAAM,WAAW,GAAG;YAChB,GAAG,EAAE,SAAS;YACd,OAAO,EAAE,CAAC,QAAQ,KAAK;gBACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACzB;AACb,SAAS,CAAC;;QAEF;YACI,oBAAC,KAAK,EAAA,gBAAA,GAAA,CAAE,GAAG,IAAI,CAAC,KAAK,EAAC,CAAC,CAAA,WAAA,EAAW,CAAE,WAAW,EAAC,CAAC,OAAA,EAAO,CAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC,OAAA,EAAO,CAAE,OAAQ,CAAA,CAAA,CAAG,CAAA;UACnG;KACL;AACL,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK;AAC5B,CAAC,CAAC;;AAEF,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC;;;;ACtDnE,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAEpC,MAAM,YAAY,GAAG;;AAErB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3C,QAAQ,MAAM,CAAC,IAAI;QACf;YACI,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO;CAChC,CAAC;;;ACpBF,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAChD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;AACnC,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAE3D,MAAM,IAAI,IAAI;IACV,WAAW,EAAE,eAAe;AAChC,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG;IACZ,WAAW,EAAE,CAAC,QAAQ,MAAM;QACxB,IAAI,EAAE,IAAI,CAAC,WAAW;QACtB,QAAQ;KACX,CAAC;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG;IACjB,QAAQ,EAAE,IAAI;AAClB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3C,QAAQ,MAAM,CAAC,IAAI;QACf,KAAK,IAAI,CAAC,WAAW;YACjB,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAChD,YAAY,MAAM;;QAEV;YACI,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;;AAEF,MAAM,WAAW,SAAS,KAAK,CAAC,SAAS,CAAC;IACtC,WAAW,QAAQ;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,KAAK;;IAED,WAAW,GAAG;QACV,OAAO;SACN,CAAC;AACV,KAAK;;IAED,OAAO,GAAG;AACd,QAAQ,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1D,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,CAAC,UAAU,KAAK;YACxC,WAAW,CAAC,UAAU,CAAC,CAAC;AACpC,SAAS,CAAC,CAAC;;QAEH,OAAO,IAAI,CAAC;AACpB,KAAK;;IAED,MAAM,GAAG;AACb,QAAQ,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1D,IAAI,CAAC,QAAQ;AACrB,YAAY,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;;QAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QACpF,MAAM,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;AACnE,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;;AAElD,QAAQ,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;;QAE3C,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;YAChD,IAAI,CAAC,aAAa;AAC9B,gBAAgB,aAAa,GAAG,EAAE,CAAC;;YAEvB,IAAI,QAAQ,CAAC,aAAa,EAAE;gBACxB,aAAa,CAAC,aAAa,GAAG,EAAE,CAAC;gBACjC,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,aAAa,EAAE;oBACrC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE;iBACxE;aACJ;AACb,SAAS;;QAED,IAAI,gBAAgB,GAAG,SAAS,CAAC;YAC7B,IAAI,EAAE,QAAQ;YACd,QAAQ;YACR,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE;YAC5B,QAAQ;YACR,aAAa;AACzB,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAEzB,QAAQ,gBAAgB,GAAG,OAAO,CAAC,KAAK,KAAK,EAAE,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;;QAExG;YACI,oBAAA,KAAI,EAAA,IAAC,EAAA;gBACD,oBAAC,gBAAgB,EAAA,IAAA,CAAG,CAAA;YAClB,CAAA;UACR;KACL;AACL,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,OAAO,KAAK,CAAC,WAAW,CAAC;AAC7B,CAAC,CAAC;;AAEF,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,OAAO,CAAC;AACrE,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG;IACb,OAAO,EAAE,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC;IAC3D,OAAO;IACP,OAAO;CACV;;;AC9GD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtE,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;AAC5C,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;;AAElC,MAAM,IAAI,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC;;AAEzD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAE7D,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;AAC7B,IAAI,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;;IAE5D;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,UAAU,EAAA,IAAA,CAAG,CAAA,EAAA;YACd,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,MAAM,EAAA,CAAA,CAAC,KAAA,EAAK,CAAC,SAAU,CAAA,EAAA,YAAmB,CAAA;gBACnC,CAAA;YACT,CAAA,EAAA;YACP,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,UAAU,EAAA,IAAC,EAAA;oBACR,oBAAA,QAAO,EAAA,IAAC,EAAC,KAAe,CAAA,EAAA,GAAA,EAAE,WAAW,IAAI,IAAI,WAAW,EAAG;gBAClD,CAAA,EAAA;gBACb,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,IAAI,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAC,QAAA,EAAQ;wBACnB,OAAA,EAAO,CAAC,yBAAA,EAAyB;wBACjC,WAAA,EAAW,CAAE,UAAU,EAAC;wBACxB,cAAA,EAAc,CAAE;4BACZ,GAAG,EAAE,cAAc;4BACnB,MAAM,EAAE,KAAK;4BACb,aAAa,EAAE,CAAC,KAAK,KAAK;gCACtB,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;gCACpC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;6BAClE;yBACH,CAAA;oBACJ,CAAA;gBACM,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,QAAQ;KACP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;AAClE,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,gBAAA,GAAA,CAAE,GAAG,KAAM,CAAA,CAAG,CAAA;QACnB,CAAA;MACb;CACL;;;AC/DD,CAAC,MAAM,CAAC,OAAO,GAAG;CACjB;;;ACDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;AAElD,MAAM,EAAE,iBAAiB,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAExF,MAAM,YAAY,GAAG;;AAErB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,UAAU,EAAE,UAAU,CAAC,OAAO;IAC9B,IAAI,EAAE,OAAO;IACb,WAAW,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,OAAO;IAC5D,IAAI,EAAE,WAAW;IACjB,EAAE,EAAE,SAAS;IACb,YAAY,EAAE,iBAAiB;CAClC,CAAC;;;ACtBF,CAAC,MAAM,KAAK,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC1C,MAAM,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC3C,MAAM,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;AAE3C,MAAM,CAAC,OAAO,GAAG;IACb,KAAK;IACL,MAAM;IACN,MAAM;;;;ACPV,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtE,MAAM,IAAI,GAAG,OAAO,CAAC,2CAA2C,CAAC,CAAC,OAAO,CAAC;AAC1E,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAE7D,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;;AAE7B,IAAI,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC;;IAEnC;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,MAAM,EAAA,CAAA,CAAC,KAAA,EAAK,CAAC,SAAU,CAAA,EAAA,YAAmB,CAAA;gBACnC,CAAA;YACT,CAAA,EAAA;YACP,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,UAAU,EAAA,IAAC,EAAA;oBACR,oBAAA,QAAO,EAAA,IAAC,EAAC,KAAe,CAAA,EAAA,GAAA,EAAE,WAAW,IAAI,IAAI,WAAW,EAAE,CAAE;gBACnD,CAAA,EAAA;gBACb,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,IAAI,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAC,QAAA,EAAQ;wBACnB,OAAA,EAAO,CAAC,4BAAA,EAA4B;wBACpC,cAAA,EAAc,CAAE;4BACZ,GAAG,EAAE,iBAAiB;4BACtB,MAAM,EAAE,MAAM;4BACd,aAAa,EAAE,CAAC,KAAK,KAAK;gCACtB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;6BACvC;yBACH,CAAA;oBACJ,CAAA;gBACM,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,QAAQ;KACP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,gBAAA,GAAA,CAAE,GAAG,KAAM,CAAA,CAAG,CAAA;QACnB,CAAA;MACb;CACL;;;ACxDD,CAAC,MAAM,CAAC,OAAO,GAAG;CACjB;;;ACDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;AAElD,MAAM,EAAE,iBAAiB,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAExF,MAAM,WAAW,GAAG,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,KAAK;IACxC,OAAO,KAAK,CAAC;AACjB,CAAC;;AAED,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,UAAU,EAAE,UAAU,CAAC,OAAO;IAC9B,IAAI,EAAE,WAAW;IACjB,WAAW,EAAE,OAAO,CAAC,sCAAsC,CAAC,CAAC,OAAO;IACpE,IAAI,EAAE,WAAW;IACjB,EAAE,EAAE,SAAS;IACb,YAAY,EAAE,iBAAiB;IAC/B,WAAW,EAAE,OAAO,CAAC,sCAAsC,CAAC,CAAC,OAAO;CACvE,CAAC;;;ACnBF,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEzC,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC5C,MAAM,KAAK,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAClD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtE,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC;AACrD,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;AACvD,MAAM,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;;AAE/D,MAAM,OAAO,GAAG,eAAe,CAAC;IAC5B,KAAK,EAAE,OAAO,CAAC,uBAAuB,CAAC;IACvC,UAAU,EAAE,iBAAiB;AACjC,CAAC,CAAC,CAAC;;AAEH,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEnC,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;AAC7B,IAAI,MAAM,EAAE,kBAAkB,EAAE,GAAG,KAAK,CAAC;;IAErC;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,SAAS,EAAA,IAAE,CAAA,EAAA;YACZ,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,MAAM,EAAA,CAAA,CAAC,KAAA,EAAK,CAAC,SAAU,CAAA,EAAA,YAAmB,CAAA;gBACnC,CAAA;YACT,CAAA,EAAA;YACP,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,KAAK,EAAA,IAAA,CAAG,CAAA;gBACD,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;AAChC,IAAI,QAAQ;;KAEP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,IAAA,CAAG,CAAA;QACR,CAAA;MACb;CACL;;;ACzDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAChD,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC;;AAE9C,MAAM,OAAO,GAAG,iBAAiB,CAAC;AAClC,MAAM,SAAS,GAAG,iBAAiB,CAAC;AACpC,MAAM,OAAO,GAAG,uBAAuB,CAAC;;AAExC,MAAM,UAAU,SAAS,KAAK,CAAC,SAAS,CAAC;IACrC,WAAW,QAAQ;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrD,KAAK;;IAED,UAAU,GAAG;QACT,OAAO;YACH;gBACI,MAAM,EAAE,WAAW;gBACnB,QAAQ,EAAE,WAAW;gBACrB,MAAM,EAAE,GAAG,KAAK,oBAAA,KAAI,EAAA,IAAC,EAAA,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,iBAAA,EAAiB,CAAC,GAAA,EAAG,CAAE,GAAG,CAAC,KAAM,CAAA,CAAG,CAAM,CAAA,CAAC;gBAC/E,KAAK,EAAE,GAAG;gBACV,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,IAAI;aACnB,EAAE;gBACC,MAAM,EAAE,OAAO;gBACf,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE,GAAG,KAAK,oBAAA,KAAI,EAAA,IAAC,EAAA,oBAAA,GAAE,EAAA,CAAA,CAAC,IAAA,EAAI,CAAE,GAAG,OAAO,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,EAAC,CAAC,MAAA,EAAM,CAAC,OAAQ,CAAA,EAAC,GAAG,CAAC,KAAU,CAAM,CAAA,CAAC;aACxG;SACJ,CAAC;AACV,KAAK;;IAED,MAAM,GAAG;QACL,MAAM,WAAW,GAAG;YAChB,GAAG,EAAE,SAAS;YACd,OAAO,EAAE,CAAC,QAAQ,KAAK;gBACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACzB;AACb,SAAS,CAAC;;QAEF;YACI,oBAAC,KAAK,EAAA,gBAAA,GAAA,CAAE,GAAG,IAAI,CAAC,KAAK,EAAC,CAAC,CAAA,WAAA,EAAW,CAAE,WAAW,EAAC,CAAC,OAAA,EAAO,CAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC,OAAA,EAAO,CAAE,OAAQ,CAAA,CAAA,CAAG,CAAA;UACnG;KACL;AACL,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK;AAC5B,CAAC,CAAC;;AAEF,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC;AACnC,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC;;;;ACtDnE,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAEpC,MAAM,YAAY,GAAG;;AAErB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3C,QAAQ,MAAM,CAAC,IAAI;QACf;YACI,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO;CAChC,CAAC;;;ACpBF,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAChD,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEnF,MAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAEpC,MAAM,IAAI,GAAG;IACT,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,mBAAmB;IACpC,QAAQ,EAAE,WAAW;IACrB,mBAAmB,EAAE,cAAc;IACnC,gBAAgB,EAAE,oBAAoB;IACtC,WAAW,EAAE,cAAc;AAC/B,CAAC;;AAED,MAAM,OAAO,GAAG;IACZ,MAAM,EAAE,OAAO;QACX,IAAI,EAAE,IAAI,CAAC,MAAM;AACzB,KAAK,CAAC;;IAEF,eAAe,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,cAAc,EAAE,sBAAsB,MAAM;QACnF,IAAI,EAAE,IAAI,CAAC,eAAe;QAC1B,WAAW;QACX,UAAU;QACV,cAAc;QACd,sBAAsB;AAC9B,KAAK,CAAC;;IAEF,QAAQ,EAAE,CAAC,KAAK,MAAM;QAClB,IAAI,EAAE,IAAI,CAAC,QAAQ;QACnB,KAAK;AACb,KAAK,CAAC;;IAEF,mBAAmB,EAAE,OAAO;QACxB,IAAI,EAAE,IAAI,CAAC,mBAAmB;AACtC,KAAK,CAAC;;IAEF,gBAAgB,EAAE,CAAC,KAAK,MAAM;QAC1B,IAAI,EAAE,IAAI,CAAC,gBAAgB;QAC3B,KAAK;AACb,KAAK,CAAC;;IAEF,WAAW,EAAE,CAAC,KAAK,MAAM;QACrB,IAAI,EAAE,IAAI,CAAC,WAAW;QACtB,KAAK;KACR,CAAC;AACN,CAAC;;AAED,MAAM,YAAY,GAAG;IACjB,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,KAAK;IACb,WAAW,EAAE,IAAI;IACjB,cAAc,EAAE,IAAI;IACpB,sBAAsB,EAAE,IAAI;IAC5B,aAAa,EAAE,CAAC,CAAC;AACrB,CAAC;;AAED,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3C,QAAQ,MAAM,CAAC,IAAI;QACf,KAAK,IAAI,CAAC,MAAM;YACZ,QAAQ,CAAC,MAAM,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnC,aAAa,GAAG,CAAC,CAAC,CAAC;YACnB,MAAM;QACV,KAAK,IAAI,CAAC,eAAe;YACrB,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;YAC1C,QAAQ,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;AAC5D,YAAY,QAAQ,CAAC,sBAAsB,GAAG,MAAM,CAAC,sBAAsB,CAAC;;AAE5E,YAAY,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;;YAEzE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,MAAM;QACV,KAAK,IAAI,CAAC,QAAQ;YACd,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnC,QAAQ,CAAC,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACpD,MAAM;QACV,KAAK,IAAI,CAAC,mBAAmB;YACzB,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YAClD,QAAQ,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;YAC5B,MAAM;QACV,KAAK,IAAI,CAAC,gBAAgB;YACtB,QAAQ,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC;YACtC,MAAM;QACV,KAAK,IAAI,CAAC,WAAW;YACjB,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;YACvD,MAAM;QACV;YACI,OAAO,KAAK,CAAC;AACzB,KAAK;;IAED,OAAO,QAAQ,CAAC;AACpB,CAAC;;AAED,MAAM,WAAW,SAAS,KAAK,CAAC,SAAS,CAAC;IACtC,WAAW,QAAQ;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7D,KAAK;;IAED,UAAU,IAAI;AAClB,QAAQ,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;AAExC,QAAQ,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;;QAE5B,MAAM,cAAc,GAAG;YACnB,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE;YAClB,CAAC,EAAE,OAAO,CAAC,MAAM,EAAE;AAC/B,SAAS;;QAED,MAAM,WAAW,GAAG;YAChB,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC;YAC/B,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC;AAC5C,SAAS;;QAED,IAAI,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;AACpE,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;;QAE9D,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,GAAG,QAAQ,EAAE,CAAC;AACtD,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,GAAG,QAAQ,EAAE,CAAC;;QAE7C,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,EAAE,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9D,QAAQ,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;;QAEtD,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAC/D,KAAK;;IAED,cAAc,GAAG;QACb,MAAM,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3C,mBAAmB,EAAE,CAAC;AAC9B,KAAK;;AAEL,IAAI,iBAAiB,GAAG;;AAExB,QAAQ,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,sBAAsB,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1F,sBAAsB,CAAC,CAAC,KAAK,KAAK;AAC1C,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;;YAEnB,IAAI,CAAC,IAAI;AACrB,gBAAgB,OAAO;;YAEX,MAAM,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;YAC5C,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACpC,WAAW,CAAC,aAAa,CAAC,CAAC;SAC9B,CAAC,CAAC;AACX,KAAK;;IAED,aAAa,GAAG;AACpB,QAAQ,MAAM,CAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;;QAEtD,MAAM,EAAE,CAAC;QACT,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AACjD,KAAK;;IAED,cAAc,IAAI;AACtB,QAAQ,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1D,MAAM,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;QAC5C,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;QACzB,WAAW,CAAC,aAAa,CAAC,CAAC;AACnC,KAAK;;IAED,MAAM,GAAG;AACb,QAAQ,MAAM,CAAC,aAAa,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,WAAW,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;;AAE/G,QAAQ,IAAI,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;;QAE1C;YACI,oBAAC,KAAK,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,UAAA,EAAU,CAAC,MAAA,EAAM,CAAE,MAAM,EAAC,CAAC,MAAA,EAAM,CAAE,MAAQ,CAAA,EAAA;gBACxD,oBAAC,WAAW,EAAA,CAAA,CAAC,MAAA,EAAM,CAAE,MAAQ,CAAA,EAAA,aAAyB,CAAA,EAAA;gBACtD,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,cAAe,CAAA,EAAA;wBAC1B,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,iBAAkB,CAAA,EAAA;4BAC7B,oBAAA,KAAI,EAAA,CAAA,CAAC,GAAA,EAAG,CAAE,WAAW,EAAC,CAAC,SAAA,EAAS,CAAC,OAAA,EAAO,CAAC,OAAA,EAAO,CAAE,IAAI,CAAC,UAAW,CAAA,CAAG,CAAA,EAAA;4BACpE;gCACG,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;oCACxB,MAAM,QAAQ,GAAG;wCACb,SAAS,EAAE,UAAU,IAAI,CAAC,MAAM,MAAM;wCACtC,IAAI,EAAE,QAAQ,IAAI,CAAC,CAAC,WAAW;wCAC/B,GAAG,EAAE,QAAQ,IAAI,CAAC,CAAC,WAAW;AACtE,qCAAqC,CAAC;;oCAEF;AACpC,wCAAwC,oBAAA,KAAI,EAAA,CAAA,CAAC,GAAA,EAAG,CAAE,KAAK,EAAC,CAAC,KAAA,EAAK,CAAE,QAAQ,EAAC,CAAC,SAAA,EAAS,CAAC,OAAA,EAAO,CAAC,OAAA,EAAO,CAAE,MAAM,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAI,CAAA;;wCAE3F,CAAA;sCACR;iCACL;4BACJ;wBACC,CAAA,EAAA;wBACL;4BACG,aAAa;4BACb,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,UAAA,EAAU,CAAC,KAAA,EAAK,CAAE,EAAE,IAAI,EAAE,OAAO,GAAG,aAAa,CAAC,CAAC,GAAG,WAAW,EAAE,GAAG,EAAE,OAAO,GAAG,aAAa,CAAC,CAAC,GAAG,UAAU,EAAI,CAAA,EAAA;gCAC7H,oBAAC,MAAM,EAAA,CAAA,CAAC,OAAA,EAAO,CAAE,IAAI,CAAC,iBAAmB,CAAA,EAAA;oCACrC,oBAAA,GAAE,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,iBAAA,EAAiB,CAAC,aAAA,EAAW,CAAC,MAAO,CAAI,CAAA;gCACjD,CAAA,EAAA;gCACT,oBAAC,MAAM,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,QAAA,EAAQ,CAAC,GAAA,EAAG,CAAE,CAAC,EAAC,CAAC,GAAA,EAAG,CAAE,GAAG,EAAC,CAAC,YAAA,EAAY,CAAE,CAAC,EAAC,CAAC,KAAA,EAAK,CAAE,aAAa,CAAC,MAAM,EAAC;oCACtF,QAAA,EAAQ,CAAE,CAAC,CAAC,KAAK;wCACb,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;wCACzB,WAAW,CAAC,aAAa,CAAC,CAAC;qCAC7B,CAAA,CAAG,CAAA,EAAA;gCACT,oBAAC,MAAM,EAAA,CAAA,CAAC,OAAA,EAAO,CAAE,IAAI,CAAC,cAAgB,CAAA,EAAA;oCAClC,oBAAA,GAAE,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,aAAA,EAAa,CAAC,aAAA,EAAW,CAAC,MAAO,CAAI,CAAA;gCAC7C,CAAA;4BACP,CAAA;wBACT;oBACC,CAAA;gBACE,CAAA,EAAA;gBACZ,oBAAC,WAAW,EAAA,IAAC,EAAA;oBACT,oBAAC,MAAM,EAAA,CAAA,CAAC,KAAA,EAAK,CAAC,WAAA,EAAW,CAAC,OAAA,EAAO,CAAE,IAAI,CAAC,aAAe,CAAA,EAAA,IAAW,CAAA;gBACxD,CAAA;YACV,CAAA;SACX;KACJ;AACL,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,OAAO;QACH,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,MAAM;QAChC,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,MAAM;QAChC,WAAW,EAAE,KAAK,CAAC,WAAW,CAAC,WAAW;QAC1C,gBAAgB,EAAE,KAAK,CAAC,WAAW,CAAC,cAAc;QAClD,sBAAsB,EAAE,KAAK,CAAC,WAAW,CAAC,sBAAsB;QAChE,aAAa,EAAE,KAAK,CAAC,WAAW,CAAC,aAAa;KACjD;AACL,CAAC,CAAC;;AAEF,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,gBAAgB,EAAE,OAAO,CAAC,gBAAgB,EAAE,mBAAmB,EAAE,OAAO,CAAC,mBAAmB,EAAE,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,OAAO,CAAC;AACvN,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG;IACb,OAAO,EAAE,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC;IAC3D,OAAO;IACP,OAAO;;;;AChPX,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAChD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;AACnC,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAE3D,MAAM,WAAW,GAAG,OAAO,CAAC,sCAAsC,CAAC,CAAC,OAAO,CAAC;AAC5E,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,sCAAsC,CAAC,CAAC,OAAO,CAAC;;AAEpF,MAAM,IAAI,IAAI;IACV,WAAW,EAAE,eAAe;AAChC,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG;IACZ,WAAW,EAAE,CAAC,QAAQ,MAAM;QACxB,IAAI,EAAE,IAAI,CAAC,WAAW;QACtB,QAAQ;KACX,CAAC;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG;IACjB,QAAQ,EAAE,IAAI;AAClB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3C,QAAQ,MAAM,CAAC,IAAI;QACf,KAAK,IAAI,CAAC,WAAW;YACjB,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAChD,YAAY,MAAM;;QAEV;YACI,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;;AAEF,MAAM,WAAW,SAAS,KAAK,CAAC,SAAS,CAAC;IACtC,WAAW,QAAQ;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,KAAK;;IAED,WAAW,GAAG;AAClB,QAAQ,MAAM,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAEvC,OAAO;YACH,UAAU,EAAE,CAAC,UAAU,EAAE,SAAS,KAAK;AACnD,gBAAgB,IAAI,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAElD,MAAM,cAAc,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtD,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,CAAC;gBACzD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACrC,IAAI,WAAW;oBACX,eAAe,CAAC,WAAW,EAAE,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,sBAAsB,CAAC,CAAC;aACvH;SACJ,CAAC;AACV,KAAK;;IAED,OAAO,GAAG;AACd,QAAQ,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1D,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,CAAC,UAAU,KAAK;YACxC,WAAW,CAAC,UAAU,CAAC,CAAC;AACpC,SAAS,CAAC,CAAC;;QAEH,OAAO,IAAI,CAAC;AACpB,KAAK;;IAED,MAAM,GAAG;AACb,QAAQ,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;;QAE1D,IAAI,CAAC,QAAQ;AACrB,YAAY,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;;QAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QACpF,MAAM,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;AACnE,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;;QAE1C,IAAI,gBAAgB,GAAG,SAAS,CAAC;YAC7B,IAAI,EAAE,QAAQ;YACd,QAAQ;YACR,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE;YAC5B,QAAQ;YACR,aAAa,EAAE,QAAQ,CAAC,aAAa;AACjD,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAEzB,QAAQ,gBAAgB,GAAG,OAAO,CAAC,KAAK,KAAK,EAAE,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;;QAExG;YACI,oBAAA,KAAI,EAAA,IAAC,EAAA;gBACD,oBAAC,gBAAgB,EAAA,IAAA,CAAG,CAAA,EAAA;gBACpB,oBAAC,WAAW,EAAA,IAAA,CAAG,CAAA;YACb,CAAA;UACR;KACL;AACL,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,OAAO,KAAK,CAAC,WAAW,CAAC;AAC7B,CAAC,CAAC;;AAEF,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,eAAe,EAAE,EAAE,OAAO,CAAC;AACtF,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG;IACb,OAAO,EAAE,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC;IAC3D,OAAO;IACP,OAAO;CACV;;;AC/GD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtE,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;AAC5C,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;;AAElC,MAAM,IAAI,GAAG,OAAO,CAAC,2CAA2C,CAAC,CAAC,OAAO,CAAC;;AAE1E,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAE7D,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK;AAC7B,IAAI,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;;IAE5D;QACI,oBAAA,KAAI,EAAA,IAAC,EAAA;YACD,oBAAC,UAAU,EAAA,IAAA,CAAG,CAAA,EAAA;YACd,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,MAAM,EAAA,CAAA,CAAC,KAAA,EAAK,CAAC,SAAU,CAAA,EAAA,YAAmB,CAAA;gBACnC,CAAA;YACT,CAAA,EAAA;YACP,oBAAC,IAAI,EAAA,IAAC,EAAA;gBACF,oBAAC,UAAU,EAAA,IAAC,EAAA;oBACR,oBAAA,QAAO,EAAA,IAAC,EAAC,KAAe,CAAA,EAAA,GAAA,EAAE,WAAW,IAAI,IAAI,WAAW,EAAG;gBAClD,CAAA,EAAA;gBACb,oBAAC,SAAS,EAAA,IAAC,EAAA;oBACP,oBAAC,IAAI,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAC,QAAA,EAAQ;wBACnB,OAAA,EAAO,CAAC,4BAAA,EAA4B;wBACpC,WAAA,EAAW,CAAE,UAAU,EAAC;wBACxB,cAAA,EAAc,CAAE;4BACZ,GAAG,EAAE,iBAAiB;4BACtB,MAAM,EAAE,KAAK;4BACb,aAAa,EAAE,CAAC,KAAK,KAAK;gCACtB,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;gCACpC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;6BAClE;yBACH,CAAA;oBACJ,CAAA;gBACM,CAAA;YACT,CAAA;QACL,CAAA;MACR;AACN,CAAC,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;IAC5B,QAAQ;KACP,EAAE;AACP,CAAC;;AAED,MAAM,cAAc,GAAG,CAAC,OAAO;IAC3B,kBAAkB,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;AAClE,CAAC,CAAC;;AAEF,WAAW,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;;AAEjE,MAAM,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK;IACxB;QACI,oBAAC,QAAQ,EAAA,CAAA,CAAC,KAAA,EAAK,CAAE,KAAO,CAAA,EAAA;YACpB,oBAAC,WAAW,EAAA,gBAAA,GAAA,CAAE,GAAG,KAAM,CAAA,CAAG,CAAA;QACnB,CAAA;MACb;CACL;;;AC/DD,CAAC,MAAM,CAAC,OAAO,GAAG;CACjB;;;ACDD,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;;AAElD,MAAM,EAAE,iBAAiB,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;;AAExF,MAAM,YAAY,GAAG;;AAErB,CAAC,CAAC;;AAEF,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,KAAK;IAC9C,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;IAC7B,UAAU,EAAE,UAAU,CAAC,OAAO;IAC9B,IAAI,EAAE,OAAO;IACb,WAAW,EAAE,OAAO,CAAC,sCAAsC,CAAC,CAAC,OAAO;IACpE,IAAI,EAAE,WAAW;IACjB,EAAE,EAAE,SAAS;IACb,YAAY,EAAE,iBAAiB;IAC/B,WAAW,EAAE,OAAO,CAAC,sCAAsC,CAAC,CAAC,OAAO;CACvE,CAAC","file":"homeclick.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿global.Homeclick = {\r\n    project: require('./homeclick/project'),\r\n    collection: require('./homeclick/collection'),\r\n    post: require('./homeclick/post'),\r\n    optionGroup: require('./homeclick/option-group')\r\n}","﻿const index = require('./collection/index');\r\nconst create = require('./collection/create');\r\nconst update = require('./collection/update');\r\n\r\nmodule.exports = {\r\n    index,\r\n    create,\r\n    update\r\n}","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect, Provider} = require('react-redux');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\nconst Form = require('./shared/components/form').default;\r\nconst store = createStore(require('./create/redux/reducer'));\r\n\r\nvar PageContent = (props) => {\r\n\r\n    const {title, description} = props;\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>{title}</strong> {description && ` ${description}` }\r\n                </CardHeader>\r\n                <CardBlock>\r\n                    <Form formName=\"create\"\r\n                        formUrl=\"/collection/GetNewProjectForm\"\r\n                        formSubmitData={{\r\n                            url: '/collection/create',\r\n                            method: 'POST',\r\n                            successAction: (respo) => {\r\n                                window.location.href = respo.result;\r\n                            },\r\n                        }}\r\n                    />\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","﻿module.exports = {\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: { fmReducer }, pageAlerts } = Corein.components;\r\n\r\nconst pageReducer = (state = {}, action) => {\r\n    return state;\r\n}\r\n\r\nmodule.exports = combineReducers({\r\n    pageAlerts: pageAlerts.reducer,\r\n    page: pageReducer,\r\n    projectForm: require('../../shared/components/form').reducer,\r\n    form: formReducer,\r\n    fm: fmReducer,\r\n    fmTabControl: tabControlReducer,\r\n});","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect} = require('react-redux');\r\n\r\nconst { Provider } = require('react-redux');\r\nconst Table = require('./index/components/table');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst tableActions = Corein.components.table.actions;\r\nconst PageAlert = Corein.components.pageAlerts.default;\r\nconst pageAlertsReducer = Corein.components.pageAlerts.reducer;\r\n\r\nconst reducer = combineReducers({\r\n    index: require('./index/redux/reducer'),\r\n    pageAlerts: pageAlertsReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nvar PageContent = (props) => {\r\n    const { deleteSelectedRows } = props;\r\n\r\n    return (\r\n        <div>\r\n            <PageAlert/>\r\n            <Card>\r\n                <CardBlock>\r\n                    <a className=\"btn btn-primary\" href=\"/collection/create\">Create new</a>\r\n                </CardBlock>\r\n            </Card>\r\n            <Card>\r\n                <CardBlock>\r\n                    <Table dataUrl=\"/collection/GetTableData\" deleteUrl=\"/collection/delete\" updateUrl=\"/collection/update\"/>\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent />\r\n        </Provider>\r\n    );\r\n};","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst Table = Corein.components.table.default;\r\n\r\nclass ReduxTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getColumns = this.getColumns.bind(this);\r\n    }\r\n\r\n    getColumns() {\r\n        const {updateUrl} = this.props;\r\n\r\n        return [\r\n            {\r\n                header: \"Thumbnail\",\r\n                accessor: 'thumbnail',\r\n                render: row => (<div><img className=\"table-thumbnail\" src={row.value} /></div>),\r\n                width: 160,\r\n                sortable: false,\r\n                hideFilter: true\r\n            }, {\r\n                header: \"Title\",\r\n                accessor: 'title',\r\n                render: row => (<div><a href={`${updateUrl}/${row.rowValues.id}`} target=\"blank\">{row.value}</a></div>),\r\n            }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const { dataUrl, deleteUrl } = this.props;\r\n\r\n        const deleteProps = {\r\n            url: deleteUrl,\r\n            success: (response) => {\r\n                console.log(response);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Table {...this.props} deleteProps={deleteProps} columns={this.getColumns()} dataUrl={dataUrl} />\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.index.table\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(ReduxTable);\r\n","﻿const $ = require('jquery');\r\nconst { combineReducers } = require('redux');\r\n\r\nconst { table } = Corein.components;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    reducer, table: table.reducer\r\n});","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst { form } = Corein.components;\r\nconst { reduxForm, getFormValues } = require('redux-form');\r\n\r\nconst keys =  {\r\n    loadNewForm: \"LOAD_NEW_FORM\",\r\n};\r\n\r\nconst actions = {\r\n    loadNewForm: (formData) => ({\r\n        type: keys.loadNewForm,\r\n        formData\r\n    })\r\n};\r\n\r\nconst initialState = {\r\n    formData: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.loadNewForm:\r\n            newState.formData = action.formData;\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getCommands = this.getCommands.bind(this);\r\n        this.getForm = this.getForm.bind(this);\r\n    }\r\n\r\n    getCommands() {\r\n        return {\r\n        };\r\n    }\r\n\r\n    getForm() {\r\n        const { loadNewForm, formUrl, formUrlData, } = this.props;\r\n\r\n        $.get(formUrl, formUrlData, (formResult) => {\r\n            loadNewForm(formResult);\r\n        });\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { formData, formName, formSubmitData } = this.props;\r\n\r\n        if (!formData)\r\n            return this.getForm();\r\n\r\n        const validate = form.validator({ details: formData.details, meta: formData.meta });\r\n        const sumbitProps = $.extend({ validate }, formSubmitData);\r\n        const onSubmit = form.submit(sumbitProps);\r\n\r\n        var ReduxDynamicForm = reduxForm({\r\n            form: formName,\r\n            formData,\r\n            commands: this.getCommands(),\r\n            onSubmit,\r\n            initialValues: formData.initialValues,\r\n        })(form.default);\r\n\r\n        ReduxDynamicForm = connect(state => ({ formValues: getFormValues(formName)(state) }))(ReduxDynamicForm);\r\n\r\n        return (\r\n            <div>\r\n                <ReduxDynamicForm />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.projectForm;\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ loadNewForm: actions.loadNewForm }, reducer)\r\n);\r\n\r\nmodule.exports = {\r\n    default: connect(stateToProps, reducerToProps)(ProjectForm),\r\n    actions,\r\n    reducer\r\n};","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect, Provider} = require('react-redux');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst alerts = Corein.components.pageAlerts;\r\nconst PageAlerts = alerts.default;\r\n\r\nconst Form = require('./shared/components/form').default;\r\n\r\nconst store = createStore(require('./update/redux/reducer'));\r\n\r\nvar PageContent = (props) => {\r\n    const { parameters, title, description, alertPush } = props;\r\n\r\n    return (\r\n        <div>\r\n            <PageAlerts />\r\n            <Card>\r\n                <CardBlock>\r\n                    <Button color=\"primary\">Create new</Button>\r\n                </CardBlock>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>{title}</strong> {description && ` ${description}`}\r\n                </CardHeader>\r\n                <CardBlock>\r\n                    <Form formName=\"create\"\r\n                        formUrl=\"/collection/GetNewProjectForm\"\r\n                        formUrlData={parameters}\r\n                        formSubmitData={{\r\n                            url: '/collection/update',\r\n                            method: 'PUT',\r\n                            successAction: (respo) => {\r\n                                alertPush(\"success\", respo.message);\r\n                                $(\"html, body\").stop().animate({ scrollTop: 0 }, 500, 'swing');\r\n                            },\r\n                        }}\r\n                    />\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ alertPush: alerts.actions.push}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","﻿module.exports = {\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: { fmReducer }, pageAlerts } = Corein.components;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    pageAlerts: pageAlerts.reducer,\r\n    page: reducer,\r\n    projectForm: require('../../shared/components/form').reducer,\r\n    form: formReducer,\r\n    fm: fmReducer,\r\n    fmTabControl: tabControlReducer\r\n});","﻿const index = require('./option-group/index');\r\nconst create = require('./option-group/create');\r\nconst update = require('./option-group/update');\r\n\r\nmodule.exports = {\r\n    index,\r\n    create,\r\n    update\r\n}","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect, Provider} = require('react-redux');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\nconst Form = require('./shared/components/form').default;\r\nconst store = createStore(require('./create/redux/reducer'));\r\n\r\nconst {create: {formUrl, formSubmitData}} = require('./shared');\r\n\r\nvar PageContent = (props) => {\r\n\r\n    const {title, description} = props;\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>{title}</strong> {description && ` ${description}` }\r\n                </CardHeader>\r\n                <CardBlock>\r\n                    <Form formName=\"create\"\r\n                        formUrl={formUrl}\r\n                        formSubmitData={formSubmitData}\r\n                    />\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","﻿module.exports = {\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: { fmReducer }, pageAlerts } = Corein.components;\r\n\r\nconst pageReducer = (state = {}, action) => {\r\n    return state;\r\n}\r\n\r\nmodule.exports = combineReducers({\r\n    pageAlerts: pageAlerts.reducer,\r\n    page: pageReducer,\r\n    projectForm: require('../../shared/components/form').reducer,\r\n    form: formReducer,\r\n    fm: fmReducer,\r\n    fmTabControl: tabControlReducer,\r\n});","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect} = require('react-redux');\r\n\r\nconst { Provider } = require('react-redux');\r\nconst Table = require('./index/components/table');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst tableActions = Corein.components.table.actions;\r\nconst PageAlert = Corein.components.pageAlerts.default;\r\nconst pageAlertsReducer = Corein.components.pageAlerts.reducer;\r\n\r\nconst { createNewUrl, index: { dataUrl, deleteUrl, tableColumns}} = require('./shared');\r\n\r\nconst reducer = combineReducers({\r\n    index: require('./index/redux/reducer'),\r\n    pageAlerts: pageAlertsReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nvar PageContent = (props) => {\r\n    const { deleteSelectedRows } = props;\r\n\r\n    return (\r\n        <div>\r\n            <PageAlert/>\r\n            <Card>\r\n                <CardBlock>\r\n                    <a className=\"btn btn-primary\" href={createNewUrl}>Create new</a>\r\n                </CardBlock>\r\n            </Card>\r\n            <Card>\r\n                <CardBlock>\r\n                    <Table dataUrl={dataUrl} deleteUrl={deleteUrl} columns={tableColumns}/>\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent />\r\n        </Provider>\r\n    );\r\n};","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst Table = Corein.components.table.default;\r\n\r\nclass ReduxTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { dataUrl, deleteUrl, columns } = this.props;\r\n\r\n        const deleteProps = {\r\n            url: deleteUrl,\r\n            success: (response) => {\r\n                console.log(response);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Table {...this.props} deleteProps={deleteProps} columns={columns} dataUrl={dataUrl} />\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.index.table\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(ReduxTable);\r\n","﻿const $ = require('jquery');\r\nconst { combineReducers } = require('redux');\r\n\r\nconst { table } = Corein.components;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    reducer, table: table.reducer\r\n});","﻿const mvcController = 'optiongroup';\r\n\r\nmodule.exports = {\r\n    createNewUrl: `/${mvcController}/create`,\r\n    index: {\r\n        dataUrl: `/${mvcController}/GetTableData`,\r\n        deleteUrl: `/${mvcController}/delete`,\r\n        tableColumns: [{\r\n            header: \"Title\",\r\n            accessor: 'title',\r\n            render: row => (<div><a href={`/${mvcController}/update/${row.rowValues.id}`} target=\"blank\">{row.value}</a></div>),\r\n        }]\r\n    },\r\n    create: {\r\n        formUrl: `/${mvcController}/GetForm`,\r\n        formSubmitData: {\r\n            url: `/${mvcController}/create`,\r\n            method: 'POST',\r\n            successAction: (respo) => {\r\n                window.location.href = respo.result;\r\n            }\r\n        }\r\n    },\r\n    update: {\r\n        formUrl: `/${mvcController}/GetForm`,\r\n        formSubmitData: {\r\n            url: `/${mvcController}/update`,\r\n            method: 'PUT',\r\n            successAction: (respo) => {\r\n                alertPush(\"success\", respo.message);\r\n                $(\"html, body\").stop().animate({ scrollTop: 0 }, 500, 'swing');\r\n            },\r\n        }\r\n    }\r\n}","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst { form } = Corein.components;\r\nconst { reduxForm, getFormValues } = require('redux-form');\r\n\r\nconst keys =  {\r\n    loadNewForm: \"LOAD_NEW_FORM\",\r\n};\r\n\r\nconst actions = {\r\n    loadNewForm: (formData) => ({\r\n        type: keys.loadNewForm,\r\n        formData\r\n    })\r\n};\r\n\r\nconst initialState = {\r\n    formData: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.loadNewForm:\r\n            newState.formData = action.formData;\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getCommands = this.getCommands.bind(this);\r\n        this.getForm = this.getForm.bind(this);\r\n    }\r\n\r\n    getCommands() {\r\n        return {\r\n        };\r\n    }\r\n\r\n    getForm() {\r\n        const { loadNewForm, formUrl, formUrlData, } = this.props;\r\n\r\n        $.get(formUrl, formUrlData, (formResult) => {\r\n            loadNewForm(formResult);\r\n        });\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { formData, formName, formSubmitData } = this.props;\r\n\r\n        if (!formData)\r\n            return this.getForm();\r\n\r\n        const validate = form.validator({ details: formData.details, meta: formData.meta });\r\n        const sumbitProps = $.extend({ validate }, formSubmitData);\r\n        const onSubmit = form.submit(sumbitProps);\r\n\r\n        var initialValues = formData.initialValues;\r\n\r\n        if (!initialValues || !initialValues.taxonomyTypes) {\r\n            if (!initialValues)\r\n                initialValues = {};\r\n\r\n            if (formData.taxonomyTypes) {\r\n                initialValues.taxonomyTypes = {};\r\n                for (var type in formData.taxonomyTypes) {\r\n                    initialValues.taxonomyTypes[formData.taxonomyTypes[type].typeId] = {}\r\n                }\r\n            }\r\n        }\r\n\r\n        var ReduxDynamicForm = reduxForm({\r\n            form: formName,\r\n            formData,\r\n            commands: this.getCommands(),\r\n            onSubmit,\r\n            initialValues,\r\n        })(form.default);\r\n\r\n        ReduxDynamicForm = connect(state => ({ formValues: getFormValues(formName)(state) }))(ReduxDynamicForm);\r\n\r\n        return (\r\n            <div>\r\n                <ReduxDynamicForm />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.projectForm;\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ loadNewForm: actions.loadNewForm }, reducer)\r\n);\r\n\r\nmodule.exports = {\r\n    default: connect(stateToProps, reducerToProps)(ProjectForm),\r\n    actions,\r\n    reducer\r\n};","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect, Provider} = require('react-redux');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst {createNewUrl, update: {formUrl, formSubmitData}} = require('./shared');\r\n\r\nconst alerts = Corein.components.pageAlerts;\r\nconst PageAlerts = alerts.default;\r\n\r\nconst Form = require('./shared/components/form').default;\r\n\r\nconst store = createStore(require('./update/redux/reducer'));\r\n\r\nvar PageContent = (props) => {\r\n    const { parameters, title, description, alertPush } = props;\r\n\r\n    return (\r\n        <div>\r\n            <PageAlerts />\r\n            <Card>\r\n                <CardBlock>\r\n                    <a className=\"btn btn-primary\" href={createNewUrl}>Create new</a>\r\n                </CardBlock>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>{title}</strong> {description && ` ${description}`}\r\n                </CardHeader>\r\n                <CardBlock>\r\n                    <Form formName=\"create\"\r\n                        formUrl={formUrl}\r\n                        formUrlData={parameters}\r\n                        formSubmitData={formSubmitData}\r\n                    />\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ alertPush: alerts.actions.push}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","﻿module.exports = {\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: { fmReducer }, pageAlerts } = Corein.components;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    pageAlerts: pageAlerts.reducer,\r\n    page: reducer,\r\n    projectForm: require('../../shared/components/form').reducer,\r\n    form: formReducer,\r\n    fm: fmReducer,\r\n    fmTabControl: tabControlReducer\r\n});","﻿const index = require('./post/index');\r\nconst create = require('./post/create');\r\nconst update = require('./post/update');\r\n\r\nmodule.exports = {\r\n    index,\r\n    create,\r\n    update\r\n}","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect, Provider} = require('react-redux');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\nconst Form = require('./shared/components/form').default;\r\nconst store = createStore(require('./create/redux/reducer'));\r\n\r\nvar PageContent = (props) => {\r\n\r\n    const {title, description} = props;\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>{title}</strong> {description && ` ${description}` }\r\n                </CardHeader>\r\n                <CardBlock>\r\n                    <Form formName=\"create\"\r\n                        formUrl=\"/post/GetNewProjectForm\"\r\n                        formSubmitData={{\r\n                            url: '/post/create',\r\n                            method: 'POST',\r\n                            successAction: (respo) => {\r\n                                window.location.href = respo.result;\r\n                            },\r\n                        }}\r\n                    />\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","﻿module.exports = {\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: { fmReducer }, pageAlerts } = Corein.components;\r\n\r\nconst pageReducer = (state = {}, action) => {\r\n    return state;\r\n}\r\n\r\nmodule.exports = combineReducers({\r\n    pageAlerts: pageAlerts.reducer,\r\n    page: pageReducer,\r\n    projectForm: require('../../shared/components/form').reducer,\r\n    form: formReducer,\r\n    fm: fmReducer,\r\n    fmTabControl: tabControlReducer,\r\n});","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect} = require('react-redux');\r\n\r\nconst { Provider } = require('react-redux');\r\nconst Table = require('./index/components/table');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst tableActions = Corein.components.table.actions;\r\nconst PageAlert = Corein.components.pageAlerts.default;\r\nconst pageAlertsReducer = Corein.components.pageAlerts.reducer;\r\n\r\nconst reducer = combineReducers({\r\n    index: require('./index/redux/reducer'),\r\n    pageAlerts: pageAlertsReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nvar PageContent = (props) => {\r\n    const { deleteSelectedRows } = props;\r\n\r\n    return (\r\n        <div>\r\n            <PageAlert/>\r\n            <Card>\r\n                <CardBlock>\r\n                    <a className=\"btn btn-primary\" href=\"/post/create\">Create new</a>\r\n                </CardBlock>\r\n            </Card>\r\n            <Card>\r\n                <CardBlock>\r\n                    <Table dataUrl=\"/post/GetTableData\" deleteUrl=\"/post/delete\" updateUrl=\"/post/update\"/>\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent />\r\n        </Provider>\r\n    );\r\n};","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst Table = Corein.components.table.default;\r\n\r\nclass ReduxTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getColumns = this.getColumns.bind(this);\r\n    }\r\n\r\n    getColumns() {\r\n        const {updateUrl} = this.props;\r\n\r\n        return [\r\n            {\r\n                header: \"Thumbnail\",\r\n                accessor: 'thumbnail',\r\n                render: row => (<div><img className=\"table-thumbnail\" src={row.value} /></div>),\r\n                width: 160,\r\n                sortable: false,\r\n                hideFilter: true\r\n            }, {\r\n                header: \"Title\",\r\n                accessor: 'title',\r\n                render: row => (<div><a href={`${updateUrl}/${row.rowValues.id}`} target=\"blank\">{row.value}</a></div>),\r\n            }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const { dataUrl, deleteUrl } = this.props;\r\n\r\n        const deleteProps = {\r\n            url: deleteUrl,\r\n            success: (response) => {\r\n                console.log(response);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Table {...this.props} deleteProps={deleteProps} columns={this.getColumns()} dataUrl={dataUrl} />\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.index.table\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(ReduxTable);\r\n","﻿const $ = require('jquery');\r\nconst { combineReducers } = require('redux');\r\n\r\nconst { table } = Corein.components;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    reducer, table: table.reducer\r\n});","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst { form } = Corein.components;\r\nconst { reduxForm, getFormValues } = require('redux-form');\r\n\r\nconst keys =  {\r\n    loadNewForm: \"LOAD_NEW_FORM\",\r\n};\r\n\r\nconst actions = {\r\n    loadNewForm: (formData) => ({\r\n        type: keys.loadNewForm,\r\n        formData\r\n    })\r\n};\r\n\r\nconst initialState = {\r\n    formData: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.loadNewForm:\r\n            newState.formData = action.formData;\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getCommands = this.getCommands.bind(this);\r\n        this.getForm = this.getForm.bind(this);\r\n    }\r\n\r\n    getCommands() {\r\n        return {\r\n        };\r\n    }\r\n\r\n    getForm() {\r\n        const { loadNewForm, formUrl, formUrlData, } = this.props;\r\n\r\n        $.get(formUrl, formUrlData, (formResult) => {\r\n            loadNewForm(formResult);\r\n        });\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { formData, formName, formSubmitData } = this.props;\r\n\r\n        if (!formData)\r\n            return this.getForm();\r\n\r\n        const validate = form.validator({ details: formData.details, meta: formData.meta });\r\n        const sumbitProps = $.extend({ validate }, formSubmitData);\r\n        const onSubmit = form.submit(sumbitProps);\r\n\r\n        var initialValues = formData.initialValues;\r\n\r\n        if (!initialValues || !initialValues.taxonomyTypes) {\r\n            if (!initialValues)\r\n                initialValues = {};\r\n\r\n            if (formData.taxonomyTypes) {\r\n                initialValues.taxonomyTypes = {};\r\n                for (var type in formData.taxonomyTypes) {\r\n                    initialValues.taxonomyTypes[formData.taxonomyTypes[type].typeId] = {}\r\n                }\r\n            }\r\n        }\r\n\r\n        var ReduxDynamicForm = reduxForm({\r\n            form: formName,\r\n            formData,\r\n            commands: this.getCommands(),\r\n            onSubmit,\r\n            initialValues,\r\n        })(form.default);\r\n\r\n        ReduxDynamicForm = connect(state => ({ formValues: getFormValues(formName)(state) }))(ReduxDynamicForm);\r\n\r\n        return (\r\n            <div>\r\n                <ReduxDynamicForm />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.projectForm;\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ loadNewForm: actions.loadNewForm }, reducer)\r\n);\r\n\r\nmodule.exports = {\r\n    default: connect(stateToProps, reducerToProps)(ProjectForm),\r\n    actions,\r\n    reducer\r\n};","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect, Provider} = require('react-redux');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst alerts = Corein.components.pageAlerts;\r\nconst PageAlerts = alerts.default;\r\n\r\nconst Form = require('./shared/components/form').default;\r\n\r\nconst store = createStore(require('./update/redux/reducer'));\r\n\r\nvar PageContent = (props) => {\r\n    const { parameters, title, description, alertPush } = props;\r\n\r\n    return (\r\n        <div>\r\n            <PageAlerts />\r\n            <Card>\r\n                <CardBlock>\r\n                    <Button color=\"primary\">Create new</Button>\r\n                </CardBlock>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>{title}</strong> {description && ` ${description}`}\r\n                </CardHeader>\r\n                <CardBlock>\r\n                    <Form formName=\"create\"\r\n                        formUrl=\"/post/GetNewProjectForm\"\r\n                        formUrlData={parameters}\r\n                        formSubmitData={{\r\n                            url: '/post/update',\r\n                            method: 'PUT',\r\n                            successAction: (respo) => {\r\n                                alertPush(\"success\", respo.message);\r\n                                $(\"html, body\").stop().animate({ scrollTop: 0 }, 500, 'swing');\r\n                            },\r\n                        }}\r\n                    />\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ alertPush: alerts.actions.push}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","﻿module.exports = {\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: { fmReducer }, pageAlerts } = Corein.components;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    pageAlerts: pageAlerts.reducer,\r\n    page: reducer,\r\n    projectForm: require('../../shared/components/form').reducer,\r\n    form: formReducer,\r\n    fm: fmReducer,\r\n    fmTabControl: tabControlReducer\r\n});","﻿const index = require('./project/index');\r\nconst create = require('./project/create');\r\nconst update = require('./project/update');\r\n\r\nmodule.exports = {\r\n    index,\r\n    create,\r\n    update\r\n}","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect, Provider} = require('react-redux');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\nconst Form = require('../project/shared/components/project-form').default;\r\nconst store = createStore(require('./create/redux/reducer'));\r\n\r\nvar PageContent = (props) => {\r\n\r\n    const {title, description} = props;\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBlock>\r\n                    <Button color=\"primary\">Create new</Button>\r\n                </CardBlock>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>{title}</strong> {description && ` ${description}` }\r\n                </CardHeader>\r\n                <CardBlock>\r\n                    <Form formName=\"create\"\r\n                        formUrl=\"/project/GetNewProjectForm\"\r\n                        formSubmitData={{\r\n                            url: '/project/create',\r\n                            method: 'POST',\r\n                            successAction: (respo) => {\r\n                                window.location.href = respo.result;\r\n                            },\r\n                        }}\r\n                    />\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","﻿module.exports = {\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: { fmReducer }, pageAlerts } = Corein.components;\r\n\r\nconst pageReducer = (state = {}, action) => {\r\n    return state;\r\n}\r\n\r\nmodule.exports = combineReducers({\r\n    pageAlerts: pageAlerts.reducer,\r\n    page: pageReducer,\r\n    projectForm: require('../../shared/components/project-form').reducer,\r\n    form: formReducer,\r\n    fm: fmReducer,\r\n    fmTabControl: tabControlReducer,\r\n    layoutModal: require('../../shared/components/layout-modal').reducer\r\n});","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect} = require('react-redux');\r\n\r\nconst { Provider } = require('react-redux');\r\nconst Table = require('./index/components/table');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst tableActions = Corein.components.table.actions;\r\nconst PageAlert = Corein.components.pageAlerts.default;\r\nconst pageAlertsReducer = Corein.components.pageAlerts.reducer;\r\n\r\nconst reducer = combineReducers({\r\n    index: require('./index/redux/reducer'),\r\n    pageAlerts: pageAlertsReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nvar PageContent = (props) => {\r\n    const { deleteSelectedRows } = props;\r\n\r\n    return (\r\n        <div>\r\n            <PageAlert/>\r\n            <Card>\r\n                <CardBlock>\r\n                    <Button color=\"primary\">Create new</Button>\r\n                </CardBlock>\r\n            </Card>\r\n            <Card>\r\n                <CardBlock>\r\n                    <Table />\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent />\r\n        </Provider>\r\n    );\r\n};","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst Table = Corein.components.table.default;\r\n\r\nconst editUrl = '/project/update';\r\nconst deleteUrl = '/project/delete';\r\nconst dataUrl = '/project/GetTableData';\r\n\r\nclass ReduxTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getColumns = this.getColumns.bind(this);\r\n    }\r\n\r\n    getColumns() {\r\n        return [\r\n            {\r\n                header: \"Thumbnail\",\r\n                accessor: 'thumbnail',\r\n                render: row => (<div><img className=\"table-thumbnail\" src={row.value} /></div>),\r\n                width: 160,\r\n                sortable: false,\r\n                hideFilter: true\r\n            }, {\r\n                header: \"Title\",\r\n                accessor: 'title',\r\n                render: row => (<div><a href={`${editUrl}/${row.rowValues.id}`} target=\"blank\">{row.value}</a></div>),\r\n            }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const deleteProps = {\r\n            url: deleteUrl,\r\n            success: (response) => {\r\n                console.log(response);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Table {...this.props} deleteProps={deleteProps} columns={this.getColumns()} dataUrl={dataUrl} />\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.index.table\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(ReduxTable);\r\n","﻿const $ = require('jquery');\r\nconst { combineReducers } = require('redux');\r\n\r\nconst { table } = Corein.components;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    reducer, table: table.reducer\r\n});","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst {Modal, ModalHeader, ModalBody, ModalFooter, Button} = require('reactstrap');\r\n\r\nconst Slider = require('rc-slider');\r\n\r\nconst keys = {\r\n    toggle: 'TOGGLE',\r\n    openLayoutModal: 'OPEN_LAYOUT_MODAL',\r\n    addValue: 'ADD_VALUE',\r\n    removeSelectedValue: 'REMOVE_VALUE',\r\n    selectValueIndex: 'SELECT_VALUE_INDEX',\r\n    updateValue: 'UPDATE_VALUE'\r\n}\r\n\r\nconst actions = {\r\n    toggle: () => ({\r\n        type: keys.toggle\r\n    }),\r\n\r\n    openLayoutModal: (layoutImage, fieldValue, field_onChange, fileManagerModalToggle) => ({\r\n        type: keys.openLayoutModal,\r\n        layoutImage,\r\n        fieldValue,\r\n        field_onChange,\r\n        fileManagerModalToggle\r\n    }),\r\n\r\n    addValue: (value) => ({\r\n        type: keys.addValue,\r\n        value\r\n    }),\r\n\r\n    removeSelectedValue: () => ({\r\n        type: keys.removeSelectedValue\r\n    }),\r\n\r\n    selectValueIndex: (index) => ({\r\n        type: keys.selectValueIndex,\r\n        index\r\n    }),\r\n\r\n    updateValue: (value) => ({\r\n        type: keys.updateValue,\r\n        value\r\n    })\r\n}\r\n\r\nconst initialState = {\r\n    values: [],\r\n    isOpen: false,\r\n    layoutImage: null,\r\n    field_onChange: null,\r\n    fileManagerModalToggle: null,\r\n    selectedIndex: -1\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.toggle:\r\n            newState.isOpen = !newState.isOpen;\r\n            selectedIndex = -1;\r\n            break;\r\n        case keys.openLayoutModal:\r\n            newState.layoutImage = action.layoutImage;\r\n            newState.field_onChange = action.field_onChange;\r\n            newState.fileManagerModalToggle = action.fileManagerModalToggle;\r\n\r\n            newState.values = action.fieldValue ? JSON.parse(action.fieldValue) : [];\r\n\r\n            newState.isOpen = true;\r\n            break;\r\n        case keys.addValue:\r\n            newState.values.push(action.value);\r\n            newState.selectedIndex = newState.values.length - 1;\r\n            break;\r\n        case keys.removeSelectedValue:\r\n            newState.values.splice(newState.selectedIndex, 1);\r\n            newState.selectedIndex = -1;\r\n            break;\r\n        case keys.selectValueIndex:\r\n            newState.selectedIndex = action.index;\r\n            break;\r\n        case keys.updateValue:\r\n            newState.values[newState.selectedIndex] = action.value;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\nclass LayoutModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.imageClick = this.imageClick.bind(this);\r\n        this.okButtonClick = this.okButtonClick.bind(this);\r\n        this.selectImgBtnClick = this.selectImgBtnClick.bind(this);\r\n        this.deleteBtnClick = this.deleteBtnClick.bind(this);\r\n        this.onSliderChange = this.onSliderChange.bind(this);\r\n    }\r\n\r\n    imageClick(e) {\r\n        const { addValue } = this.props;\r\n\r\n        const $target = $(e.target);\r\n\r\n        const currentImgSize = {\r\n            w: $target.width(),\r\n            h: $target.height()\r\n        }\r\n\r\n        const imgFileSize = {\r\n            w: $target.prop('naturalWidth'),\r\n            h: $target.prop('naturalHeight')\r\n        }\r\n\r\n        var offset_t = $target.offset().top - $(window).scrollTop();\r\n        var offset_l = $target.offset().left - $(window).scrollLeft();\r\n\r\n        var left = Math.round((e.clientX - offset_l));\r\n        var top = Math.round((e.clientY - offset_t));\r\n\r\n        var percX = (left / $target.width() * 100).toFixed(3);\r\n        var percY = (top / $target.height() * 100).toFixed(3);\r\n\r\n        addValue({ image: '', rotate: 0, x: percX, y: percY });\r\n    }\r\n\r\n    deleteBtnClick() {\r\n        const { removeSelectedValue } = this.props;\r\n        removeSelectedValue();\r\n    }\r\n\r\n    selectImgBtnClick() {\r\n\r\n        const { values, selectedIndex, fileManagerModalToggle, toggle, updateValue } = this.props;\r\n\r\n        fileManagerModalToggle((files) => {\r\n            var file = files[0]\r\n\r\n            if (!file)\r\n                return;\r\n\r\n            const selectedValue = values[selectedIndex];\r\n            selectedValue.image = file.meta.src;\r\n            updateValue(selectedValue);\r\n        });\r\n    }\r\n\r\n    okButtonClick() {\r\n        const {changeFieldValue, toggle, values} = this.props;\r\n\r\n        toggle();\r\n        changeFieldValue(JSON.stringify(values));\r\n    }\r\n\r\n    onSliderChange(e) {\r\n        const { values, selectedIndex, updateValue } = this.props;\r\n\r\n        const selectedValue = values[selectedIndex];\r\n        selectedValue.rotate = e;\r\n        updateValue(selectedValue);\r\n    }\r\n\r\n    render() {\r\n        const {selectedIndex, values, layoutImage, toggle, isOpen, selectValueIndex, updateValue} = this.props;\r\n\r\n        var selectedValue = values[selectedIndex];\r\n\r\n        return (\r\n            <Modal className=\"modal-lg\" isOpen={isOpen} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"layout-modal\">\r\n                        <div className=\"arrow-container\">\r\n                            <img src={layoutImage} className=\"w-100\" onClick={this.imageClick} />\r\n                            {\r\n                                values.map((data, index) => {\r\n                                    const divStyle = {\r\n                                        transform: `rotate(${data.rotate}deg)`,\r\n                                        left: `calc(${data.x}% - 10px)`,\r\n                                        top: `calc(${data.y}% - 10px)`,\r\n                                    };\r\n\r\n                                    return (\r\n                                        <div key={index} style={divStyle} className=\"arrow\" onClick={() => { selectValueIndex(index); }}>\r\n                                            \r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            selectedValue &&\r\n                            <div className=\"controls\" style={{ left: 'calc(' + selectedValue.x + \"% + 20px)\", top: 'calc(' + selectedValue.y + \"% - 0px)\" }}>\r\n                                <Button onClick={this.selectImgBtnClick}>\r\n                                    <i className=\"fa fa-picture-o\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                <Slider className=\"slider\" min={0} max={360} defaultValue={3} value={selectedValue.rotate}\r\n                                    onChange={(e) => {\r\n                                        selectedValue.rotate = e;\r\n                                        updateValue(selectedValue);\r\n                                    }} />\r\n                                <Button onClick={this.deleteBtnClick}>\r\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"secondary\" onClick={this.okButtonClick}>OK</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        values: state.layoutModal.values,\r\n        isOpen: state.layoutModal.isOpen,\r\n        layoutImage: state.layoutModal.layoutImage,\r\n        changeFieldValue: state.layoutModal.field_onChange,\r\n        fileManagerModalToggle: state.layoutModal.fileManagerModalToggle,\r\n        selectedIndex: state.layoutModal.selectedIndex,\r\n    }\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ toggle: actions.toggle, addValue: actions.addValue, selectValueIndex: actions.selectValueIndex, removeSelectedValue: actions.removeSelectedValue, updateValue: actions.updateValue }, reducer)\r\n);\r\n\r\nmodule.exports = {\r\n    default: connect(stateToProps, reducerToProps)(LayoutModal),\r\n    reducer,\r\n    actions\r\n}","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst { form } = Corein.components;\r\nconst { reduxForm, getFormValues } = require('redux-form');\r\n\r\nconst LayoutModal = require('../../shared/components/layout-modal').default;\r\nconst { openLayoutModal } = require('../../shared/components/layout-modal').actions;\r\n\r\nconst keys =  {\r\n    loadNewForm: \"LOAD_NEW_FORM\",\r\n};\r\n\r\nconst actions = {\r\n    loadNewForm: (formData) => ({\r\n        type: keys.loadNewForm,\r\n        formData\r\n    })\r\n};\r\n\r\nconst initialState = {\r\n    formData: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.loadNewForm:\r\n            newState.formData = action.formData;\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getCommands = this.getCommands.bind(this);\r\n        this.getForm = this.getForm.bind(this);\r\n    }\r\n\r\n    getCommands() {\r\n        const { openLayoutModal } = this.props;\r\n\r\n        return {\r\n            SET_LAYOUT: (formValues, fieldData) => {\r\n                var roomName = fieldData.input.name.split('.')[1];\r\n\r\n                const roomArrayIndex = /\\[([^]+)\\]/.exec(roomName)[1];\r\n                const room = formValues.details['rooms'][roomArrayIndex];\r\n                const layoutImage = room.layoutimage;\r\n                if (layoutImage)\r\n                    openLayoutModal(layoutImage, fieldData.input.value, fieldData.input.onChange, fieldData.fileManagerModalToggle);\r\n            }\r\n        };\r\n    }\r\n\r\n    getForm() {\r\n        const { loadNewForm, formUrl, formUrlData, } = this.props;\r\n\r\n        $.get(formUrl, formUrlData, (formResult) => {\r\n            loadNewForm(formResult);\r\n        });\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { formData, formName, formSubmitData } = this.props;\r\n\r\n        if (!formData)\r\n            return this.getForm();\r\n\r\n        const validate = form.validator({ details: formData.details, meta: formData.meta });\r\n        const sumbitProps = $.extend({ validate }, formSubmitData);\r\n        const onSubmit = form.submit(sumbitProps);\r\n\r\n        var ReduxDynamicForm = reduxForm({\r\n            form: formName,\r\n            formData,\r\n            commands: this.getCommands(),\r\n            onSubmit,\r\n            initialValues: formData.initialValues,\r\n        })(form.default);\r\n\r\n        ReduxDynamicForm = connect(state => ({ formValues: getFormValues(formName)(state) }))(ReduxDynamicForm);\r\n\r\n        return (\r\n            <div>\r\n                <ReduxDynamicForm />\r\n                <LayoutModal />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.projectForm;\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ loadNewForm: actions.loadNewForm, openLayoutModal }, reducer)\r\n);\r\n\r\nmodule.exports = {\r\n    default: connect(stateToProps, reducerToProps)(ProjectForm),\r\n    actions,\r\n    reducer\r\n};","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect, Provider} = require('react-redux');\r\nconst { Button, Card, CardHeader, CardBlock } = require('reactstrap');\r\n\r\nconst alerts = Corein.components.pageAlerts;\r\nconst PageAlerts = alerts.default;\r\n\r\nconst Form = require('../project/shared/components/project-form').default;\r\n\r\nconst store = createStore(require('./update/redux/reducer'));\r\n\r\nvar PageContent = (props) => {\r\n    const { parameters, title, description, alertPush } = props;\r\n\r\n    return (\r\n        <div>\r\n            <PageAlerts />\r\n            <Card>\r\n                <CardBlock>\r\n                    <Button color=\"primary\">Create new</Button>\r\n                </CardBlock>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader>\r\n                    <strong>{title}</strong> {description && ` ${description}`}\r\n                </CardHeader>\r\n                <CardBlock>\r\n                    <Form formName=\"create\"\r\n                        formUrl=\"/project/GetNewProjectForm\"\r\n                        formUrlData={parameters}\r\n                        formSubmitData={{\r\n                            url: '/project/update',\r\n                            method: 'PUT',\r\n                            successAction: (respo) => {\r\n                                alertPush(\"success\", respo.message);\r\n                                $(\"html, body\").stop().animate({ scrollTop: 0 }, 500, 'swing');\r\n                            },\r\n                        }}\r\n                    />\r\n                </CardBlock>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ alertPush: alerts.actions.push}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent {...props} />\r\n        </Provider>\r\n    );\r\n};","﻿module.exports = {\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: { fmReducer }, pageAlerts } = Corein.components;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    pageAlerts: pageAlerts.reducer,\r\n    page: reducer,\r\n    projectForm: require('../../shared/components/project-form').reducer,\r\n    form: formReducer,\r\n    fm: fmReducer,\r\n    fmTabControl: tabControlReducer,\r\n    layoutModal: require('../../shared/components/layout-modal').reducer\r\n});"],"preExistingComment":"//# sourceMappingURL=data:application/json;base64,"}