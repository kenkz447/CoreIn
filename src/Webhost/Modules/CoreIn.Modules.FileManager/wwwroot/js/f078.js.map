{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","components/dynamicForm.jsx","components/fm-actions.jsx","components/fm-ajaxs.jsx","components/fm-fileItem.jsx","components/fm-fileList.jsx","components/fm-filer.jsx","components/fm-formSubmits.jsx","components/fm-index.jsx","components/fm-keys.jsx","components/fm-reducer.jsx","components/fm-sidePanel.jsx","index.jsx","../../node_modules/corein/components/formField.jsx","../../node_modules/corein/components/validator.js","../../node_modules/corein/index.js"],"names":[],"mappings":"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","file":"f078.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿const react = require('react');\r\nconst $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst {reduxForm, Field, FieldArray} = require('redux-form');\r\nconst { renderField } = require('corein');\r\nconst { FormGroup, Label, Input } = require('reactstrap');\r\n\r\nvar CheckboxTree = require('react-checkbox-tree');\r\nvar {Alert, Button} = require('reactstrap');\r\n\r\nconst CheckBoxNode = (props) => {\r\n    const { childrenTerms, level, taxonomyName } = props;\r\n    var a = $.map(childrenTerms,\r\n        (term, index) => {\r\n            const display = {\r\n                renderType: 'checkbox',\r\n                title: term.title\r\n            }\r\n            const taxName = `${taxonomyName}.${term.name}`;\r\n\r\n            return (\r\n                <div check key={index} className={`pl-${level}`}>\r\n                    <Field component={renderField} type=\"checkbox\" display={display} name={taxName}/>\r\n                    {term.childrenTerms &&\r\n                        <CheckBoxNode level={level + 1} childrenTerms={term.childrenTerms} taxonomyName={taxonomyName}/>}\r\n                </div>);\r\n        });\r\n\r\n    return <div className={`checkboxlist-${level === 0 ? 'root' : 'node'}`}>{a}</div>;\r\n};\r\n\r\nconst CheckboxList = (props) => {\r\n    const { terms, taxonomyName, label } = props;\r\n    return (\r\n        <div className=\"checkboxlist\">\r\n            <h4>{label}</h4>\r\n            {terms && <CheckBoxNode childrenTerms={terms} taxonomyName={taxonomyName} level={0}/>}\r\n        </div>);\r\n};\r\n\r\nconst CHECKBOXLIST = 'checkboxlist';\r\n\r\nconst TaxonomyFields = (props) => {\r\n    const { renderType, terms, taxonomyName, label  } = props;\r\n    switch (renderType) {\r\n        default:\r\n            return <CheckboxList terms={terms} taxonomyName={taxonomyName} label={label} />;\r\n    }\r\n};\r\n\r\nvar DynamicForm = (props) => {\r\n    const { formName, formData: { details, taxonomies }, close, error, handleSubmit, submitFunc, pristine, reset, submitting, submitSucceeded, display } = props;\r\n\r\n    return (\r\n        <div className=\"dynamic-form card-block\">\r\n            <form onSubmit={handleSubmit(submitFunc)}>\r\n                {display && <h1>{display.title}</h1>}\r\n                {display && <p className=\"text-muted\">{display.description}</p>}\r\n                \r\n                {!submitting && (error && <Alert color=\"danger\">{error}</Alert>)}\r\n                <div className=\"details\">\r\n                    {details.map((props, index) => {\r\n                        const {readonly, input: {name, value}, display} = props;\r\n                        return <Field key={index} component={renderField} readOnly={readonly} name={name} value={value} display={display} />;\r\n                    })}\r\n                </div>\r\n                <div className=\"taxonomies\">\r\n                    {\r\n                        taxonomies && taxonomies.map((props, index) => {\r\n                            return <TaxonomyFields key={index} renderType={props.renderType} taxonomyName={`taxonomies.${props.input.name}`} label={props.display.label} terms={props.terms} />;\r\n                        })\r\n                    }\r\n                </div>\r\n                <hr/>\r\n                <div className=\"actions\">\r\n                    <Button className=\"mr-1\" color=\"primary\" type=\"submit\" disabled={submitting}>{display ? display.submitLabel : \"Submit\"}</Button>\r\n                    <Button type=\"Button\" onClick={() => {\r\n                        close(formName);\r\n                    }} disabled={submitting}>{display ? display.dismissForm : \"Cancel\"}</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nmodule.exports = DynamicForm;","﻿const fmKeys = require('./fm-keys');\r\n\r\nconst fileUploaded = (fileObjectResult) => ({\r\n    type: fmKeys.fileUploaded,\r\n    file: fileObjectResult.result\r\n});\r\n\r\nconst loadFiles = (files) => ({\r\n    type: fmKeys.loadFiles,\r\n    files\r\n});\r\n\r\nconst fileChecked = (fileName, checked) => ({\r\n    type: fmKeys.fileChecked,\r\n    fileName: fileName,\r\n    checked\r\n});\r\n\r\nconst fileDelete = (fileName) => ({\r\n    type: fmKeys.fileDelete,\r\n    fileName\r\n});\r\n\r\nconst fileClick = (file) => ({\r\n    type: fmKeys.fileClick,\r\n    file\r\n});\r\n\r\nconst fileUpdate = (file) => ({\r\n    type: fmKeys.fileUpdate,\r\n    file\r\n});\r\n\r\nconst sidePanelToggle = (isOpen) => ({\r\n    type: fmKeys.sidePanelToggle,\r\n    isToggle: isOpen\r\n});\r\n\r\n\r\nconst asideTabAdd = (tabId, tabTitle, tabContent) => ({\r\n    type: fmKeys.asideTabAdd,\r\n    tabId, tabTitle, tabContent\r\n});\r\n\r\nconst asideTabRemove = (tabId) => ({\r\n    type: fmKeys.asideTabRemove,\r\n    tabId\r\n});\r\n\r\nconst asideTabChange = (tab) => ({\r\n    type: fmKeys.asideTabChange,\r\n    tab\r\n});\r\n\r\nmodule.exports = { fileUploaded, loadFiles, fileChecked, fileDelete, fileClick, fileUpdate, sidePanelToggle, asideTabAdd, asideTabRemove, asideTabChange };","﻿const $ = require('jquery');\r\n\r\nconst getFilesFromServer = (handler, selectFrom, take) => {\r\n    $.ajax({\r\n        url: \"/FileManager/GetFiles\",\r\n        data: { selectFrom: selectFrom, take: take },\r\n        method: \"GET\",\r\n        success: response => {\r\n            handler(response);\r\n        }\r\n    });\r\n}\r\n\r\nconst getFormInfoFromServer = (handler, fileName) => {\r\n    $.ajax({\r\n        url: '/FileManager/GetFormFor',\r\n        data: { fileName: fileName },\r\n        method: \"GET\",\r\n        success: handler\r\n    });\r\n}\r\n\r\nconst deleteFilesFromServer = (handler, fileNames) => {\r\n    $.ajax({\r\n        url: '/FileManager/DeleteFiles',\r\n        data: { fileNames },\r\n        method: 'DELETE',\r\n        success: (deleteResults) => {\r\n            handler(deleteResults);\r\n        }\r\n    });\r\n}\r\n\r\nconst updateFile = (handler, file) => {\r\n    $.ajax({\r\n        url: '/FileManager/Update',\r\n        data: { viewModel: file },\r\n        method: 'PUT',\r\n        success: response => {\r\n            handler(response);\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = { getFilesFromServer, getFormInfoFromServer, deleteFilesFromServer, updateFile};","﻿const react = require('react');\r\nconst $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { fileChecked, asideTabAdd, asideTabRemove } = require('./fm-actions');\r\nconst { getFormInfoFromServer } = require('./fm-ajaxs');\r\nconst { bindActionCreators } = require('redux');\r\nconst { validator } = require('corein');\r\nconst { reduxForm } = require('redux-form');\r\n\r\nconst fmKeys = require('./fm-keys');\r\n\r\nvar DynamicForm = require('./dynamicForm.jsx');\r\n\r\nclass FileItem extends react.Component {\r\n    onClick(event) {\r\n        const { onChecked, checkedFiles, options : { allowSelectMulti }} = this.props;\r\n\r\n        let $target = $(event.target),\r\n            fileName = $target.data('file-name'),\r\n            isCheckboxChecked = $target.prop('checked');\r\n\r\n        if(!isCheckboxChecked)\r\n            onChecked(fileName, isCheckboxChecked);\r\n        else\r\n            checkedFiles.push(fileName);\r\n\r\n        const $checkboxes = $('.thumb-checkbox');\r\n\r\n        let firstChecked = $checkboxes.filter('[data-file-name=\"' + checkedFiles[0] + '\"]')[0];\r\n\r\n        if (event.shiftKey && checkedFiles.length > 1) {\r\n            var start = $checkboxes.index(firstChecked),\r\n                end = $checkboxes.index(event.target);\r\n\r\n            $checkboxes.map((index, checkbox) => {\r\n                const isChecked = (end < start && (index >= end && index <= start)) || (end > start && (index >= start && index <= end));\r\n                checkbox.checked = isChecked;\r\n                onChecked(checkbox.getAttribute(\"data-file-name\"), isChecked);\r\n            });\r\n        }\r\n        else if (event.ctrlKey) {\r\n\r\n        }\r\n        else {\r\n            if (checkedFiles.length > 1) {\r\n                $target.prop('checked', true);\r\n                onChecked($target.data(\"file-name\"), true);\r\n            }\r\n\r\n            var $checkedCheckboxes = $checkboxes.filter(':checked').not($target);\r\n            $checkedCheckboxes.map((index, checkbox) => {\r\n                checkbox.checked = false;\r\n                onChecked(checkbox.getAttribute(\"data-file-name\"), false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    onInfoClick() {\r\n        const { asideTabAdd, asideTabRemove } = this.props;\r\n        const { updateFileSubmit } = require('./fm-formSubmits');\r\n        const formName = \"properties\";\r\n\r\n        getFormInfoFromServer((formInfoResult) => {\r\n            const fields = formInfoResult.result.details;\r\n            const validate = validator(fields);\r\n            const fieldValues = {}; \r\n            $.map(fields, (field) => {\r\n                const name = field.input.name;\r\n                const value = field.input.value;\r\n                fieldValues[name] = value;\r\n            });\r\n            DynamicForm = reduxForm({ form: 'fileProperty', validate })(DynamicForm);\r\n            DynamicForm = connect((state) => ({\r\n                initialValues: fieldValues,\r\n                formName,\r\n                formData: formInfoResult.result,\r\n                submitFunc: updateFileSubmit\r\n            }), (dispatch) => (bindActionCreators({ close: asideTabRemove}, dispatch)))(DynamicForm);\r\n\r\n            asideTabRemove(formName); \r\n            asideTabAdd(\r\n                formName,\r\n                '<i class=\"icon-wrench icons\"></i> ' + formInfoResult.fileName,\r\n                <DynamicForm />\r\n            );\r\n        }, this.props.data.fileName);\r\n    }\r\n\r\n    render() {\r\n        const { data: {fileId, fileName, meta: {type, src_thumb, ext}} } = this.props;\r\n        const fieldId = `file_${fileId}`;\r\n        const fieldName = `file[${fileId}]`;\r\n        return (\r\n            <div className=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 p-0\">\r\n                <div className=\"card card-fileThumb mb-1 mr-1\">\r\n                    <label className=\"fancy-checkbox-label\" htmlFor={fieldId}>\r\n                        <input type=\"checkbox\" className=\"thumb-checkbox\" id={fieldId} name={fieldName} data-file-id={fileId} data-file-name={fileName} onClick={this.onClick.bind(this)} />\r\n                        <span className=\"fancy-checkbox fancy-checkbox-img\"/>\r\n                        {(type === 'Image'\r\n                            ? <img src={src_thumb} alt={fileName}/>\r\n                            : <span className=\"fancy-thumb-icon\"><i className=\"fa fa-file\"></i> <b>{ext}</b></span>)}\r\n                    </label>\r\n                    <div className=\"file-info p-1\" onClick={this.onInfoClick.bind(this)}>\r\n                        <i className=\"fa fa-info\" aria-hidden=\"true\"></i>\r\n                        <span className=\"file-name\">{fileName}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst stateToProps = (state) => ({\r\n    options: state.fm.options,\r\n    checkedFiles: state.fm.checkedFiles\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    bindActionCreators({ onChecked: fileChecked, asideTabAdd, asideTabRemove }, dispatch)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, dispatchToProps)(FileItem);","﻿const $ = require('jquery');\r\nconst fmKeys = require('./fm-keys');\r\nconst { getFilesFromServer } = require('./fm-ajaxs');\r\nconst react = require('react');\r\nconst { connect } = require('react-redux');\r\nconst { loadFiles } = require('./fm-actions');\r\nconst { bindActionCreators } = require('redux');\r\n\r\nvar Button = require('reactstrap').Button;\r\nvar FileItem = require('./fm-fileItem');\r\n\r\nclass FileThumbList extends react.Component {\r\n    onLoadMoreBtnClick(event) {\r\n        const { files, loadFiles, resources, options: { itemPerLoad } } = this.props;\r\n        const $loadMoreBtn = $(event.target);\r\n\r\n        $loadMoreBtn.prop('disabled', true);\r\n        $loadMoreBtn.text(resources.onLoadMore);\r\n\r\n        getFilesFromServer(function (filesResult) {\r\n            loadFiles(filesResult);\r\n            if (filesResult.length < itemPerLoad) {\r\n                $loadMoreBtn.text(resources.noMore);\r\n            } else {\r\n                $loadMoreBtn.prop('disabled', false);\r\n                $loadMoreBtn.text(resources.loadMore);\r\n            }\r\n        }.bind(this),\r\n            files.length,\r\n            itemPerLoad);\r\n    }\r\n\r\n    render() {\r\n        const { files, resources } = this.props;\r\n        return (\r\n            <div id=\"FileThumbList\" className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {files.map(item => (\r\n                        <FileItem key={item.fileId} data={item} />\r\n                    ))}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Button id=\"LoadMoreBtn\" color=\"secondary\" onClick={this.onLoadMoreBtnClick.bind(this)}>{resources.loadMore}</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => ({\r\n    files: state.fm.files,\r\n    resources: state.fm.resources,\r\n    options: state.fm.options\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    bindActionCreators({ loadFiles }, dispatch)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, dispatchToProps)(FileThumbList);","﻿const $ = require('jquery');\r\nconst jFiler = require('jquery.filer');\r\nconst { bindActionCreators } = require('redux');\r\nconst { connect } = require('react-redux');\r\nconst { fileUploaded } = require('./fm-actions');\r\n\r\nvar { Progress } = require('reactstrap');\r\n\r\nclass JFiler extends React.Component {\r\n    componentDidMount() {\r\n        const $jFiler = $('#jFiler'),\r\n            $progressBar = $('.jFiler-container .progress-bar'),\r\n            $progressContainer = $('.jFiler-container .progress-container');\r\n\r\n        let opts = {\r\n            changeInput: '<div class=\"jFiler-input-dragDrop m-0 w-100\"><div class=\"jFiler-input-inner\"><div class=\"jFiler-input-icon\"><i class=\"icon-jfi-cloud-up-o\"></i></div><div class=\"jFiler-input-text\"><h3>Drag&Drop files here</h3> <span>or</span></div><a class=\"jFiler-input-choose-btn blue\">Browse Files</a></div></div>',\r\n            showThumbs: false,\r\n            theme: \"dragdropbox\",\r\n            templates: {\r\n                progressBar: ''\r\n            },\r\n            dragDrop: {\r\n\r\n            },\r\n            uploadFile: {\r\n                url: '/filemanager/upload',\r\n                data: {},\r\n                type: 'POST',\r\n                enctype: 'multipart/form-data',\r\n                synchron: true,\r\n                beforeSend: () => {\r\n                    $progressContainer.removeClass('collapse');\r\n                },\r\n                success: (fileObjectResult) => {\r\n                    if (fileObjectResult.resultState === 1) {\r\n                        const { uploaded } = this.props;\r\n                        uploaded(fileObjectResult);\r\n                    }\r\n                },\r\n                onProgress: (progress) => {\r\n                    $progressBar.css('width', progress + '%');\r\n                },\r\n                onComplete: () => {\r\n                    $progressContainer.addClass('collapse');\r\n                    $progressBar.css('width', '0%');\r\n                }\r\n            }\r\n        };\r\n        $jFiler.filer(opts);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jFiler-container\">\r\n                <input type=\"file\" id=\"jFiler\" name=\"jFiler\" multiple=\"multiple\" className=\"collapse\" />\r\n                <div className=\"progress-container collapse mt-1\">\r\n                    <Progress />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    bindActionCreators({ uploaded : fileUploaded }, dispatch)\r\n);\r\n\r\nmodule.exports = connect(state => state, dispatchToProps)(JFiler);\r\n","﻿var $ = require('jquery');\r\nvar {SubmissionError} = require('redux-form');\r\n\r\nconst updateFileRequest = data => new Promise((resolve, reject) =>\r\n    $.ajax({\r\n        url: '/filemanager/update',\r\n        method: 'POST',\r\n        data: data,\r\n        success: (response) => {\r\n            if (response.result === \"success\") {\r\n                resolve(response);\r\n            } else {\r\n                reject(response);\r\n            }\r\n        },\r\n        error: (response) => {\r\n            reject(response);\r\n        }\r\n    })\r\n);\n\nfunction updateFileSubmit(values) {\r\n    return updateFileRequest(values)\r\n        .then((response) => {\r\n            window.location.href = response.returnUrl;\r\n        })\r\n        .catch((response) => {\r\n            if (response.result && response.result === \"error\") {\r\n                throw new SubmissionError(response.errors);\r\n            } else {\r\n                throw new SubmissionError({ _error: 'Update failed!' });\r\n            }\r\n        });\r\n}\r\n\r\nmodule.exports = {\r\n    updateFileSubmit\r\n}","﻿const react = require('react');\r\nconst $ = require('jquery');\r\nconst fmReducer = require('./fm-reducer.jsx');\r\nconst { getFilesFromServer } = require('./fm-ajaxs');\r\nconst { connect } = require('react-redux');\r\nconst { loadFiles, fileDelete } = require('./fm-actions');\r\nconst { bindActionCreators } = require('redux');\r\n\r\nvar { Button } = require('reactstrap');\r\n\r\nconst { deleteFilesFromServer } = require('./fm-ajaxs');\r\n\r\nvar JFiler = require('./fm-filer.jsx');\r\nvar FileList = require('./fm-fileList');\r\nvar SidePanel = require('./fm-sidePanel');\r\n\r\nclass FileManager extends react.Component {\r\n    deleteBtnClicked(event) {\r\n        var $button = $(event.target);\r\n        $button.prop('disabled', true);\r\n        const { fileDelete, uncheked, checkedFiles } = this.props;\r\n        deleteFilesFromServer((deleteResults) => {\r\n            deleteResults.map((result, index) => {\r\n                if (result.resultState === 1)\r\n                    fileDelete(result.fileName);\r\n\r\n                if (checkedFiles.length === index + 1)\r\n                    $button.prop('disabled', false);\r\n            });\r\n        }, checkedFiles);\r\n    }\r\n\r\n    render() {\r\n        const { files, loadFiles, deleteFiles, options: {initLoadItems, showPanel} } = this.props;\r\n        return (\r\n            <div id=\"file-manager\">\r\n                <div id=\"UploadPane\">\r\n                    <div className=\"card card-block\">\r\n                        <JFiler/>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-block\">\r\n                            <Button color=\"danger\" onClick={this.deleteBtnClicked.bind(this)} className=\"pull-left\"><i className=\"icon-trash icons\"></i> Delete</Button>\r\n                        </div>\r\n                    </div>\r\n                    {files.length !== 0 ? <FileList /> : getFilesFromServer(loadFiles, 0, initLoadItems)}\r\n                    <SidePanel/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n    files: state.fm.files,\r\n    options: state.fm.options,\r\n    checkedFiles: state.fm.checkedFiles\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => (\r\n    bindActionCreators({ loadFiles, fileDelete}, dispatch)\r\n);\r\n\r\nmodule.exports = {\r\n    FileManager: connect(stateToProps, dispatchToProps)(FileManager),\r\n    fmReducer\r\n};","﻿const fmKeys = {\r\n    fileUploaded: 'FILE_UPLOADED',\r\n    fileChecked: 'FILE_CHEKED',\r\n    fileDelete: 'FILE_DELETE',\r\n    fileClick: 'FILE_CLICK',\r\n    fileUpdate: 'FILE_UPDATE',\r\n    sidePanelToggle: 'SIDEPANEL_TOGGLE',\r\n    loadFiles: 'LOAD_FILES',\r\n    asideTabAdd: 'ASIDE_TAB_ADD',\r\n    asideTabRemove: 'ASIDE_TAB_REMOVE',\r\n    asideTabChange: 'ASIDE_TAB_CHANGE'\r\n};\r\n\r\nmodule.exports = fmKeys;","﻿const $ = require('jquery');\r\nconst fmKeys = require('./fm-keys');\r\nconst sift = require('sift');\r\n\r\nconst initState = {\r\n    files: [],\r\n    checkedFiles: [],\r\n    resources: {\r\n        loadMore: \"Load more\",\r\n        onload: \"Please wait...\",\r\n        noMore: \"No more!\"\r\n    },\r\n    options: {\r\n        allowSelectMulti: true,\r\n        initLoadItems: 30,\r\n        itemPerLoad: 12\r\n    },\r\n    aside: {\r\n        activeTab: null,\r\n        isOpen: false,\r\n        tabs: []\r\n    }\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n\r\n    switch (action.type) {\r\n        case fmKeys.fileUploaded:\r\n            newState.files.unshift(action.file);\r\n            break;\r\n        case fmKeys.loadFiles:\r\n            newState.files = newState.files.concat(action.files);\r\n            break;\r\n        case fmKeys.fileChecked:\r\n            if (action.checked) {\r\n                if (state.checkedFiles.indexOf(action.fileName) < 0)\r\n                    newState.checkedFiles.push(action.fileName);\r\n            } else {\r\n                let index = state.checkedFiles.indexOf(action.fileName);\r\n                if (index >= 0)\r\n                    newState.checkedFiles.splice(index, 1);\r\n            }\r\n            break;\r\n        case fmKeys.fileDelete:\r\n            //remove file from checked list\r\n            var fileIndex = state.checkedFiles.indexOf(action.fileName);\r\n            if (fileIndex >= 0)\r\n                newState.checkedFiles.splice(fileIndex, 1);\r\n\r\n            newState.files = sift({ fileName: { $not: action.fileName } }, newState.files);\r\n            break;\r\n        case fmKeys.asideTabAdd:\r\n            newState.aside.tabs.push({\r\n                id: action.tabId,\r\n                title: action.tabTitle,\r\n                content: action.tabContent\r\n            });\r\n            newState.aside.isOpen = true;\r\n            newState.aside.activeTab = action.tabId;\r\n            break;\r\n        case fmKeys.asideTabRemove:\r\n            newState.aside.tabs = newState.aside.tabs.filter(tab => tab.id !== action.tabId);\r\n            if (newState.aside.tabs.length === 0) {\r\n                newState.aside.isOpen = false;\r\n            } else {\r\n                newState.aside.activeTab = newState.aside.tabs[0].id;\r\n            }\r\n            break;\r\n        case fmKeys.asideTabChange:\r\n            if (newState.aside.activeTab !== action.tab.id)\r\n                newState.aside.activeTab = action.tab.id;\r\n            break;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n}\r\n\r\nmodule.exports = reducer;","﻿const react = require('react');\r\nconst reactDOM = require('react-dom');\r\nconst $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst classnames = require('classnames');\r\nconst { bindActionCreators } = require('redux');\r\nconst { asideTabChange } = require('./fm-actions');\r\n\r\nvar { Nav, NavItem, NavLink, TabContent, TabPane } = require('reactstrap');\r\n\r\nclass SidePanel extends react.Component {\r\n    render() {\r\n        const { isOpen, activeTab, tabs, tabChange } = this.props;\r\n        return (\r\n            <aside className={\"aside-menu\" + (isOpen && \" aside-menu-hidden\")}>\r\n                {activeTab && (\r\n                    <div className=\"tab-container\">\r\n                        <Nav tabs>\r\n                            {tabs.map((tab) => (\r\n                            <NavItem key={tab.id} >\r\n                                    <NavLink className={classnames({ active: activeTab === tab.id })}\r\n                                        onClick={() => { tabChange(tab); }}\r\n                                        dangerouslySetInnerHTML={{ __html: tab.title }}></NavLink>\r\n                                </NavItem>\r\n                            ))}\r\n                        </Nav>\r\n                        <TabContent activeTab={activeTab}>\r\n                            {tabs.map((tab) => (\r\n                            <TabPane key={tab.id} tabId={tab.id}>\r\n                                    {tab.content}\r\n                                </TabPane>\r\n                            ))}\r\n                        </TabContent>\r\n                    </div>)\r\n                 }\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n    isOpen: state.fm.aside.isOpen, \r\n    activeTab: state.fm.aside.activeTab,\r\n    tabs: state.fm.aside.tabs\r\n});\r\n\r\nconst distpatchToProps = (dispatch) => (\r\n    bindActionCreators({ tabChange: asideTabChange}, dispatch)\r\n    );\r\n\r\nmodule.exports = connect(stateToProps, distpatchToProps)(SidePanel);\r\n","﻿const react = require('react');\r\nconst { combineReducers, createStore } = require('redux');\r\nvar { Provider } = require('react-redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nvar { FileManager, fmReducer } = require('./components/fm-index.jsx');\r\n\r\nconst reducers = {\r\n    form: formReducer,\r\n    fm: fmReducer\r\n}\r\n\r\nconst reducer = combineReducers(reducers);\r\n\r\nconst store = createStore(reducer); \r\n\r\nconst FileManagerIndex = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <FileManager />\r\n        </Provider>\r\n        );\r\n}\r\n\r\nglobal.FileManagerIndex = FileManagerIndex;","﻿var React = require('react');\r\nvar {Input, InputGroup, InputGroupAddon, FormFeedback, FormGroup, FormText, Label} = require('reactstrap');\r\n\r\nconst RenderInput = (props) => {\r\n    const {input, id, type, placeholder, validationState} = props;\r\n\r\n    return (\r\n        <Input {...input} id={id} state={validationState} type={type} placeholder={placeholder}/>\r\n    );\r\n}\r\n\r\nconst RenderInputGroup = (props) => {\r\n    const {input, display: {id, type, label, displayName, placeholder, prompt}, meta: {touched, error, warning}} = props;\r\n\r\n    var validationState = touched ? (error ? 'danger' : (warning ? 'warning' : 'success')) : undefined;\r\n\r\n    return (\r\n        <FormGroup color={validationState} className=\"mb-1\">\r\n            <InputGroup>\r\n                <InputGroupAddon dangerouslySetInnerHTML={{ __html: label }} />\r\n                <Input {...input} id={id} state={validationState} type={type} placeholder={placeholder ? placeholder : displayName} />\r\n            </InputGroup>\r\n            {prompt && <FormText color=\"muted\">{prompt}</FormText>}\r\n            {touched && ((error && <FormFeedback>{error}</FormFeedback>) || (warning && <FormFeedback>{warning}</FormFeedback>))}\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst RenderFormGroup = (props) => {\r\n    const {input, display: {id, type, label, displayName, placeholder, prompt}, meta: {touched, error, warning}} = props;\r\n\r\n    var validationState = touched ? (error ? 'danger' : (warning ? 'warning' : 'success')) : undefined;\r\n\r\n    return (\r\n        <FormGroup color={validationState} className=\"mb-1\">\r\n            <Label for={id} dangerouslySetInnerHTML={{ __html: label }}/>\r\n            <Input {...input} id={id} state={validationState} type={type} placeholder={placeholder ? placeholder : displayName} />\r\n            {prompt && <FormText color=\"muted\">{prompt}</FormText>}\r\n            {touched && ((error && <FormFeedback>{error}</FormFeedback>) || (warning && <FormFeedback>{warning}</FormFeedback>))}\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst RenderCheckBox = (props) => {\r\n    const {input, display: {id, title, placeholder}} = props;\r\n    return (\r\n        <FormGroup check>\r\n            <Label check>\r\n                <Input {...input} id={id} type=\"checkbox\" />\r\n                {' ' + (title ? title : placeholder)}\r\n            </Label>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nconst renderField = props => {\r\n    const {display: {renderType}} = props;\r\n    var rt = renderType.toLowerCase();\r\n\r\n    if (rt === \"inputgroup\") {\r\n        return RenderInputGroup(props);\r\n    } else if (rt === 'formgroup'){\r\n        return RenderFormGroup(props);\r\n    } else if (rt === 'checkbox') {\r\n        return RenderCheckBox(props);\r\n    }\r\n}\r\n\r\nmodule.exports = renderField;","﻿const isType = (value, type) => {\r\n    switch (type) {\r\n        case 'email':\r\n            return value && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\r\n    }\r\n    return false;\r\n}\r\n\r\nconst validator = validating => values => {\r\n    const errors = {};\r\n\r\n    for (var property in validating) {\r\n\r\n        var fieldName = validating[property].input.name;\r\n\r\n        var hasRequired = validating[property].validate.required;\r\n        var typeRequired = validating[property].validate.type;\r\n        var minLengthRequired = validating[property].validate.minLength;\r\n        var maxLengthRequired = validating[property].validate.maxLength;\r\n        var hasCompare = validating[property].validate.compare;\r\n\r\n        var hasContainLowercase = validating[property].validate.containLower;\r\n        var hasContainUppercase = validating[property].validate.containUpper;\r\n        var hasContainNumber = validating[property].validate.containNumber;\r\n        var hasContainSpecialChar = validating[property].validate.containSpecial;\r\n\r\n        if (hasRequired && hasRequired.value && !values[fieldName]) {\r\n            errors[fieldName] = hasRequired.error;\r\n        }\r\n        else if (typeRequired && !isType(values[fieldName], typeRequired.value)) {\r\n            errors[fieldName] = typeRequired.error;\r\n        }\r\n        else if (minLengthRequired && values[fieldName] && values[fieldName].length < minLengthRequired.value) {\r\n            errors[fieldName] = minLengthRequired.error;\r\n        }\r\n        else if (hasCompare && values[fieldName] != values[hasCompare.value]) {\r\n            errors[fieldName] = hasCompare.error;\r\n        }\r\n        else if (hasContainLowercase && !/(?=.*[a-z])/.test(values[fieldName])) {\r\n            errors[fieldName] = hasContainLowercase.error;\r\n        }\r\n        else if (hasContainUppercase && !/(?=.*[A-Z])/.test(values[fieldName])) {\r\n            errors[fieldName] = hasContainUppercase.error;\r\n        }\r\n        else if (hasContainNumber && !/(?=.*[0-9])/.test(values[fieldName])) {\r\n            errors[fieldName] = hasContainNumber.error;\r\n        }\r\n        else if (hasContainSpecialChar && !/(?=.*[!@#$%^&*])/.test(values[fieldName])) {\r\n            errors[fieldName] = hasContainSpecialChar.error;\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nmodule.exports = validator","﻿var renderField = require('./components/formField.jsx');\r\nvar validator = require('./components/validator');\r\n\r\nmodule.exports = {\r\n    renderField,\r\n    validator\r\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;base64,"}