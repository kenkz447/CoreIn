{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","homeclick/project.jsx","homeclick/project/create.jsx","homeclick/project/create/components/form.jsx","homeclick/project/create/redux/actions.jsx","homeclick/project/create/redux/keys.jsx","homeclick/project/create/redux/reducer.jsx","homeclick/project/index.jsx","homeclick/project/index/components/table.jsx","homeclick/project/index/redux/reducer.jsx","homeclick/project/shared/components/layout-modal.jsx","index.jsx"],"names":[],"mappings":"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","file":"homeclick.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿const index = require('./project/index');\r\nconst create = require('./project/create');\r\n\r\nmodule.exports = {\r\n    index,\r\n    create\r\n}","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore } = require('redux');\r\nconst { Provider } = require('react-redux');\r\nconst Form = require('./create/components/form');\r\n\r\nconst reducer = require('./create/redux/reducer');\r\n\r\nconst store = createStore(reducer);\r\n\r\nconst Page = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-block\">\r\n                        Title\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-block\">\r\n                        <Form />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Provider>\r\n        );\r\n};\r\n\r\nmodule.exports = Page;","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst { form } = Corein;\r\nconst { loadNewForm } = require('../redux/actions');\r\nconst { reduxForm, getFormValues } = require('redux-form');\r\n\r\nconst LayoutModal = require('../../shared/components/layout-modal').default;\r\nconst { openLayoutModal } = require('../../shared/components/layout-modal').actions;\r\nconst {SubmissionError} = require('redux-form');\r\n\r\nfunction formAjaxPost(url, data, method) {\r\n    return new Promise((resolve, reject) =>\r\n        $.ajax({\r\n            url: url,\r\n            method: method,\r\n            data: data,\r\n            success: (response) => {\r\n                if (response.resultState !== 0) {\r\n                    resolve(response);\r\n                } else {\r\n                    reject(response);\r\n                }\r\n            },\r\n            error: (response) => {\r\n                reject(response);\r\n            }\r\n        })\r\n    );\r\n}\r\n\r\nfunction formSubmit(props) {\r\n    const {url, method, successAction} = props;\r\n\r\n    return function (values) {\r\n        formAjaxPost(url, values, method)\r\n            .then((response) => {\r\n                successAction(response);\r\n            })\r\n            .catch((response) => {\r\n                if (response.result && response.result === \"error\") {\r\n                    throw new SubmissionError(response.errors);\r\n                } else {\r\n                    throw new SubmissionError({ _error: 'Something wrong?' });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getCommands = this.getCommands.bind(this);\r\n        this.getForm = this.getForm.bind(this);\r\n    }\r\n\r\n    getCommands() {\r\n        const { openLayoutModal } = this.props;\r\n\r\n        return {\r\n            SET_LAYOUT: (formValues, fieldData) => {\r\n                var roomName = fieldData.input.name.split('.')[1];\r\n\r\n                const roomArrayIndex = /\\[([^]+)\\]/.exec(roomName)[1];\r\n                const room = formValues.details['rooms'][roomArrayIndex];\r\n                const layoutImage = room.layoutimage;\r\n                if (layoutImage)\r\n                    openLayoutModal(layoutImage, fieldData.input.value, fieldData.input.onChange, fieldData.fileManagerModalToggle);\r\n            }\r\n        };\r\n    }\r\n\r\n    getForm() {\r\n        const { loadNewForm } = this.props;\r\n        $.get(\"/project/GetNewProjectForm\", (formResult) => {\r\n            loadNewForm(formResult);\r\n        });\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { formData, formValues } = this.props;\r\n\r\n        if (!formData)\r\n            return this.getForm();\r\n\r\n        const vatidateData = { details: formData.details, meta: formData.meta };\r\n        const validate = form.validator(vatidateData);\r\n\r\n        const onSubmit = formSubmit({\r\n            url: '/project/create',\r\n            method: 'POST',\r\n            successAction: () => {\r\n\r\n            }\r\n        });\r\n\r\n        var ReduxDynamicForm = reduxForm({\r\n            form: 'newProject',\r\n            validate,\r\n            formData,\r\n            commands: this.getCommands(),\r\n            onSubmit,\r\n            initialValues: formValues || formData.initialValues,\r\n        })(form.default);\r\n\r\n        ReduxDynamicForm = connect(state => ({ formValues: getFormValues('newProject')(state) }))(ReduxDynamicForm);\r\n\r\n        return (\r\n            <div>\r\n                <ReduxDynamicForm />\r\n                <LayoutModal />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        formData: state.page.formData,\r\n    }\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ loadNewForm, openLayoutModal }, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(ProjectForm);\r\n","﻿const keys = require('./keys');\r\n\r\nmodule.exports = {\r\n    loadNewForm: (formData) => ({\r\n        type: keys.loadNewForm,\r\n        formData\r\n    })\r\n};","﻿module.exports = {\r\n    loadNewForm: \"LOAD_NEW_FORM\"\r\n};","﻿const $ = require('jquery');\r\nconst keys = require('./keys');\r\nconst { combineReducers } = require('redux');\r\nconst formReducer = require('redux-form').reducer;\r\n\r\nconst { tabControlReducer, fileManager: { fmReducer } } = Corein;\r\n\r\nconst initialState = {\r\n    formData: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.loadNewForm:\r\n            newState.formData = action.formData;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    page: reducer,\r\n    form: formReducer,\r\n    fm: fmReducer,\r\n    fmTabControl: tabControlReducer,\r\n    layoutModal: require('../../shared/components/layout-modal').reducer\r\n});","﻿const $ = require('jquery');\r\nconst { combineReducers, createStore, bindActionCreators } = require('redux');\r\nconst {connect} = require('react-redux');\r\n\r\nconst { Provider } = require('react-redux');\r\nconst Table = require('./index/components/table');\r\nconst DynamicForm = Corein;\r\nconst {Button} = require('reactstrap');\r\n\r\nconst tableActions = Corein.table.actions;\r\n\r\nconst reducer = combineReducers({\r\n    index: require('./index/redux/reducer')\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nvar PageContent = (props) => {\r\n    const { deleteSelectedRows } = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"card-block\">\r\n                    <Button color=\"primary\">Create new</Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"card\">\r\n                <div className=\"card-block\">\r\n                    <Table />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return ({\r\n\r\n    });\r\n}\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({}, reducer)\r\n);\r\n\r\nPageContent = connect(stateToProps, reducerToProps)(PageContent);\r\n\r\nmodule.exports = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <PageContent />\r\n        </Provider>\r\n    );\r\n};","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\n\r\nconst Table = Corein.table.default;\r\nconst tableActions = Corein.table.actions;\r\nconst {Button} = require('reactstrap');\r\n\r\nfunction renderColumn(columns) {\r\n    const result = [];\r\n\r\n    for (var column in columns) {\r\n\r\n    }\r\n}\r\n\r\nclass ReduxTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getColumns = this.getColumns.bind(this);\r\n    }\r\n\r\n    getColumns() {\r\n        const { selectRow, selectedRows } = this.props;\r\n\r\n        return [\r\n            {\r\n                header: \"\",\r\n                accessor: 'id',\r\n                render: row => (\r\n                    <div>\r\n                        <input type=\"checkbox\"\r\n                            onClick={() => {\r\n                                selectRow(row.index);\r\n                            }} />\r\n                    </div>\r\n                ),\r\n                width: 22,\r\n                sortable: false,\r\n                hideFilter: true\r\n            },\r\n            {\r\n                header: \"Thumbnail\",\r\n                accessor: 'thumbnail',\r\n                render: row => (<div><img className=\"table-thumbnail\" src={row.value} /></div>),\r\n                width: 160,\r\n                sortable: false,\r\n                hideFilter: true\r\n            }, {\r\n                header: \"Title\",\r\n                accessor: 'title'\r\n            }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const {columns, data, init, deleteSelectedRows} = this.props;\r\n\r\n        if (!columns) {\r\n            init({ columns: this.getColumns(), dataUrl: '/project/GetTableData' });\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"mb-1 text-right\">\r\n                    <Button className=\"btn-circle\" outline color=\"danger\"\r\n                        onClick={() => {\r\n                            deleteSelectedRows();\r\n                        }}><i className=\"fa fa-remove\" /></Button>\r\n                </div>\r\n                <Table {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return state.index.table\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators(tableActions, reducer)\r\n);\r\n\r\nmodule.exports = connect(stateToProps, reducerToProps)(ReduxTable);\r\n","﻿const $ = require('jquery');\r\nconst { combineReducers } = require('redux');\r\n\r\nconst { table } = Corein;\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nmodule.exports = combineReducers({\r\n    reducer, table: table.reducer\r\n});","﻿const $ = require('jquery');\r\nconst { connect } = require('react-redux');\r\nconst { bindActionCreators } = require('redux');\r\nconst {Modal, ModalHeader, ModalBody, ModalFooter, Button} = require('reactstrap');\r\n\r\nconst Slider = require('rc-slider');\r\n\r\nconst keys = {\r\n    toggle: 'TOGGLE',\r\n    openLayoutModal: 'OPEN_LAYOUT_MODAL',\r\n    addValue: 'ADD_VALUE',\r\n    removeSelectedValue: 'REMOVE_VALUE',\r\n    selectValueIndex: 'SELECT_VALUE_INDEX',\r\n    updateValue: 'UPDATE_VALUE'\r\n}\r\n\r\nconst actions = {\r\n    toggle: () => ({\r\n        type: keys.toggle\r\n    }),\r\n\r\n    openLayoutModal: (layoutImage, fieldValue, field_onChange, fileManagerModalToggle) => ({\r\n        type: keys.openLayoutModal,\r\n        layoutImage,\r\n        fieldValue,\r\n        field_onChange,\r\n        fileManagerModalToggle\r\n    }),\r\n\r\n    addValue: (value) => ({\r\n        type: keys.addValue,\r\n        value\r\n    }),\r\n\r\n    removeSelectedValue: () => ({\r\n        type: keys.removeSelectedValue\r\n    }),\r\n\r\n    selectValueIndex: (index) => ({\r\n        type: keys.selectValueIndex,\r\n        index\r\n    }),\r\n\r\n    updateValue: (value) => ({\r\n        type: keys.updateValue,\r\n        value\r\n    })\r\n}\r\n\r\nconst initialState = {\r\n    values: [],\r\n    isOpen: false,\r\n    layoutImage: null,\r\n    field_onChange: null,\r\n    fileManagerModalToggle: null,\r\n    selectedIndex: -1\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = $.extend(true, {}, state);\r\n    switch (action.type) {\r\n        case keys.toggle:\r\n            newState.isOpen = !newState.isOpen;\r\n            selectedIndex = -1;\r\n            break;\r\n        case keys.openLayoutModal:\r\n            newState.layoutImage = action.layoutImage;\r\n            newState.field_onChange = action.field_onChange;\r\n            newState.fileManagerModalToggle = action.fileManagerModalToggle;\r\n\r\n            newState.values = action.fieldValue ? JSON.parse(action.fieldValue) : [];\r\n\r\n            newState.isOpen = true;\r\n            break;\r\n        case keys.addValue:\r\n            newState.values.push(action.value);\r\n            newState.selectedIndex = newState.values.length - 1;\r\n            break;\r\n        case keys.removeSelectedValue:\r\n            newState.values.splice(newState.selectedIndex, 1);\r\n            newState.selectedIndex = -1;\r\n            break;\r\n        case keys.selectValueIndex:\r\n            newState.selectedIndex = action.index;\r\n            break;\r\n        case keys.updateValue:\r\n            newState.values[newState.selectedIndex] = action.value;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\nclass LayoutModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.imageClick = this.imageClick.bind(this);\r\n        this.okButtonClick = this.okButtonClick.bind(this);\r\n        this.selectImgBtnClick = this.selectImgBtnClick.bind(this);\r\n        this.deleteBtnClick = this.deleteBtnClick.bind(this);\r\n        this.onSliderChange = this.onSliderChange.bind(this);\r\n    }\r\n\r\n    imageClick(e) {\r\n        const { addValue } = this.props;\r\n\r\n        const $target = $(e.target);\r\n\r\n        const currentImgSize = {\r\n            w: $target.width(),\r\n            h: $target.height()\r\n        }\r\n\r\n        const imgFileSize = {\r\n            w: $target.prop('naturalWidth'),\r\n            h: $target.prop('naturalHeight')\r\n        }\r\n\r\n        var offset_t = $target.offset().top - $(window).scrollTop();\r\n        var offset_l = $target.offset().left - $(window).scrollLeft();\r\n\r\n        var left = Math.round((e.clientX - offset_l));\r\n        var top = Math.round((e.clientY - offset_t));\r\n\r\n        var percX = (left / $target.width() * 100).toFixed(3);\r\n        var percY = (top / $target.height() * 100).toFixed(3);\r\n\r\n        addValue({ image: '', rotate: 0, x: percX, y: percY });\r\n    }\r\n\r\n    deleteBtnClick() {\r\n        const { removeSelectedValue } = this.props;\r\n        removeSelectedValue();\r\n    }\r\n\r\n    selectImgBtnClick() {\r\n\r\n        const { values, selectedIndex, fileManagerModalToggle, toggle, updateValue } = this.props;\r\n\r\n        fileManagerModalToggle((files) => {\r\n            var file = files[0]\r\n\r\n            if (!file)\r\n                return;\r\n\r\n            const selectedValue = values[selectedIndex];\r\n            selectedValue.image = file.meta.src;\r\n            updateValue(selectedValue);\r\n        });\r\n    }\r\n\r\n    okButtonClick() {\r\n        const {changeFieldValue, toggle, values} = this.props;\r\n\r\n        toggle();\r\n        changeFieldValue(JSON.stringify(values));\r\n    }\r\n\r\n    onSliderChange(e) {\r\n        const { values, selectedIndex, updateValue } = this.props;\r\n\r\n        const selectedValue = values[selectedIndex];\r\n        selectedValue.rotate = e;\r\n        updateValue(selectedValue);\r\n    }\r\n\r\n    render() {\r\n        const {selectedIndex, values, layoutImage, toggle, isOpen, selectValueIndex, updateValue} = this.props;\r\n\r\n        var selectedValue = values[selectedIndex];\r\n\r\n        return (\r\n            <Modal className=\"modal-lg\" isOpen={isOpen} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"layout-modal\">\r\n                        <div className=\"arrow-container\">\r\n                            <img src={layoutImage} className=\"w-100\" onClick={this.imageClick} />\r\n                            {\r\n                                values.map((data, index) => {\r\n                                    const divStyle = {\r\n                                        transform: `rotate(${data.rotate}deg)`,\r\n                                        left: `calc(${data.x}% - 10px)`,\r\n                                        top: `calc(${data.y}% - 10px)`,\r\n                                    };\r\n\r\n                                    return (\r\n                                        <div key={index} style={divStyle} className=\"arrow\" onClick={() => { selectValueIndex(index); }}>\r\n                                            \r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            selectedValue &&\r\n                            <div className=\"controls\" style={{ left: 'calc(' + selectedValue.x + \"% + 20px)\", top: 'calc(' + selectedValue.y + \"% - 0px)\" }}>\r\n                                <Button onClick={this.selectImgBtnClick}>\r\n                                    <i className=\"fa fa-picture-o\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                <Slider className=\"slider\" min={0} max={360} defaultValue={3} value={selectedValue.rotate}\r\n                                    onChange={(e) => {\r\n                                        selectedValue.rotate = e;\r\n                                        updateValue(selectedValue);\r\n                                    }} />\r\n                                <Button onClick={this.deleteBtnClick}>\r\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"secondary\" onClick={this.okButtonClick}>OK</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        values: state.layoutModal.values,\r\n        isOpen: state.layoutModal.isOpen,\r\n        layoutImage: state.layoutModal.layoutImage,\r\n        changeFieldValue: state.layoutModal.field_onChange,\r\n        fileManagerModalToggle: state.layoutModal.fileManagerModalToggle,\r\n        selectedIndex: state.layoutModal.selectedIndex,\r\n    }\r\n};\r\n\r\nconst reducerToProps = (reducer) => (\r\n    bindActionCreators({ toggle: actions.toggle, addValue: actions.addValue, selectValueIndex: actions.selectValueIndex, removeSelectedValue: actions.removeSelectedValue, updateValue: actions.updateValue }, reducer)\r\n);\r\n\r\nmodule.exports = {\r\n    default: connect(stateToProps, reducerToProps)(LayoutModal),\r\n    reducer,\r\n    actions\r\n}","﻿const project = require('./homeclick/project');\r\n\r\nglobal.Homeclick = {\r\n    project\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;base64,"}